var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return value
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
goog.exportSymbol("cljs.core.set_print_fn_BANG_", cljs.core.set_print_fn_BANG_);
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:flush-on-newline", cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0:readably", cljs.core._STAR_print_readably_STAR_, "\ufdd0:meta", cljs.core._STAR_print_meta_STAR_, "\ufdd0:dup", cljs.core._STAR_print_dup_STAR_], true)
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3941__auto__ = goog.isString(x);
  if(and__3941__auto__) {
    return!(x.charAt(0) === "\ufdd0")
  }else {
    return and__3941__auto__
  }
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0:else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3941__auto__ = ty;
    if(cljs.core.truth_(and__3941__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3941__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__438758__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__438758 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438758__delegate.call(this, array, i, idxs)
    };
    G__438758.cljs$lang$maxFixedArity = 2;
    G__438758.cljs$lang$applyTo = function(arglist__438759) {
      var array = cljs.core.first(arglist__438759);
      arglist__438759 = cljs.core.next(arglist__438759);
      var i = cljs.core.first(arglist__438759);
      var idxs = cljs.core.rest(arglist__438759);
      return G__438758__delegate(array, i, idxs)
    };
    G__438758.cljs$core$IFn$_invoke$arity$variadic = G__438758__delegate;
    return G__438758
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val
  };
  var aset__4 = function() {
    var G__438760__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv)
    };
    var G__438760 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if(arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__438760__delegate.call(this, array, idx, idx2, idxv)
    };
    G__438760.cljs$lang$maxFixedArity = 3;
    G__438760.cljs$lang$applyTo = function(arglist__438761) {
      var array = cljs.core.first(arglist__438761);
      arglist__438761 = cljs.core.next(arglist__438761);
      var idx = cljs.core.first(arglist__438761);
      arglist__438761 = cljs.core.next(arglist__438761);
      var idx2 = cljs.core.first(arglist__438761);
      var idxv = cljs.core.rest(arglist__438761);
      return G__438760__delegate(array, idx, idx2, idxv)
    };
    G__438760.cljs$core$IFn$_invoke$arity$variadic = G__438760__delegate;
    return G__438760
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset
}();
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._count[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._count["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._empty[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._empty["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._conj[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__3128__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__3128__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._first[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rest[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._next[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__3128__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__3128__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._key[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._val[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._val["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._peek[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._peek["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._pop[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__3128__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__3128__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__3128__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._meta[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__3128__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._with_meta[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._with_meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__3128__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__3128__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._kv_reduce[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__3128__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._equiv[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._equiv["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__3128__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._hash[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._hash["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__3128__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._seq[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rseq[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rseq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._entry_key[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._entry_key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._comparator[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._comparator["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = {};
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__3128__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._write[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._write["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__3128__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._flush[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._flush["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__3128__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._pr_writer[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pr_writer["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3941__auto__ = d;
    if(and__3941__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__3128__auto__ = d == null ? null : d;
    return function() {
      var or__3943__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__3128__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._notify_watches[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._notify_watches["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__3128__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._add_watch[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__3128__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._remove_watch[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._as_transient[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._as_transient["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__3128__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__3128__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__3128__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__3128__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__3128__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__3128__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__3128__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__3128__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._compare[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._compare["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._drop_first[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._drop_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_first[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_rest[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__3128__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_next[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = {};
cljs.core._name = function _name(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__3128__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._name[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._name["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__3128__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._namespace[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._namespace["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
goog.provide("cljs.core.StringBufferWriter");
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  return null
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb)
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
goog.provide("cljs.core.Symbol");
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  if(self__._hash === -1) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name));
    return self__._hash
  }else {
    return self__._hash
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__438763 = null;
  var G__438763__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__438763__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__438763 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__438763__2.call(this, self__, coll);
      case 3:
        return G__438763__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__438763
}();
cljs.core.Symbol.prototype.apply = function(self__, args438762) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args438762.slice()))
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta)
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, -1, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__438765 = coll;
      if(G__438765) {
        if(function() {
          var or__3943__auto__ = G__438765.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__438765.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if("\ufdd0:else") {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__438767 = coll;
      if(G__438767) {
        if(function() {
          var or__3943__auto__ = G__438767.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__438767.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__438769 = coll;
      if(G__438769) {
        if(function() {
          var or__3943__auto__ = G__438769.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__438769.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(!(s == null)) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__438771 = coll;
      if(G__438771) {
        if(function() {
          var or__3943__auto__ = G__438771.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__438771.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3943__auto__ = x === y;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__438772__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__438773 = y;
            var G__438774 = cljs.core.first.call(null, more);
            var G__438775 = cljs.core.next.call(null, more);
            x = G__438773;
            y = G__438774;
            more = G__438775;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__438772 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438772__delegate.call(this, x, y, more)
    };
    G__438772.cljs$lang$maxFixedArity = 2;
    G__438772.cljs$lang$applyTo = function(arglist__438776) {
      var x = cljs.core.first(arglist__438776);
      arglist__438776 = cljs.core.next(arglist__438776);
      var y = cljs.core.first(arglist__438776);
      var more = cljs.core.rest(arglist__438776);
      return G__438772__delegate(x, y, more)
    };
    G__438772.cljs$core$IFn$_invoke$arity$variadic = G__438772__delegate;
    return G__438772
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3941__auto__ = other instanceof Date;
  if(and__3941__auto__) {
    return o.toString() === other.toString()
  }else {
    return and__3941__auto__
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return Math.floor(o) % 2147483647
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
goog.provide("cljs.core.Reduced");
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  return self__.val
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__438777 = nval;
            var G__438778 = n + 1;
            val = G__438777;
            n = G__438778;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__438779 = nval;
          var G__438780 = n + 1;
          val__$1 = G__438779;
          n = G__438780;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__438781 = nval;
          var G__438782 = n + 1;
          val__$1 = G__438781;
          n = G__438782;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__438783 = nval;
            var G__438784 = n + 1;
            val = G__438783;
            n = G__438784;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__438785 = nval;
          var G__438786 = n + 1;
          val__$1 = G__438785;
          n = G__438786;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__438787 = nval;
          var G__438788 = n + 1;
          val__$1 = G__438787;
          n = G__438788;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__438790 = x;
  if(G__438790) {
    if(function() {
      var or__3943__auto__ = G__438790.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__438790.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__438790.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__438790)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__438790)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__438792 = x;
  if(G__438792) {
    if(function() {
      var or__3943__auto__ = G__438792.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__438792.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__438792.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__438792)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__438792)
  }
};
goog.provide("cljs.core.IndexedSeq");
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var c = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c > 0) {
    return new cljs.core.RSeq(coll, c - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i)
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function(col, f) {
  return cljs.core.array_reduce.call(null, col, f)
};
cljs.core._reduce["array"] = function(col, f, start) {
  return cljs.core.array_reduce.call(null, col, f, start)
};
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
goog.provide("cljs.core.RSeq");
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850574
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__438793 = sn;
      s = G__438793;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core.list.call(null, x)
    }
  };
  var conj__3 = function() {
    var G__438794__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__438795 = conj.call(null, coll, x);
          var G__438796 = cljs.core.first.call(null, xs);
          var G__438797 = cljs.core.next.call(null, xs);
          coll = G__438795;
          x = G__438796;
          xs = G__438797;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__438794 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438794__delegate.call(this, coll, x, xs)
    };
    G__438794.cljs$lang$maxFixedArity = 2;
    G__438794.cljs$lang$applyTo = function(arglist__438798) {
      var coll = cljs.core.first(arglist__438798);
      arglist__438798 = cljs.core.next(arglist__438798);
      var x = cljs.core.first(arglist__438798);
      var xs = cljs.core.rest(arglist__438798);
      return G__438794__delegate(coll, x, xs)
    };
    G__438794.cljs$core$IFn$_invoke$arity$variadic = G__438794__delegate;
    return G__438794
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__438799 = cljs.core.next.call(null, s);
      var G__438800 = acc + 1;
      s = G__438799;
      acc = G__438800;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__438801 = cljs.core.next.call(null, coll);
              var G__438802 = n - 1;
              coll = G__438801;
              n = G__438802;
              continue
            }else {
              if("\ufdd0:else") {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__438803 = cljs.core.next.call(null, coll);
              var G__438804 = n - 1;
              var G__438805 = not_found;
              coll = G__438803;
              n = G__438804;
              not_found = G__438805;
              continue
            }else {
              if("\ufdd0:else") {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__438808 = coll;
        if(G__438808) {
          if(function() {
            var or__3943__auto__ = G__438808.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__438808.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if("\ufdd0:else") {
              return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__438809 = coll;
        if(G__438809) {
          if(function() {
            var or__3943__auto__ = G__438809.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__438809.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if("\ufdd0:else") {
              return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
            }else {
              return null
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__438812 = o;
        if(G__438812) {
          if(function() {
            var or__3943__auto__ = G__438812.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__438812.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if("\ufdd0:else") {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__438813 = o;
        if(G__438813) {
          if(function() {
            var or__3943__auto__ = G__438813.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__438813.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if("\ufdd0:else") {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.hash_map.call(null, k, v)
    }
  };
  var assoc__4 = function() {
    var G__438814__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__438815 = ret;
          var G__438816 = cljs.core.first.call(null, kvs);
          var G__438817 = cljs.core.second.call(null, kvs);
          var G__438818 = cljs.core.nnext.call(null, kvs);
          coll = G__438815;
          k = G__438816;
          v = G__438817;
          kvs = G__438818;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__438814 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__438814__delegate.call(this, coll, k, v, kvs)
    };
    G__438814.cljs$lang$maxFixedArity = 3;
    G__438814.cljs$lang$applyTo = function(arglist__438819) {
      var coll = cljs.core.first(arglist__438819);
      arglist__438819 = cljs.core.next(arglist__438819);
      var k = cljs.core.first(arglist__438819);
      arglist__438819 = cljs.core.next(arglist__438819);
      var v = cljs.core.first(arglist__438819);
      var kvs = cljs.core.rest(arglist__438819);
      return G__438814__delegate(coll, k, v, kvs)
    };
    G__438814.cljs$core$IFn$_invoke$arity$variadic = G__438814__delegate;
    return G__438814
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__438820__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__438821 = ret;
          var G__438822 = cljs.core.first.call(null, ks);
          var G__438823 = cljs.core.next.call(null, ks);
          coll = G__438821;
          k = G__438822;
          ks = G__438823;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__438820 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438820__delegate.call(this, coll, k, ks)
    };
    G__438820.cljs$lang$maxFixedArity = 2;
    G__438820.cljs$lang$applyTo = function(arglist__438824) {
      var coll = cljs.core.first(arglist__438824);
      arglist__438824 = cljs.core.next(arglist__438824);
      var k = cljs.core.first(arglist__438824);
      var ks = cljs.core.rest(arglist__438824);
      return G__438820__delegate(coll, k, ks)
    };
    G__438820.cljs$core$IFn$_invoke$arity$variadic = G__438820__delegate;
    return G__438820
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3943__auto__ = goog.isFunction(f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__438826 = f;
    if(G__438826) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____$1 = null;
        if(cljs.core.truth_(or__3943__auto____$1)) {
          return or__3943__auto____$1
        }else {
          return G__438826.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__438826.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__438826)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__438826)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = cljs.core.fn_QMARK_.call(null, o);
    if(and__3941__auto__) {
      return!function() {
        var G__438832 = o;
        if(G__438832) {
          if(function() {
            var or__3943__auto__ = G__438832.cljs$lang$protocol_mask$partition0$ & 262144;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__438832.cljs$core$IWithMeta$
            }
          }()) {
            return true
          }else {
            if(!G__438832.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__438832)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__438832)
        }
      }()
    }else {
      return and__3941__auto__
    }
  }()) {
    return with_meta.call(null, function() {
      if(void 0 === cljs.core.t438833) {
        goog.provide("cljs.core.t438833");
        cljs.core.t438833 = function(meta, o, with_meta, meta438834) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta438834 = meta438834;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t438833.cljs$lang$type = true;
        cljs.core.t438833.cljs$lang$ctorStr = "cljs.core/t438833";
        cljs.core.t438833.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
          return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/t438833")
        };
        cljs.core.t438833.prototype.call = function() {
          var G__438837__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__438837 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__438837__delegate.call(this, self__, args)
          };
          G__438837.cljs$lang$maxFixedArity = 1;
          G__438837.cljs$lang$applyTo = function(arglist__438838) {
            var self__ = cljs.core.first(arglist__438838);
            var args = cljs.core.rest(arglist__438838);
            return G__438837__delegate(self__, args)
          };
          G__438837.cljs$core$IFn$_invoke$arity$variadic = G__438837__delegate;
          return G__438837
        }();
        cljs.core.t438833.prototype.apply = function(self__, args438836) {
          var self__ = this;
          return self__.call.apply(self__, [self__].concat(args438836.slice()))
        };
        cljs.core.t438833.prototype.cljs$core$Fn$ = true;
        cljs.core.t438833.prototype.cljs$core$IMeta$_meta$arity$1 = function(_438835) {
          var self__ = this;
          return self__.meta438834
        };
        cljs.core.t438833.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_438835, meta438834__$1) {
          var self__ = this;
          return new cljs.core.t438833(self__.meta, self__.o, self__.with_meta, meta438834__$1)
        };
        cljs.core.__GT_t438833 = function __GT_t438833(meta__$1, o__$1, with_meta__$1, meta438834) {
          return new cljs.core.t438833(meta__$1, o__$1, with_meta__$1, meta438834)
        }
      }else {
      }
      return new cljs.core.t438833(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__438840 = o;
    if(G__438840) {
      if(function() {
        var or__3943__auto__ = G__438840.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__438840.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__438840.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__438840)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__438840)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__438841__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__438842 = ret;
          var G__438843 = cljs.core.first.call(null, ks);
          var G__438844 = cljs.core.next.call(null, ks);
          coll = G__438842;
          k = G__438843;
          ks = G__438844;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__438841 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438841__delegate.call(this, coll, k, ks)
    };
    G__438841.cljs$lang$maxFixedArity = 2;
    G__438841.cljs$lang$applyTo = function(arglist__438845) {
      var coll = cljs.core.first(arglist__438845);
      arglist__438845 = cljs.core.next(arglist__438845);
      var k = cljs.core.first(arglist__438845);
      var ks = cljs.core.rest(arglist__438845);
      return G__438841__delegate(coll, k, ks)
    };
    G__438841.cljs$core$IFn$_invoke$arity$variadic = G__438841__delegate;
    return G__438841
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3941__auto__ = goog.isString(o);
      if(and__3941__auto__) {
        return check_cache
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash.cljs$core$IFn$_invoke$arity$1 = hash__1;
  hash.cljs$core$IFn$_invoke$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  var or__3943__auto__ = coll == null;
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
  }
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__438847 = x;
    if(G__438847) {
      if(function() {
        var or__3943__auto__ = G__438847.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__438847.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__438847.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__438847)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__438847)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__438849 = x;
    if(G__438849) {
      if(function() {
        var or__3943__auto__ = G__438849.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__438849.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__438849.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__438849)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__438849)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__438851 = x;
  if(G__438851) {
    if(function() {
      var or__3943__auto__ = G__438851.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__438851.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__438851.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__438851)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__438851)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__438853 = x;
  if(G__438853) {
    if(function() {
      var or__3943__auto__ = G__438853.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__438853.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__438853.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__438853)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__438853)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__438855 = x;
  if(G__438855) {
    if(function() {
      var or__3943__auto__ = G__438855.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__438855.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__438855.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__438855)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__438855)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__438857 = x;
    if(G__438857) {
      if(function() {
        var or__3943__auto__ = G__438857.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__438857.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__438857.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__438857)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__438857)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__438859 = x;
  if(G__438859) {
    if(function() {
      var or__3943__auto__ = G__438859.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__438859.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__438859.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__438859)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__438859)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var or__3943__auto__ = x instanceof cljs.core.ChunkedCons;
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    return x instanceof cljs.core.ChunkedSeq
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__438860__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__438860 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__438860__delegate.call(this, keyvals)
    };
    G__438860.cljs$lang$maxFixedArity = 0;
    G__438860.cljs$lang$applyTo = function(arglist__438861) {
      var keyvals = cljs.core.seq(arglist__438861);
      return G__438860__delegate(keyvals)
    };
    G__438860.cljs$core$IFn$_invoke$arity$variadic = G__438860__delegate;
    return G__438860
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__438862 = i__$1 + 1;
      var G__438863 = j__$1 + 1;
      var G__438864 = len__$1 - 1;
      i__$1 = G__438862;
      j__$1 = G__438863;
      len__$1 = G__438864;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__438865 = i__$1 - 1;
      var G__438866 = j__$1 - 1;
      var G__438867 = len__$1 - 1;
      i__$1 = G__438865;
      j__$1 = G__438866;
      len__$1 = G__438867;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__438869 = s;
    if(G__438869) {
      if(function() {
        var or__3943__auto__ = G__438869.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__438869.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__438869.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__438869)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__438869)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__438871 = s;
  if(G__438871) {
    if(function() {
      var or__3943__auto__ = G__438871.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__438871.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__438871.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__438871)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__438871)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3941__auto__ = goog.isString(x);
  if(and__3941__auto__) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3941__auto__
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3943__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__438873 = f;
    if(G__438873) {
      if(function() {
        var or__3943__auto____$1 = G__438873.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return G__438873.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__438873.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__438873)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__438873)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3941__auto__ = typeof n === "number";
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !isNaN(n);
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(n === Infinity);
      if(and__3941__auto____$2) {
        return parseFloat(n) === parseInt(n, 10)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(function() {
    var and__3941__auto__ = !(coll == null);
    if(and__3941__auto__) {
      var and__3941__auto____$1 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3941__auto____$1) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core.get.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__438874__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, null, x, null], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__438875 = cljs.core.conj.call(null, s, x__$1);
              var G__438876 = etc;
              s = G__438875;
              xs = G__438876;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__438874 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438874__delegate.call(this, x, y, more)
    };
    G__438874.cljs$lang$maxFixedArity = 2;
    G__438874.cljs$lang$applyTo = function(arglist__438877) {
      var x = cljs.core.first(arglist__438877);
      arglist__438877 = cljs.core.next(arglist__438877);
      var y = cljs.core.first(arglist__438877);
      var more = cljs.core.rest(arglist__438877);
      return G__438874__delegate(x, y, more)
    };
    G__438874.cljs$core$IFn$_invoke$arity$variadic = G__438874__delegate;
    return G__438874
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__438879 = x;
            if(G__438879) {
              if(function() {
                var or__3943__auto__ = G__438879.cljs$lang$protocol_mask$partition1$ & 2048;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return G__438879.cljs$core$IComparable$
                }
              }()) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0:else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if("\ufdd0:else") {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3941__auto__ = d === 0;
        if(and__3941__auto__) {
          return n + 1 < len
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__438880 = xs;
        var G__438881 = ys;
        var G__438882 = len;
        var G__438883 = n + 1;
        xs = G__438880;
        ys = G__438881;
        len = G__438882;
        n = G__438883;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__438884 = nval;
          var G__438885 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__438884;
          coll__$1 = G__438885;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__438888 = coll;
      if(G__438888) {
        if(function() {
          var or__3943__auto__ = G__438888.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__438888.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if("\ufdd0:else") {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__438889 = coll;
      if(G__438889) {
        if(function() {
          var or__3943__auto__ = G__438889.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__438889.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if("\ufdd0:else") {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__438890__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__438890 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438890__delegate.call(this, x, y, more)
    };
    G__438890.cljs$lang$maxFixedArity = 2;
    G__438890.cljs$lang$applyTo = function(arglist__438891) {
      var x = cljs.core.first(arglist__438891);
      arglist__438891 = cljs.core.next(arglist__438891);
      var y = cljs.core.first(arglist__438891);
      var more = cljs.core.rest(arglist__438891);
      return G__438890__delegate(x, y, more)
    };
    G__438890.cljs$core$IFn$_invoke$arity$variadic = G__438890__delegate;
    return G__438890
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__438892__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__438892 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438892__delegate.call(this, x, y, more)
    };
    G__438892.cljs$lang$maxFixedArity = 2;
    G__438892.cljs$lang$applyTo = function(arglist__438893) {
      var x = cljs.core.first(arglist__438893);
      arglist__438893 = cljs.core.next(arglist__438893);
      var y = cljs.core.first(arglist__438893);
      var more = cljs.core.rest(arglist__438893);
      return G__438892__delegate(x, y, more)
    };
    G__438892.cljs$core$IFn$_invoke$arity$variadic = G__438892__delegate;
    return G__438892
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__438894__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__438894 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438894__delegate.call(this, x, y, more)
    };
    G__438894.cljs$lang$maxFixedArity = 2;
    G__438894.cljs$lang$applyTo = function(arglist__438895) {
      var x = cljs.core.first(arglist__438895);
      arglist__438895 = cljs.core.next(arglist__438895);
      var y = cljs.core.first(arglist__438895);
      var more = cljs.core.rest(arglist__438895);
      return G__438894__delegate(x, y, more)
    };
    G__438894.cljs$core$IFn$_invoke$arity$variadic = G__438894__delegate;
    return G__438894
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__438896__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__438896 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438896__delegate.call(this, x, y, more)
    };
    G__438896.cljs$lang$maxFixedArity = 2;
    G__438896.cljs$lang$applyTo = function(arglist__438897) {
      var x = cljs.core.first(arglist__438897);
      arglist__438897 = cljs.core.next(arglist__438897);
      var y = cljs.core.first(arglist__438897);
      var more = cljs.core.rest(arglist__438897);
      return G__438896__delegate(x, y, more)
    };
    G__438896.cljs$core$IFn$_invoke$arity$variadic = G__438896__delegate;
    return G__438896
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__438898__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__438899 = y;
            var G__438900 = cljs.core.first.call(null, more);
            var G__438901 = cljs.core.next.call(null, more);
            x = G__438899;
            y = G__438900;
            more = G__438901;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__438898 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438898__delegate.call(this, x, y, more)
    };
    G__438898.cljs$lang$maxFixedArity = 2;
    G__438898.cljs$lang$applyTo = function(arglist__438902) {
      var x = cljs.core.first(arglist__438902);
      arglist__438902 = cljs.core.next(arglist__438902);
      var y = cljs.core.first(arglist__438902);
      var more = cljs.core.rest(arglist__438902);
      return G__438898__delegate(x, y, more)
    };
    G__438898.cljs$core$IFn$_invoke$arity$variadic = G__438898__delegate;
    return G__438898
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__438903__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__438904 = y;
            var G__438905 = cljs.core.first.call(null, more);
            var G__438906 = cljs.core.next.call(null, more);
            x = G__438904;
            y = G__438905;
            more = G__438906;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__438903 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438903__delegate.call(this, x, y, more)
    };
    G__438903.cljs$lang$maxFixedArity = 2;
    G__438903.cljs$lang$applyTo = function(arglist__438907) {
      var x = cljs.core.first(arglist__438907);
      arglist__438907 = cljs.core.next(arglist__438907);
      var y = cljs.core.first(arglist__438907);
      var more = cljs.core.rest(arglist__438907);
      return G__438903__delegate(x, y, more)
    };
    G__438903.cljs$core$IFn$_invoke$arity$variadic = G__438903__delegate;
    return G__438903
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__438908__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__438909 = y;
            var G__438910 = cljs.core.first.call(null, more);
            var G__438911 = cljs.core.next.call(null, more);
            x = G__438909;
            y = G__438910;
            more = G__438911;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__438908 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438908__delegate.call(this, x, y, more)
    };
    G__438908.cljs$lang$maxFixedArity = 2;
    G__438908.cljs$lang$applyTo = function(arglist__438912) {
      var x = cljs.core.first(arglist__438912);
      arglist__438912 = cljs.core.next(arglist__438912);
      var y = cljs.core.first(arglist__438912);
      var more = cljs.core.rest(arglist__438912);
      return G__438908__delegate(x, y, more)
    };
    G__438908.cljs$core$IFn$_invoke$arity$variadic = G__438908__delegate;
    return G__438908
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__438913__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__438914 = y;
            var G__438915 = cljs.core.first.call(null, more);
            var G__438916 = cljs.core.next.call(null, more);
            x = G__438914;
            y = G__438915;
            more = G__438916;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__438913 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438913__delegate.call(this, x, y, more)
    };
    G__438913.cljs$lang$maxFixedArity = 2;
    G__438913.cljs$lang$applyTo = function(arglist__438917) {
      var x = cljs.core.first(arglist__438917);
      arglist__438917 = cljs.core.next(arglist__438917);
      var y = cljs.core.first(arglist__438917);
      var more = cljs.core.rest(arglist__438917);
      return G__438913__delegate(x, y, more)
    };
    G__438913.cljs$core$IFn$_invoke$arity$variadic = G__438913__delegate;
    return G__438913
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__438918__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__438918 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438918__delegate.call(this, x, y, more)
    };
    G__438918.cljs$lang$maxFixedArity = 2;
    G__438918.cljs$lang$applyTo = function(arglist__438919) {
      var x = cljs.core.first(arglist__438919);
      arglist__438919 = cljs.core.next(arglist__438919);
      var y = cljs.core.first(arglist__438919);
      var more = cljs.core.rest(arglist__438919);
      return G__438918__delegate(x, y, more)
    };
    G__438918.cljs$core$IFn$_invoke$arity$variadic = G__438918__delegate;
    return G__438918
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__438920__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__438920 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438920__delegate.call(this, x, y, more)
    };
    G__438920.cljs$lang$maxFixedArity = 2;
    G__438920.cljs$lang$applyTo = function(arglist__438921) {
      var x = cljs.core.first(arglist__438921);
      arglist__438921 = cljs.core.next(arglist__438921);
      var y = cljs.core.first(arglist__438921);
      var more = cljs.core.rest(arglist__438921);
      return G__438920__delegate(x, y, more)
    };
    G__438920.cljs$core$IFn$_invoke$arity$variadic = G__438920__delegate;
    return G__438920
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(function() {
      var and__3941__auto__ = cljs.core.string_QMARK_.call(null, x);
      if(and__3941__auto__) {
        return x.length === 1
      }else {
        return and__3941__auto__
      }
    }()) {
      return x
    }else {
      if("\ufdd0:else") {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__438922__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__438922 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438922__delegate.call(this, x, y, more)
    };
    G__438922.cljs$lang$maxFixedArity = 2;
    G__438922.cljs$lang$applyTo = function(arglist__438923) {
      var x = cljs.core.first(arglist__438923);
      arglist__438923 = cljs.core.next(arglist__438923);
      var y = cljs.core.first(arglist__438923);
      var more = cljs.core.rest(arglist__438923);
      return G__438922__delegate(x, y, more)
    };
    G__438922.cljs$core$IFn$_invoke$arity$variadic = G__438922__delegate;
    return G__438922
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__438924__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__438924 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438924__delegate.call(this, x, y, more)
    };
    G__438924.cljs$lang$maxFixedArity = 2;
    G__438924.cljs$lang$applyTo = function(arglist__438925) {
      var x = cljs.core.first(arglist__438925);
      arglist__438925 = cljs.core.next(arglist__438925);
      var y = cljs.core.first(arglist__438925);
      var more = cljs.core.rest(arglist__438925);
      return G__438924__delegate(x, y, more)
    };
    G__438924.cljs$core$IFn$_invoke$arity$variadic = G__438924__delegate;
    return G__438924
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__438926__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__438926 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438926__delegate.call(this, x, y, more)
    };
    G__438926.cljs$lang$maxFixedArity = 2;
    G__438926.cljs$lang$applyTo = function(arglist__438927) {
      var x = cljs.core.first(arglist__438927);
      arglist__438927 = cljs.core.next(arglist__438927);
      var y = cljs.core.first(arglist__438927);
      var more = cljs.core.rest(arglist__438927);
      return G__438926__delegate(x, y, more)
    };
    G__438926.cljs$core$IFn$_invoke$arity$variadic = G__438926__delegate;
    return G__438926
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__438928__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__438928 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438928__delegate.call(this, x, y, more)
    };
    G__438928.cljs$lang$maxFixedArity = 2;
    G__438928.cljs$lang$applyTo = function(arglist__438929) {
      var x = cljs.core.first(arglist__438929);
      arglist__438929 = cljs.core.next(arglist__438929);
      var y = cljs.core.first(arglist__438929);
      var more = cljs.core.rest(arglist__438929);
      return G__438928__delegate(x, y, more)
    };
    G__438928.cljs$core$IFn$_invoke$arity$variadic = G__438928__delegate;
    return G__438928
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__438930__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__438930 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438930__delegate.call(this, x, y, more)
    };
    G__438930.cljs$lang$maxFixedArity = 2;
    G__438930.cljs$lang$applyTo = function(arglist__438931) {
      var x = cljs.core.first(arglist__438931);
      arglist__438931 = cljs.core.next(arglist__438931);
      var y = cljs.core.first(arglist__438931);
      var more = cljs.core.rest(arglist__438931);
      return G__438930__delegate(x, y, more)
    };
    G__438930.cljs$core$IFn$_invoke$arity$variadic = G__438930__delegate;
    return G__438930
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__438932__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__438932 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438932__delegate.call(this, x, y, more)
    };
    G__438932.cljs$lang$maxFixedArity = 2;
    G__438932.cljs$lang$applyTo = function(arglist__438933) {
      var x = cljs.core.first(arglist__438933);
      arglist__438933 = cljs.core.next(arglist__438933);
      var y = cljs.core.first(arglist__438933);
      var more = cljs.core.rest(arglist__438933);
      return G__438932__delegate(x, y, more)
    };
    G__438932.cljs$core$IFn$_invoke$arity$variadic = G__438932__delegate;
    return G__438932
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__438934__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__438934 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438934__delegate.call(this, x, y, more)
    };
    G__438934.cljs$lang$maxFixedArity = 2;
    G__438934.cljs$lang$applyTo = function(arglist__438935) {
      var x = cljs.core.first(arglist__438935);
      arglist__438935 = cljs.core.next(arglist__438935);
      var y = cljs.core.first(arglist__438935);
      var more = cljs.core.rest(arglist__438935);
      return G__438934__delegate(x, y, more)
    };
    G__438934.cljs$core$IFn$_invoke$arity$variadic = G__438934__delegate;
    return G__438934
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__438936__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__438937 = y;
            var G__438938 = cljs.core.first.call(null, more);
            var G__438939 = cljs.core.next.call(null, more);
            x = G__438937;
            y = G__438938;
            more = G__438939;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__438936 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__438936__delegate.call(this, x, y, more)
    };
    G__438936.cljs$lang$maxFixedArity = 2;
    G__438936.cljs$lang$applyTo = function(arglist__438940) {
      var x = cljs.core.first(arglist__438940);
      arglist__438940 = cljs.core.next(arglist__438940);
      var y = cljs.core.first(arglist__438940);
      var more = cljs.core.rest(arglist__438940);
      return G__438936__delegate(x, y, more)
    };
    G__438936.cljs$core$IFn$_invoke$arity$variadic = G__438936__delegate;
    return G__438936
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = xs;
      if(and__3941__auto__) {
        return n__$1 > 0
      }else {
        return and__3941__auto__
      }
    }())) {
      var G__438941 = n__$1 - 1;
      var G__438942 = cljs.core.next.call(null, xs);
      n__$1 = G__438941;
      xs = G__438942;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0:else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__438943__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__438944 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__438945 = cljs.core.next.call(null, more);
            sb = G__438944;
            more = G__438945;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__438943 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__438943__delegate.call(this, x, ys)
    };
    G__438943.cljs$lang$maxFixedArity = 1;
    G__438943.cljs$lang$applyTo = function(arglist__438946) {
      var x = cljs.core.first(arglist__438946);
      var ys = cljs.core.rest(arglist__438946);
      return G__438943__delegate(x, ys)
    };
    G__438943.cljs$core$IFn$_invoke$arity$variadic = G__438943__delegate;
    return G__438943
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$core$IFn$_invoke$arity$0 = str_STAR___0;
  str_STAR_.cljs$core$IFn$_invoke$arity$1 = str_STAR___1;
  str_STAR_.cljs$core$IFn$_invoke$arity$variadic = str_STAR___2.cljs$core$IFn$_invoke$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
    }else {
      if(x == null) {
        return""
      }else {
        if("\ufdd0:else") {
          return x.toString()
        }else {
          return null
        }
      }
    }
  };
  var str__2 = function() {
    var G__438947__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__438948 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__438949 = cljs.core.next.call(null, more);
            sb = G__438948;
            more = G__438949;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__438947 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__438947__delegate.call(this, x, ys)
    };
    G__438947.cljs$lang$maxFixedArity = 1;
    G__438947.cljs$lang$applyTo = function(arglist__438950) {
      var x = cljs.core.first(arglist__438950);
      var ys = cljs.core.rest(arglist__438950);
      return G__438947__delegate(x, ys)
    };
    G__438947.cljs$core$IFn$_invoke$arity$variadic = G__438947__delegate;
    return G__438947
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    var args__$1 = cljs.core.map.call(null, function(x) {
      if(function() {
        var or__3943__auto__ = cljs.core.keyword_QMARK_.call(null, x);
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return x instanceof cljs.core.Symbol
        }
      }()) {
        return[cljs.core.str(x)].join("")
      }else {
        return x
      }
    }, args);
    return cljs.core.apply.call(null, goog.string.format, fmt, args__$1)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__438951) {
    var fmt = cljs.core.first(arglist__438951);
    var args = cljs.core.rest(arglist__438951);
    return format__delegate(fmt, args)
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(name instanceof cljs.core.Symbol) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", ":", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0:else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", ":", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__438952 = cljs.core.next.call(null, xs);
            var G__438953 = cljs.core.next.call(null, ys);
            xs = G__438952;
            ys = G__438953;
            continue
          }else {
            if("\ufdd0:else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__438954_SHARP_, p2__438955_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__438954_SHARP_, cljs.core.hash.call(null, p2__438955_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__438956 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__438957 = cljs.core.next.call(null, s);
      h = G__438956;
      s = G__438957;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__438958 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__438959 = cljs.core.next.call(null, s__$1);
      h = G__438958;
      s__$1 = G__438959;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__438966_438972 = cljs.core.seq.call(null, fn_map);
  var chunk__438967_438973 = null;
  var count__438968_438974 = 0;
  var i__438969_438975 = 0;
  while(true) {
    if(i__438969_438975 < count__438968_438974) {
      var vec__438970_438976 = cljs.core._nth.call(null, chunk__438967_438973, i__438969_438975);
      var key_name_438977 = cljs.core.nth.call(null, vec__438970_438976, 0, null);
      var f_438978 = cljs.core.nth.call(null, vec__438970_438976, 1, null);
      var str_name_438979 = cljs.core.name.call(null, key_name_438977);
      obj[str_name_438979] = f_438978;
      var G__438980 = seq__438966_438972;
      var G__438981 = chunk__438967_438973;
      var G__438982 = count__438968_438974;
      var G__438983 = i__438969_438975 + 1;
      seq__438966_438972 = G__438980;
      chunk__438967_438973 = G__438981;
      count__438968_438974 = G__438982;
      i__438969_438975 = G__438983;
      continue
    }else {
      var temp__4092__auto___438984 = cljs.core.seq.call(null, seq__438966_438972);
      if(temp__4092__auto___438984) {
        var seq__438966_438985__$1 = temp__4092__auto___438984;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__438966_438985__$1)) {
          var c__3259__auto___438986 = cljs.core.chunk_first.call(null, seq__438966_438985__$1);
          var G__438987 = cljs.core.chunk_rest.call(null, seq__438966_438985__$1);
          var G__438988 = c__3259__auto___438986;
          var G__438989 = cljs.core.count.call(null, c__3259__auto___438986);
          var G__438990 = 0;
          seq__438966_438972 = G__438987;
          chunk__438967_438973 = G__438988;
          count__438968_438974 = G__438989;
          i__438969_438975 = G__438990;
          continue
        }else {
          var vec__438971_438991 = cljs.core.first.call(null, seq__438966_438985__$1);
          var key_name_438992 = cljs.core.nth.call(null, vec__438971_438991, 0, null);
          var f_438993 = cljs.core.nth.call(null, vec__438971_438991, 1, null);
          var str_name_438994 = cljs.core.name.call(null, key_name_438992);
          obj[str_name_438994] = f_438993;
          var G__438995 = cljs.core.next.call(null, seq__438966_438985__$1);
          var G__438996 = null;
          var G__438997 = 0;
          var G__438998 = 0;
          seq__438966_438972 = G__438995;
          chunk__438967_438973 = G__438996;
          count__438968_438974 = G__438997;
          i__438969_438975 = G__438998;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
goog.provide("cljs.core.List");
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, coll, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, col)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, col)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash)
};
goog.provide("cljs.core.EmptyList");
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta)
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__439000 = coll;
  if(G__439000) {
    if(function() {
      var or__3943__auto__ = G__439000.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__439000.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__439000.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__439000)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__439000)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__439001 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__439001;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__439002 = i - 1;
        var G__439003 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__439002;
        r = G__439003;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__439004) {
    var xs = cljs.core.seq(arglist__439004);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
goog.provide("cljs.core.Cons");
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.Cons(null, o, coll, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3943__auto__ = coll == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var G__439006 = coll;
      if(G__439006) {
        if(function() {
          var or__3943__auto____$1 = G__439006.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            return G__439006.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__439008 = x;
  if(G__439008) {
    if(function() {
      var or__3943__auto__ = G__439008.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__439008.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__439008.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__439008)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__439008)
  }
};
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
goog.provide("cljs.core.Keyword");
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__439010 = null;
  var G__439010__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    if(coll == null) {
      return null
    }else {
      var strobj = coll.strobj;
      if(strobj == null) {
        return cljs.core._lookup.call(null, coll, self__.k, null)
      }else {
        return strobj[self__.k]
      }
    }
  };
  var G__439010__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, self__.k, not_found)
    }
  };
  G__439010 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439010__2.call(this, self__, coll);
      case 3:
        return G__439010__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439010
}();
cljs.core.Keyword.prototype.apply = function(self__, args439009) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args439009.slice()))
};
cljs.core.__GT_Keyword = function __GT_Keyword(k) {
  return new cljs.core.Keyword(k)
};
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__439012 = null;
  var G__439012__2 = function(self__, coll) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.get.call(null, coll, this$.toString())
  };
  var G__439012__3 = function(self__, coll, not_found) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.get.call(null, coll, this$.toString(), not_found)
  };
  G__439012 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439012__2.call(this, self__, coll);
      case 3:
        return G__439012__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439012
}();
String.prototype.apply = function(self__, args439011) {
  return self__.call.apply(self__, [self__].concat(args439011.slice()))
};
String.prototype.apply = function(s, args) {
  if(args.length < 2) {
    return cljs.core.get.call(null, args[0], s)
  }else {
    return cljs.core.get.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x = lazy_seq.x;
  if(lazy_seq.realized) {
    return x
  }else {
    lazy_seq.x = x.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
goog.provide("cljs.core.LazySeq");
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.LazySeq(meta__$1, self__.realized, self__.x, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, realized, x, __hash) {
  return new cljs.core.LazySeq(meta, realized, x, __hash)
};
goog.provide("cljs.core.ChunkBuffer");
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end)
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
goog.provide("cljs.core.ArrayChunk");
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = i >= 0;
    if(and__3941__auto__) {
      return i < self__.end - self__.off
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end - self__.off
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end)
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
goog.provide("cljs.core.ChunkedCons");
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850604;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash)
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__439014 = s;
    if(G__439014) {
      if(function() {
        var or__3943__auto__ = G__439014.cljs$lang$protocol_mask$partition1$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__439014.cljs$core$IChunkedNext$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__439015 = cljs.core.next.call(null, s__$1);
      s__$1 = G__439015;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_439016 = 0;
  var xs_439017 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_439017) {
      ret[i_439016] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_439017));
      var G__439018 = i_439016 + 1;
      var G__439019 = cljs.core.next.call(null, xs_439017);
      i_439016 = G__439018;
      xs_439017 = G__439019;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0:else") {
          throw new Error("int-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__439020 = i + 1;
          var G__439021 = cljs.core.next.call(null, s__$1);
          i = G__439020;
          s__$1 = G__439021;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3306__auto___439022 = size;
      var i_439023 = 0;
      while(true) {
        if(i_439023 < n__3306__auto___439022) {
          a[i_439023] = init_val_or_seq;
          var G__439024 = i_439023 + 1;
          i_439023 = G__439024;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0:else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__439025 = i + 1;
          var G__439026 = cljs.core.next.call(null, s__$1);
          i = G__439025;
          s__$1 = G__439026;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3306__auto___439027 = size;
      var i_439028 = 0;
      while(true) {
        if(i_439028 < n__3306__auto___439027) {
          a[i_439028] = init_val_or_seq;
          var G__439029 = i_439028 + 1;
          i_439028 = G__439029;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0:else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__439030 = i + 1;
          var G__439031 = cljs.core.next.call(null, s__$1);
          i = G__439030;
          s__$1 = G__439031;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3306__auto___439032 = size;
      var i_439033 = 0;
      while(true) {
        if(i_439033 < n__3306__auto___439032) {
          a[i_439033] = init_val_or_seq;
          var G__439034 = i_439033 + 1;
          i_439033 = G__439034;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0:else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__439035 = i + 1;
          var G__439036 = cljs.core.next.call(null, s__$1);
          i = G__439035;
          s__$1 = G__439036;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3306__auto___439037 = size;
      var i_439038 = 0;
      while(true) {
        if(i_439038 < n__3306__auto___439037) {
          a[i_439038] = init_val_or_seq;
          var G__439039 = i_439038 + 1;
          i_439038 = G__439039;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = i > 0;
        if(and__3941__auto__) {
          return cljs.core.seq.call(null, s__$1)
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__439040 = cljs.core.next.call(null, s__$1);
        var G__439041 = i - 1;
        var G__439042 = sum + 1;
        s__$1 = G__439040;
        i = G__439041;
        sum = G__439042;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0:else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__439043__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__439043 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__439043__delegate.call(this, x, y, zs)
    };
    G__439043.cljs$lang$maxFixedArity = 2;
    G__439043.cljs$lang$applyTo = function(arglist__439044) {
      var x = cljs.core.first(arglist__439044);
      arglist__439044 = cljs.core.next(arglist__439044);
      var y = cljs.core.first(arglist__439044);
      var zs = cljs.core.rest(arglist__439044);
      return G__439043__delegate(x, y, zs)
    };
    G__439043.cljs$core$IFn$_invoke$arity$variadic = G__439043__delegate;
    return G__439043
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__439045__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__439045 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__439045__delegate.call(this, a, b, c, d, more)
    };
    G__439045.cljs$lang$maxFixedArity = 4;
    G__439045.cljs$lang$applyTo = function(arglist__439046) {
      var a = cljs.core.first(arglist__439046);
      arglist__439046 = cljs.core.next(arglist__439046);
      var b = cljs.core.first(arglist__439046);
      arglist__439046 = cljs.core.next(arglist__439046);
      var c = cljs.core.first(arglist__439046);
      arglist__439046 = cljs.core.next(arglist__439046);
      var d = cljs.core.first(arglist__439046);
      var more = cljs.core.rest(arglist__439046);
      return G__439045__delegate(a, b, c, d, more)
    };
    G__439045.cljs$core$IFn$_invoke$arity$variadic = G__439045__delegate;
    return G__439045
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__439047__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__439047 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__439047__delegate.call(this, f, a, b, c, d, args)
    };
    G__439047.cljs$lang$maxFixedArity = 5;
    G__439047.cljs$lang$applyTo = function(arglist__439048) {
      var f = cljs.core.first(arglist__439048);
      arglist__439048 = cljs.core.next(arglist__439048);
      var a = cljs.core.first(arglist__439048);
      arglist__439048 = cljs.core.next(arglist__439048);
      var b = cljs.core.first(arglist__439048);
      arglist__439048 = cljs.core.next(arglist__439048);
      var c = cljs.core.first(arglist__439048);
      arglist__439048 = cljs.core.next(arglist__439048);
      var d = cljs.core.first(arglist__439048);
      var args = cljs.core.rest(arglist__439048);
      return G__439047__delegate(f, a, b, c, d, args)
    };
    G__439047.cljs$core$IFn$_invoke$arity$variadic = G__439047__delegate;
    return G__439047
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__439049) {
    var obj = cljs.core.first(arglist__439049);
    arglist__439049 = cljs.core.next(arglist__439049);
    var f = cljs.core.first(arglist__439049);
    var args = cljs.core.rest(arglist__439049);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__439050__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__439050 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__439050__delegate.call(this, x, y, more)
    };
    G__439050.cljs$lang$maxFixedArity = 2;
    G__439050.cljs$lang$applyTo = function(arglist__439051) {
      var x = cljs.core.first(arglist__439051);
      arglist__439051 = cljs.core.next(arglist__439051);
      var y = cljs.core.first(arglist__439051);
      var more = cljs.core.rest(arglist__439051);
      return G__439050__delegate(x, y, more)
    };
    G__439050.cljs$core$IFn$_invoke$arity$variadic = G__439050__delegate;
    return G__439050
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__439052 = pred;
        var G__439053 = cljs.core.next.call(null, coll);
        pred = G__439052;
        coll = G__439053;
        continue
      }else {
        if("\ufdd0:else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3943__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        var G__439054 = pred;
        var G__439055 = cljs.core.next.call(null, coll);
        pred = G__439054;
        coll = G__439055;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__439056 = null;
    var G__439056__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__439056__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__439056__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__439056__3 = function() {
      var G__439057__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__439057 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__439057__delegate.call(this, x, y, zs)
      };
      G__439057.cljs$lang$maxFixedArity = 2;
      G__439057.cljs$lang$applyTo = function(arglist__439058) {
        var x = cljs.core.first(arglist__439058);
        arglist__439058 = cljs.core.next(arglist__439058);
        var y = cljs.core.first(arglist__439058);
        var zs = cljs.core.rest(arglist__439058);
        return G__439057__delegate(x, y, zs)
      };
      G__439057.cljs$core$IFn$_invoke$arity$variadic = G__439057__delegate;
      return G__439057
    }();
    G__439056 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__439056__0.call(this);
        case 1:
          return G__439056__1.call(this, x);
        case 2:
          return G__439056__2.call(this, x, y);
        default:
          return G__439056__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__439056.cljs$lang$maxFixedArity = 2;
    G__439056.cljs$lang$applyTo = G__439056__3.cljs$lang$applyTo;
    return G__439056
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__439059__delegate = function(args) {
      return x
    };
    var G__439059 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__439059__delegate.call(this, args)
    };
    G__439059.cljs$lang$maxFixedArity = 0;
    G__439059.cljs$lang$applyTo = function(arglist__439060) {
      var args = cljs.core.seq(arglist__439060);
      return G__439059__delegate(args)
    };
    G__439059.cljs$core$IFn$_invoke$arity$variadic = G__439059__delegate;
    return G__439059
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__439061 = null;
      var G__439061__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__439061__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__439061__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__439061__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__439061__4 = function() {
        var G__439062__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__439062 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439062__delegate.call(this, x, y, z, args)
        };
        G__439062.cljs$lang$maxFixedArity = 3;
        G__439062.cljs$lang$applyTo = function(arglist__439063) {
          var x = cljs.core.first(arglist__439063);
          arglist__439063 = cljs.core.next(arglist__439063);
          var y = cljs.core.first(arglist__439063);
          arglist__439063 = cljs.core.next(arglist__439063);
          var z = cljs.core.first(arglist__439063);
          var args = cljs.core.rest(arglist__439063);
          return G__439062__delegate(x, y, z, args)
        };
        G__439062.cljs$core$IFn$_invoke$arity$variadic = G__439062__delegate;
        return G__439062
      }();
      G__439061 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__439061__0.call(this);
          case 1:
            return G__439061__1.call(this, x);
          case 2:
            return G__439061__2.call(this, x, y);
          case 3:
            return G__439061__3.call(this, x, y, z);
          default:
            return G__439061__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__439061.cljs$lang$maxFixedArity = 3;
      G__439061.cljs$lang$applyTo = G__439061__4.cljs$lang$applyTo;
      return G__439061
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__439064 = null;
      var G__439064__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__439064__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__439064__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__439064__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__439064__4 = function() {
        var G__439065__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__439065 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439065__delegate.call(this, x, y, z, args)
        };
        G__439065.cljs$lang$maxFixedArity = 3;
        G__439065.cljs$lang$applyTo = function(arglist__439066) {
          var x = cljs.core.first(arglist__439066);
          arglist__439066 = cljs.core.next(arglist__439066);
          var y = cljs.core.first(arglist__439066);
          arglist__439066 = cljs.core.next(arglist__439066);
          var z = cljs.core.first(arglist__439066);
          var args = cljs.core.rest(arglist__439066);
          return G__439065__delegate(x, y, z, args)
        };
        G__439065.cljs$core$IFn$_invoke$arity$variadic = G__439065__delegate;
        return G__439065
      }();
      G__439064 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__439064__0.call(this);
          case 1:
            return G__439064__1.call(this, x);
          case 2:
            return G__439064__2.call(this, x, y);
          case 3:
            return G__439064__3.call(this, x, y, z);
          default:
            return G__439064__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__439064.cljs$lang$maxFixedArity = 3;
      G__439064.cljs$lang$applyTo = G__439064__4.cljs$lang$applyTo;
      return G__439064
    }()
  };
  var comp__4 = function() {
    var G__439067__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__439068__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__439069 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__439070 = cljs.core.next.call(null, fs__$2);
              ret = G__439069;
              fs__$2 = G__439070;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__439068 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__439068__delegate.call(this, args)
        };
        G__439068.cljs$lang$maxFixedArity = 0;
        G__439068.cljs$lang$applyTo = function(arglist__439071) {
          var args = cljs.core.seq(arglist__439071);
          return G__439068__delegate(args)
        };
        G__439068.cljs$core$IFn$_invoke$arity$variadic = G__439068__delegate;
        return G__439068
      }()
    };
    var G__439067 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__439067__delegate.call(this, f1, f2, f3, fs)
    };
    G__439067.cljs$lang$maxFixedArity = 3;
    G__439067.cljs$lang$applyTo = function(arglist__439072) {
      var f1 = cljs.core.first(arglist__439072);
      arglist__439072 = cljs.core.next(arglist__439072);
      var f2 = cljs.core.first(arglist__439072);
      arglist__439072 = cljs.core.next(arglist__439072);
      var f3 = cljs.core.first(arglist__439072);
      var fs = cljs.core.rest(arglist__439072);
      return G__439067__delegate(f1, f2, f3, fs)
    };
    G__439067.cljs$core$IFn$_invoke$arity$variadic = G__439067__delegate;
    return G__439067
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__439073__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__439073 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__439073__delegate.call(this, args)
      };
      G__439073.cljs$lang$maxFixedArity = 0;
      G__439073.cljs$lang$applyTo = function(arglist__439074) {
        var args = cljs.core.seq(arglist__439074);
        return G__439073__delegate(args)
      };
      G__439073.cljs$core$IFn$_invoke$arity$variadic = G__439073__delegate;
      return G__439073
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__439075__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__439075 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__439075__delegate.call(this, args)
      };
      G__439075.cljs$lang$maxFixedArity = 0;
      G__439075.cljs$lang$applyTo = function(arglist__439076) {
        var args = cljs.core.seq(arglist__439076);
        return G__439075__delegate(args)
      };
      G__439075.cljs$core$IFn$_invoke$arity$variadic = G__439075__delegate;
      return G__439075
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__439077__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__439077 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__439077__delegate.call(this, args)
      };
      G__439077.cljs$lang$maxFixedArity = 0;
      G__439077.cljs$lang$applyTo = function(arglist__439078) {
        var args = cljs.core.seq(arglist__439078);
        return G__439077__delegate(args)
      };
      G__439077.cljs$core$IFn$_invoke$arity$variadic = G__439077__delegate;
      return G__439077
    }()
  };
  var partial__5 = function() {
    var G__439079__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__439080__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__439080 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__439080__delegate.call(this, args)
        };
        G__439080.cljs$lang$maxFixedArity = 0;
        G__439080.cljs$lang$applyTo = function(arglist__439081) {
          var args = cljs.core.seq(arglist__439081);
          return G__439080__delegate(args)
        };
        G__439080.cljs$core$IFn$_invoke$arity$variadic = G__439080__delegate;
        return G__439080
      }()
    };
    var G__439079 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__439079__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__439079.cljs$lang$maxFixedArity = 4;
    G__439079.cljs$lang$applyTo = function(arglist__439082) {
      var f = cljs.core.first(arglist__439082);
      arglist__439082 = cljs.core.next(arglist__439082);
      var arg1 = cljs.core.first(arglist__439082);
      arglist__439082 = cljs.core.next(arglist__439082);
      var arg2 = cljs.core.first(arglist__439082);
      arglist__439082 = cljs.core.next(arglist__439082);
      var arg3 = cljs.core.first(arglist__439082);
      var more = cljs.core.rest(arglist__439082);
      return G__439079__delegate(f, arg1, arg2, arg3, more)
    };
    G__439079.cljs$core$IFn$_invoke$arity$variadic = G__439079__delegate;
    return G__439079
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__439083 = null;
      var G__439083__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__439083__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__439083__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__439083__4 = function() {
        var G__439084__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__439084 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439084__delegate.call(this, a, b, c, ds)
        };
        G__439084.cljs$lang$maxFixedArity = 3;
        G__439084.cljs$lang$applyTo = function(arglist__439085) {
          var a = cljs.core.first(arglist__439085);
          arglist__439085 = cljs.core.next(arglist__439085);
          var b = cljs.core.first(arglist__439085);
          arglist__439085 = cljs.core.next(arglist__439085);
          var c = cljs.core.first(arglist__439085);
          var ds = cljs.core.rest(arglist__439085);
          return G__439084__delegate(a, b, c, ds)
        };
        G__439084.cljs$core$IFn$_invoke$arity$variadic = G__439084__delegate;
        return G__439084
      }();
      G__439083 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__439083__1.call(this, a);
          case 2:
            return G__439083__2.call(this, a, b);
          case 3:
            return G__439083__3.call(this, a, b, c);
          default:
            return G__439083__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__439083.cljs$lang$maxFixedArity = 3;
      G__439083.cljs$lang$applyTo = G__439083__4.cljs$lang$applyTo;
      return G__439083
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__439086 = null;
      var G__439086__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__439086__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__439086__4 = function() {
        var G__439087__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__439087 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439087__delegate.call(this, a, b, c, ds)
        };
        G__439087.cljs$lang$maxFixedArity = 3;
        G__439087.cljs$lang$applyTo = function(arglist__439088) {
          var a = cljs.core.first(arglist__439088);
          arglist__439088 = cljs.core.next(arglist__439088);
          var b = cljs.core.first(arglist__439088);
          arglist__439088 = cljs.core.next(arglist__439088);
          var c = cljs.core.first(arglist__439088);
          var ds = cljs.core.rest(arglist__439088);
          return G__439087__delegate(a, b, c, ds)
        };
        G__439087.cljs$core$IFn$_invoke$arity$variadic = G__439087__delegate;
        return G__439087
      }();
      G__439086 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__439086__2.call(this, a, b);
          case 3:
            return G__439086__3.call(this, a, b, c);
          default:
            return G__439086__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__439086.cljs$lang$maxFixedArity = 3;
      G__439086.cljs$lang$applyTo = G__439086__4.cljs$lang$applyTo;
      return G__439086
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__439089 = null;
      var G__439089__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__439089__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__439089__4 = function() {
        var G__439090__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__439090 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439090__delegate.call(this, a, b, c, ds)
        };
        G__439090.cljs$lang$maxFixedArity = 3;
        G__439090.cljs$lang$applyTo = function(arglist__439091) {
          var a = cljs.core.first(arglist__439091);
          arglist__439091 = cljs.core.next(arglist__439091);
          var b = cljs.core.first(arglist__439091);
          arglist__439091 = cljs.core.next(arglist__439091);
          var c = cljs.core.first(arglist__439091);
          var ds = cljs.core.rest(arglist__439091);
          return G__439090__delegate(a, b, c, ds)
        };
        G__439090.cljs$core$IFn$_invoke$arity$variadic = G__439090__delegate;
        return G__439090
      }();
      G__439089 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__439089__2.call(this, a, b);
          case 3:
            return G__439089__3.call(this, a, b, c);
          default:
            return G__439089__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__439089.cljs$lang$maxFixedArity = 3;
      G__439089.cljs$lang$applyTo = G__439089__4.cljs$lang$applyTo;
      return G__439089
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3306__auto___439092 = size;
          var i_439093 = 0;
          while(true) {
            if(i_439093 < n__3306__auto___439092) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_439093, cljs.core._nth.call(null, c, i_439093)));
              var G__439094 = i_439093 + 1;
              i_439093 = G__439094;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3306__auto___439095 = size;
        var i_439096 = 0;
        while(true) {
          if(i_439096 < n__3306__auto___439095) {
            var x_439097 = f.call(null, cljs.core._nth.call(null, c, i_439096));
            if(x_439097 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_439097)
            }
            var G__439098 = i_439096 + 1;
            i_439096 = G__439098;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3306__auto___439105 = size;
          var i_439106 = 0;
          while(true) {
            if(i_439106 < n__3306__auto___439105) {
              var x_439107 = f.call(null, idx + i_439106, cljs.core._nth.call(null, c, i_439106));
              if(x_439107 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_439107)
              }
              var G__439108 = i_439106 + 1;
              i_439106 = G__439108;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p.call(null, y)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__439115__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__439115 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439115__delegate.call(this, x, y, z, args)
        };
        G__439115.cljs$lang$maxFixedArity = 3;
        G__439115.cljs$lang$applyTo = function(arglist__439116) {
          var x = cljs.core.first(arglist__439116);
          arglist__439116 = cljs.core.next(arglist__439116);
          var y = cljs.core.first(arglist__439116);
          arglist__439116 = cljs.core.next(arglist__439116);
          var z = cljs.core.first(arglist__439116);
          var args = cljs.core.rest(arglist__439116);
          return G__439115__delegate(x, y, z, args)
        };
        G__439115.cljs$core$IFn$_invoke$arity$variadic = G__439115__delegate;
        return G__439115
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p2.call(null, x)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__439117__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__439099_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__439099_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  return p2.call(null, p1__439099_SHARP_)
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__439117 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439117__delegate.call(this, x, y, z, args)
        };
        G__439117.cljs$lang$maxFixedArity = 3;
        G__439117.cljs$lang$applyTo = function(arglist__439118) {
          var x = cljs.core.first(arglist__439118);
          arglist__439118 = cljs.core.next(arglist__439118);
          var y = cljs.core.first(arglist__439118);
          arglist__439118 = cljs.core.next(arglist__439118);
          var z = cljs.core.first(arglist__439118);
          var args = cljs.core.rest(arglist__439118);
          return G__439117__delegate(x, y, z, args)
        };
        G__439117.cljs$core$IFn$_invoke$arity$variadic = G__439117__delegate;
        return G__439117
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    var and__3941__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__3941__auto____$5)) {
                      var and__3941__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__3941__auto____$6)) {
                        var and__3941__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__3941__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__3941__auto____$7
                        }
                      }else {
                        return and__3941__auto____$6
                      }
                    }else {
                      return and__3941__auto____$5
                    }
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__439119__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__439100_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__439100_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  var and__3941__auto____$2 = p2.call(null, p1__439100_SHARP_);
                  if(cljs.core.truth_(and__3941__auto____$2)) {
                    return p3.call(null, p1__439100_SHARP_)
                  }else {
                    return and__3941__auto____$2
                  }
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__439119 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439119__delegate.call(this, x, y, z, args)
        };
        G__439119.cljs$lang$maxFixedArity = 3;
        G__439119.cljs$lang$applyTo = function(arglist__439120) {
          var x = cljs.core.first(arglist__439120);
          arglist__439120 = cljs.core.next(arglist__439120);
          var y = cljs.core.first(arglist__439120);
          arglist__439120 = cljs.core.next(arglist__439120);
          var z = cljs.core.first(arglist__439120);
          var args = cljs.core.rest(arglist__439120);
          return G__439119__delegate(x, y, z, args)
        };
        G__439119.cljs$core$IFn$_invoke$arity$variadic = G__439119__delegate;
        return G__439119
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__439121__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__439101_SHARP_) {
            return p1__439101_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__439102_SHARP_) {
            var and__3941__auto__ = p1__439102_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              return p1__439102_SHARP_.call(null, y)
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__439103_SHARP_) {
            var and__3941__auto__ = p1__439103_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              var and__3941__auto____$1 = p1__439103_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3941__auto____$1)) {
                return p1__439103_SHARP_.call(null, z)
              }else {
                return and__3941__auto____$1
              }
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__439122__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3941__auto__ = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3941__auto__)) {
                return cljs.core.every_QMARK_.call(null, function(p1__439104_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__439104_SHARP_, args)
                }, ps__$1)
              }else {
                return and__3941__auto__
              }
            }())
          };
          var G__439122 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__439122__delegate.call(this, x, y, z, args)
          };
          G__439122.cljs$lang$maxFixedArity = 3;
          G__439122.cljs$lang$applyTo = function(arglist__439123) {
            var x = cljs.core.first(arglist__439123);
            arglist__439123 = cljs.core.next(arglist__439123);
            var y = cljs.core.first(arglist__439123);
            arglist__439123 = cljs.core.next(arglist__439123);
            var z = cljs.core.first(arglist__439123);
            var args = cljs.core.rest(arglist__439123);
            return G__439122__delegate(x, y, z, args)
          };
          G__439122.cljs$core$IFn$_invoke$arity$variadic = G__439122__delegate;
          return G__439122
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__439121 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__439121__delegate.call(this, p1, p2, p3, ps)
    };
    G__439121.cljs$lang$maxFixedArity = 3;
    G__439121.cljs$lang$applyTo = function(arglist__439124) {
      var p1 = cljs.core.first(arglist__439124);
      arglist__439124 = cljs.core.next(arglist__439124);
      var p2 = cljs.core.first(arglist__439124);
      arglist__439124 = cljs.core.next(arglist__439124);
      var p3 = cljs.core.first(arglist__439124);
      var ps = cljs.core.rest(arglist__439124);
      return G__439121__delegate(p1, p2, p3, ps)
    };
    G__439121.cljs$core$IFn$_invoke$arity$variadic = G__439121__delegate;
    return G__439121
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__439126__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__439126 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439126__delegate.call(this, x, y, z, args)
        };
        G__439126.cljs$lang$maxFixedArity = 3;
        G__439126.cljs$lang$applyTo = function(arglist__439127) {
          var x = cljs.core.first(arglist__439127);
          arglist__439127 = cljs.core.next(arglist__439127);
          var y = cljs.core.first(arglist__439127);
          arglist__439127 = cljs.core.next(arglist__439127);
          var z = cljs.core.first(arglist__439127);
          var args = cljs.core.rest(arglist__439127);
          return G__439126__delegate(x, y, z, args)
        };
        G__439126.cljs$core$IFn$_invoke$arity$variadic = G__439126__delegate;
        return G__439126
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__439128__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__439109_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__439109_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p2.call(null, p1__439109_SHARP_)
              }
            }, args)
          }
        };
        var G__439128 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439128__delegate.call(this, x, y, z, args)
        };
        G__439128.cljs$lang$maxFixedArity = 3;
        G__439128.cljs$lang$applyTo = function(arglist__439129) {
          var x = cljs.core.first(arglist__439129);
          arglist__439129 = cljs.core.next(arglist__439129);
          var y = cljs.core.first(arglist__439129);
          arglist__439129 = cljs.core.next(arglist__439129);
          var z = cljs.core.first(arglist__439129);
          var args = cljs.core.rest(arglist__439129);
          return G__439128__delegate(x, y, z, args)
        };
        G__439128.cljs$core$IFn$_invoke$arity$variadic = G__439128__delegate;
        return G__439128
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  var or__3943__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__3943__auto____$5)) {
                    return or__3943__auto____$5
                  }else {
                    var or__3943__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__3943__auto____$6)) {
                      return or__3943__auto____$6
                    }else {
                      var or__3943__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__3943__auto____$7)) {
                        return or__3943__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__439130__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__439110_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__439110_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                var or__3943__auto____$2 = p2.call(null, p1__439110_SHARP_);
                if(cljs.core.truth_(or__3943__auto____$2)) {
                  return or__3943__auto____$2
                }else {
                  return p3.call(null, p1__439110_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__439130 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439130__delegate.call(this, x, y, z, args)
        };
        G__439130.cljs$lang$maxFixedArity = 3;
        G__439130.cljs$lang$applyTo = function(arglist__439131) {
          var x = cljs.core.first(arglist__439131);
          arglist__439131 = cljs.core.next(arglist__439131);
          var y = cljs.core.first(arglist__439131);
          arglist__439131 = cljs.core.next(arglist__439131);
          var z = cljs.core.first(arglist__439131);
          var args = cljs.core.rest(arglist__439131);
          return G__439130__delegate(x, y, z, args)
        };
        G__439130.cljs$core$IFn$_invoke$arity$variadic = G__439130__delegate;
        return G__439130
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__439132__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__439111_SHARP_) {
            return p1__439111_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__439112_SHARP_) {
            var or__3943__auto__ = p1__439112_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return p1__439112_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__439113_SHARP_) {
            var or__3943__auto__ = p1__439113_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              var or__3943__auto____$1 = p1__439113_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p1__439113_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__439133__delegate = function(x, y, z, args) {
            var or__3943__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.some.call(null, function(p1__439114_SHARP_) {
                return cljs.core.some.call(null, p1__439114_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__439133 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__439133__delegate.call(this, x, y, z, args)
          };
          G__439133.cljs$lang$maxFixedArity = 3;
          G__439133.cljs$lang$applyTo = function(arglist__439134) {
            var x = cljs.core.first(arglist__439134);
            arglist__439134 = cljs.core.next(arglist__439134);
            var y = cljs.core.first(arglist__439134);
            arglist__439134 = cljs.core.next(arglist__439134);
            var z = cljs.core.first(arglist__439134);
            var args = cljs.core.rest(arglist__439134);
            return G__439133__delegate(x, y, z, args)
          };
          G__439133.cljs$core$IFn$_invoke$arity$variadic = G__439133__delegate;
          return G__439133
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__439132 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__439132__delegate.call(this, p1, p2, p3, ps)
    };
    G__439132.cljs$lang$maxFixedArity = 3;
    G__439132.cljs$lang$applyTo = function(arglist__439135) {
      var p1 = cljs.core.first(arglist__439135);
      arglist__439135 = cljs.core.next(arglist__439135);
      var p2 = cljs.core.first(arglist__439135);
      arglist__439135 = cljs.core.next(arglist__439135);
      var p3 = cljs.core.first(arglist__439135);
      var ps = cljs.core.rest(arglist__439135);
      return G__439132__delegate(p1, p2, p3, ps)
    };
    G__439132.cljs$core$IFn$_invoke$arity$variadic = G__439132__delegate;
    return G__439132
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3306__auto___439136 = size;
          var i_439137 = 0;
          while(true) {
            if(i_439137 < n__3306__auto___439136) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_439137)));
              var G__439138 = i_439137 + 1;
              i_439137 = G__439138;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          var and__3941__auto____$1 = s2;
          if(and__3941__auto____$1) {
            return s3
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__439139__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__439125_SHARP_) {
        return cljs.core.apply.call(null, f, p1__439125_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__439139 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__439139__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__439139.cljs$lang$maxFixedArity = 4;
    G__439139.cljs$lang$applyTo = function(arglist__439140) {
      var f = cljs.core.first(arglist__439140);
      arglist__439140 = cljs.core.next(arglist__439140);
      var c1 = cljs.core.first(arglist__439140);
      arglist__439140 = cljs.core.next(arglist__439140);
      var c2 = cljs.core.first(arglist__439140);
      arglist__439140 = cljs.core.next(arglist__439140);
      var c3 = cljs.core.first(arglist__439140);
      var colls = cljs.core.rest(arglist__439140);
      return G__439139__delegate(f, c1, c2, c3, colls)
    };
    G__439139.cljs$core$IFn$_invoke$arity$variadic = G__439139__delegate;
    return G__439139
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = n__$1 > 0;
        if(and__3941__auto__) {
          return s
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__439141 = n__$1 - 1;
        var G__439142 = cljs.core.rest.call(null, s);
        n__$1 = G__439141;
        coll__$1 = G__439142;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__439143 = cljs.core.next.call(null, s);
      var G__439144 = cljs.core.next.call(null, lead);
      s = G__439143;
      lead = G__439144;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = s;
        if(and__3941__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__439145 = pred__$1;
        var G__439146 = cljs.core.rest.call(null, s);
        pred__$1 = G__439145;
        coll__$1 = G__439146;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__439147__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null)
    };
    var G__439147 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__439147__delegate.call(this, c1, c2, colls)
    };
    G__439147.cljs$lang$maxFixedArity = 2;
    G__439147.cljs$lang$applyTo = function(arglist__439148) {
      var c1 = cljs.core.first(arglist__439148);
      arglist__439148 = cljs.core.next(arglist__439148);
      var c2 = cljs.core.first(arglist__439148);
      var colls = cljs.core.rest(arglist__439148);
      return G__439147__delegate(c1, c2, colls)
    };
    G__439147.cljs$core$IFn$_invoke$arity$variadic = G__439147__delegate;
    return G__439147
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__439149__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__439149 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__439149__delegate.call(this, f, coll, colls)
    };
    G__439149.cljs$lang$maxFixedArity = 2;
    G__439149.cljs$lang$applyTo = function(arglist__439150) {
      var f = cljs.core.first(arglist__439150);
      arglist__439150 = cljs.core.next(arglist__439150);
      var coll = cljs.core.first(arglist__439150);
      var colls = cljs.core.rest(arglist__439150);
      return G__439149__delegate(f, coll, colls)
    };
    G__439149.cljs$core$IFn$_invoke$arity$variadic = G__439149__delegate;
    return G__439149
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3306__auto___439151 = size;
        var i_439152 = 0;
        while(true) {
          if(i_439152 < n__3306__auto___439151) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_439152)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_439152))
            }else {
            }
            var G__439153 = i_439152 + 1;
            i_439152 = G__439153;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__439154_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__439154_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__439156 = to;
      if(G__439156) {
        if(function() {
          var or__3943__auto__ = G__439156.cljs$lang$protocol_mask$partition1$ & 4;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__439156.cljs$core$IEditableCollection$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__439157__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__439157 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__439157__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__439157.cljs$lang$maxFixedArity = 4;
    G__439157.cljs$lang$applyTo = function(arglist__439158) {
      var f = cljs.core.first(arglist__439158);
      arglist__439158 = cljs.core.next(arglist__439158);
      var c1 = cljs.core.first(arglist__439158);
      arglist__439158 = cljs.core.next(arglist__439158);
      var c2 = cljs.core.first(arglist__439158);
      arglist__439158 = cljs.core.next(arglist__439158);
      var c3 = cljs.core.first(arglist__439158);
      var colls = cljs.core.rest(arglist__439158);
      return G__439157__delegate(f, c1, c2, c3, colls)
    };
    G__439157.cljs$core$IFn$_invoke$arity$variadic = G__439157__delegate;
    return G__439157
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__439160 = m__$1;
          if(G__439160) {
            if(function() {
              var or__3943__auto__ = G__439160.cljs$lang$protocol_mask$partition0$ & 256;
              if(or__3943__auto__) {
                return or__3943__auto__
              }else {
                return G__439160.cljs$core$ILookup$
              }
            }()) {
              return true
            }else {
              if(!G__439160.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__439160)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__439160)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__439161 = sentinel;
            var G__439162 = m__$2;
            var G__439163 = cljs.core.next.call(null, ks__$1);
            sentinel = G__439161;
            m__$1 = G__439162;
            ks__$1 = G__439163;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__439164, v) {
  var vec__439166 = p__439164;
  var k = cljs.core.nth.call(null, vec__439166, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__439166, 1);
  if(cljs.core.truth_(ks)) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__439167, f) {
    var vec__439177 = p__439167;
    var k = cljs.core.nth.call(null, vec__439177, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__439177, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__439168, f, a) {
    var vec__439178 = p__439168;
    var k = cljs.core.nth.call(null, vec__439178, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__439178, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__439169, f, a, b) {
    var vec__439179 = p__439169;
    var k = cljs.core.nth.call(null, vec__439179, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__439179, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__439170, f, a, b, c) {
    var vec__439180 = p__439170;
    var k = cljs.core.nth.call(null, vec__439180, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__439180, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__439182__delegate = function(m, p__439171, f, a, b, c, args) {
      var vec__439181 = p__439171;
      var k = cljs.core.nth.call(null, vec__439181, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__439181, 1);
      if(cljs.core.truth_(ks)) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__439182 = function(m, p__439171, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__439182__delegate.call(this, m, p__439171, f, a, b, c, args)
    };
    G__439182.cljs$lang$maxFixedArity = 6;
    G__439182.cljs$lang$applyTo = function(arglist__439183) {
      var m = cljs.core.first(arglist__439183);
      arglist__439183 = cljs.core.next(arglist__439183);
      var p__439171 = cljs.core.first(arglist__439183);
      arglist__439183 = cljs.core.next(arglist__439183);
      var f = cljs.core.first(arglist__439183);
      arglist__439183 = cljs.core.next(arglist__439183);
      var a = cljs.core.first(arglist__439183);
      arglist__439183 = cljs.core.next(arglist__439183);
      var b = cljs.core.first(arglist__439183);
      arglist__439183 = cljs.core.next(arglist__439183);
      var c = cljs.core.first(arglist__439183);
      var args = cljs.core.rest(arglist__439183);
      return G__439182__delegate(m, p__439171, f, a, b, c, args)
    };
    G__439182.cljs$core$IFn$_invoke$arity$variadic = G__439182__delegate;
    return G__439182
  }();
  update_in = function(m, p__439171, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__439171, f);
      case 4:
        return update_in__4.call(this, m, p__439171, f, a);
      case 5:
        return update_in__5.call(this, m, p__439171, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__439171, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__439171, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
goog.provide("cljs.core.VectorNode");
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3072__auto__, writer__3073__auto__, opts__3074__auto__) {
  return cljs.core._write.call(null, writer__3073__auto__, "cljs.core/VectorNode")
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr)
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__439184 = ll - 5;
      var G__439185 = r;
      ll = G__439184;
      ret = G__439185;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < pv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__439186 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__439187 = level - 5;
          node = G__439186;
          level = G__439187;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt)
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if("\ufdd0:else") {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentVector");
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= k;
    if(and__3941__auto__) {
      return k < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail = self__.tail.slice();
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0:else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__439189 = null;
  var G__439189__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__439189__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__439189 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439189__2.call(this, self__, k);
      case 3:
        return G__439189__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439189
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args439188) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args439188.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__439190 = j + 1;
              var G__439191 = init__$2;
              j = G__439190;
              init__$1 = G__439191;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__439192 = i + step_init[0];
        i = G__439192;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail = self__.tail.slice();
    new_tail.push(o);
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if("\ufdd0:else") {
        return cljs.core.chunked_seq.call(null, coll, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if("\ufdd0:else") {
          var new_tail = cljs.core.array_for.call(null, coll, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(function() {
            var and__3941__auto__ = 5 < self__.shift;
            if(and__3941__auto__) {
              return cljs.core.pv_aget.call(null, new_root, 1) == null
            }else {
              return and__3941__auto__
            }
          }()) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : xs.slice();
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__439193 = i + 1;
        var G__439194 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__439193;
        out = G__439194;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__439195) {
    var args = cljs.core.seq(arglist__439195);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
goog.provide("cljs.core.ChunkedSeq");
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31719660;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash)
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
goog.provide("cljs.core.Subvec");
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, self__.end > v_pos + 1 ? self__.end : v_pos + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__439197 = null;
  var G__439197__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__439197__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__439197 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439197__2.call(this, self__, k);
      case 3:
        return G__439197__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439197
}();
cljs.core.Subvec.prototype.apply = function(self__, args439196) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args439196.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start)
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n)
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return not_found
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__439198 = meta;
      var G__439199 = v.v;
      var G__439200 = v.start + start;
      var G__439201 = v.start + end;
      var G__439202 = __hash;
      meta = G__439198;
      v = G__439199;
      start = G__439200;
      end = G__439201;
      __hash = G__439202;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(function() {
        var or__3943__auto__ = start < 0;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = end < 0;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = start > c;
            if(or__3943__auto____$2) {
              return or__3943__auto____$2
            }else {
              return end > c
            }
          }
        }
      }()) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if("\ufdd0:else") {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < tv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__439203 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__439204 = level - 5;
          node = G__439203;
          level = G__439204;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
goog.provide("cljs.core.TransientVector");
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__439206 = null;
  var G__439206__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__439206__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__439206 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439206__2.call(this, self__, k);
      case 3:
        return G__439206__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439206
}();
cljs.core.TransientVector.prototype.apply = function(self__, args439205) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args439205.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  if(self__.root.edit) {
    if(function() {
      var and__3941__auto__ = 0 <= n;
      if(and__3941__auto__) {
        return n < self__.cnt
      }else {
        return and__3941__auto__
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        self__.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll
      }
    }else {
      if(n === self__.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0:else") {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(function() {
              var and__3941__auto__ = 5 < self__.shift;
              if(and__3941__auto__) {
                return cljs.core.pv_aget.call(null, new_root, 1) == null
              }else {
                return and__3941__auto__
              }
            }()) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail)
};
goog.provide("cljs.core.PersistentQueueSeq");
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash)
};
goog.provide("cljs.core.PersistentQueue");
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3943__auto__ = self__.rear;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = self__.front;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash)
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
goog.provide("cljs.core.NeverEquiv");
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return false
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__439207 = i + incr;
        i = G__439207;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if("\ufdd0:else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__439208 = i + 1;
      var G__439209 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__439208;
      out = G__439209;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_439211 = 0;
  while(true) {
    if(i_439211 < l) {
      var k_439212 = ks[i_439211];
      new_obj[k_439212] = obj[k_439212];
      var G__439213 = i_439211 + 1;
      i_439211 = G__439213;
      continue
    }else {
    }
    break
  }
  return new_obj
};
goog.provide("cljs.core.ObjMap");
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3943__auto__ = self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = self__.keys.slice();
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__439215 = null;
  var G__439215__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__439215__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__439215 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439215__2.call(this, self__, k);
      case 3:
        return G__439215__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439215
}();
cljs.core.ObjMap.prototype.apply = function(self__, args439214) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args439214.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__439216 = cljs.core.rest.call(null, keys__$1);
        var G__439217 = init__$2;
        keys__$1 = G__439216;
        init__$1 = G__439217;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__439210_SHARP_) {
      return cljs.core.vector.call(null, p1__439210_SHARP_, self__.strobj[p1__439210_SHARP_])
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    var new_keys = self__.keys.slice();
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash)
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__439218 = i + 2;
          i = G__439218;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        var and__3941__auto__ = k_SINGLEQUOTE_ instanceof cljs.core.Symbol;
        if(and__3941__auto__) {
          return kstr === k_SINGLEQUOTE_.str
        }else {
          return and__3941__auto__
        }
      }()) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__439219 = i + 2;
          i = G__439219;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__439220 = i + 2;
          i = G__439220;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__439221 = i + 2;
          i = G__439221;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(function() {
    var or__3943__auto__ = goog.isString(k);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return typeof k === "number"
    }
  }()) {
    return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
  }else {
    if(k instanceof cljs.core.Symbol) {
      return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
    }else {
      if(k == null) {
        return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
      }else {
        if("\ufdd0:else") {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_439222 = 0;
  while(true) {
    if(i_439222 < l) {
      narr[i_439222] = arr[i_439222];
      var G__439223 = i_439222 + 1;
      i_439222 = G__439223;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
goog.provide("cljs.core.PersistentArrayMapSeq");
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850702
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/PersistentArrayMapSeq")
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return(self__.arr.length - self__.i) / 2
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.arr[self__.i], self__.arr[self__.i + 1]], true)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if(i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
  }else {
    return null
  }
};
goog.provide("cljs.core.PersistentArrayMap");
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, self__.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll
    }else {
      if("\ufdd0:else") {
        var arr__$1 = function() {
          var G__439225 = self__.arr.slice();
          G__439225[idx + 1] = v;
          return G__439225
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__439226 = null;
  var G__439226__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__439226__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__439226 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439226__2.call(this, self__, k);
      case 3:
        return G__439226__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439226
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args439224) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args439224.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__439227 = i + 2;
        var G__439228 = init__$2;
        i = G__439227;
        init__$1 = G__439228;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__439229 = s + 2;
            var G__439230 = d;
            s = G__439229;
            d = G__439230;
            continue
          }else {
            if("\ufdd0:else") {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__439231 = s + 2;
              var G__439232 = d + 2;
              s = G__439231;
              d = G__439232;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash)
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : arr.slice();
  var cnt = arr__$1.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
};
goog.provide("cljs.core.TransientArrayMap");
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__439233_439235 = self__.arr;
      G__439233_439235.pop();
      G__439233_439235.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll
      }else {
        self__.arr[idx + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__439234 = o;
      if(G__439234) {
        if(function() {
          var or__3943__auto__ = G__439234.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__439234.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__439234.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__439234)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__439234)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__439236 = cljs.core.next.call(null, es);
          var G__439237 = tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__$1, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__439236;
          tcoll__$1 = G__439237;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr)
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__439238 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__439239 = i + 2;
      out = G__439238;
      i = G__439239;
      continue
    }else {
      return out
    }
    break
  }
};
goog.provide("cljs.core.Box");
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3072__auto__, writer__3073__auto__, opts__3074__auto__) {
  return cljs.core._write.call(null, writer__3073__auto__, "cljs.core/Box")
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val)
};
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__439242 = arr.slice();
    G__439242[i] = a;
    return G__439242
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__439243 = arr.slice();
    G__439243[i] = a;
    G__439243[j] = b;
    return G__439243
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__439244 = i + 2;
        var G__439245 = init__$2;
        i = G__439244;
        init__$1 = G__439245;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
goog.provide("cljs.core.BitmapIndexedNode");
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_439246 = 0;
        var j_439247 = 0;
        while(true) {
          if(i_439246 < 32) {
            if((self__.bitmap >>> i_439246 & 1) === 0) {
              var G__439248 = i_439246 + 1;
              var G__439249 = j_439247;
              i_439246 = G__439248;
              j_439247 = G__439249;
              continue
            }else {
              nodes[i_439246] = !(self__.arr[j_439247] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_439247]), self__.arr[j_439247], self__.arr[j_439247 + 1], added_leaf_QMARK_) : self__.arr[j_439247 + 1];
              var G__439250 = i_439246 + 1;
              var G__439251 = j_439247 + 2;
              i_439246 = G__439250;
              j_439247 = G__439251;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if("\ufdd0:else") {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if("\ufdd0:else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if("\ufdd0:else") {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if("\ufdd0:else") {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil, val_or_node], true)
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if("\ufdd0:else") {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if("\ufdd0:else") {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_439252 = 0;
      var j_439253 = 0;
      while(true) {
        if(i_439252 < 32) {
          if((self__.bitmap >>> i_439252 & 1) === 0) {
            var G__439254 = i_439252 + 1;
            var G__439255 = j_439253;
            i_439252 = G__439254;
            j_439253 = G__439255;
            continue
          }else {
            nodes[i_439252] = !(self__.arr[j_439253] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_439253]), self__.arr[j_439253], self__.arr[j_439253 + 1], added_leaf_QMARK_) : self__.arr[j_439253 + 1];
            var G__439256 = i_439252 + 1;
            var G__439257 = j_439253 + 2;
            i_439252 = G__439256;
            j_439253 = G__439257;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if("\ufdd0:else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr)
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(function() {
        var and__3941__auto__ = !(i === idx);
        if(and__3941__auto__) {
          return!(arr[i] == null)
        }else {
          return and__3941__auto__
        }
      }()) {
        new_arr[j] = arr[i];
        var G__439258 = i + 1;
        var G__439259 = j + 2;
        var G__439260 = bitmap | 1 << i;
        i = G__439258;
        j = G__439259;
        bitmap = G__439260;
        continue
      }else {
        var G__439261 = i + 1;
        var G__439262 = j;
        var G__439263 = bitmap;
        i = G__439261;
        j = G__439262;
        bitmap = G__439263;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
goog.provide("cljs.core.ArrayNode");
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if("\ufdd0:else") {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, self__.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__439264 = i + 1;
          var G__439265 = init__$2;
          i = G__439264;
          init__$1 = G__439265;
          continue
        }
      }else {
        var G__439266 = i + 1;
        var G__439267 = init__$1;
        i = G__439266;
        init__$1 = G__439267;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if("\ufdd0:else") {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr)
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__439268 = i + 2;
        i = G__439268;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
goog.provide("cljs.core.HashCollisionNode");
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return cljs.core.PersistentVector.fromArray([self__.arr[idx], self__.arr[idx + 1]], true)
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if("\ufdd0:else") {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = self__.arr.length;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr)
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
goog.provide("cljs.core.NodeSeq");
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.PersistentVector.fromArray([self__.nodes[self__.i], self__.nodes[self__.i + 1]], true)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4090__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__439269 = j + 2;
                j = G__439269;
                continue
              }
            }else {
              var G__439270 = j + 2;
              j = G__439270;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
goog.provide("cljs.core.ArrayNodeSeq");
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4090__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__439271 = j + 1;
              j = G__439271;
              continue
            }
          }else {
            var G__439272 = j + 1;
            j = G__439272;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
goog.provide("cljs.core.PersistentHashMap");
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if("\ufdd0:else") {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(k == null) {
    if(function() {
      var and__3941__auto__ = self__.has_nil_QMARK_;
      if(and__3941__auto__) {
        return v === self__.nil_val
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if("\ufdd0:else") {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__439274 = null;
  var G__439274__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__439274__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__439274 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439274__2.call(this, self__, k);
      case 3:
        return G__439274__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439274
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args439273) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args439273.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if("\ufdd0:else") {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, self__.nil_val], true), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(self__.root == null) {
      return coll
    }else {
      if("\ufdd0:else") {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash)
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__439275 = i + 1;
      var G__439276 = cljs.core.assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__439275;
      out = G__439276;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
goog.provide("cljs.core.TransientHashMap");
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__439277 = o;
      if(G__439277) {
        if(function() {
          var or__3943__auto__ = G__439277.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__439277.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__439277.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__439277)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__439277)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__439278 = cljs.core.next.call(null, es);
          var G__439279 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__439278;
          tcoll__$1 = G__439279;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val)
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__439280 = ascending_QMARK_ ? t.left : t.right;
      var G__439281 = cljs.core.conj.call(null, stack__$1, t);
      t = G__439280;
      stack__$1 = G__439281;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
goog.provide("cljs.core.PersistentTreeMapSeq");
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850574
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0:else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0:else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3941__auto__ = right instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return right.left instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0:else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3941__auto__ = left instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return left.right instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0:else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
goog.provide("cljs.core.BlackNode");
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__439283 = null;
  var G__439283__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__439283__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__439283 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439283__2.call(this, self__, k);
      case 3:
        return G__439283__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439283
}();
cljs.core.BlackNode.prototype.apply = function(self__, args439282) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args439282.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash)
};
goog.provide("cljs.core.RedNode");
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__439285 = null;
  var G__439285__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__439285__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__439285 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439285__2.call(this, self__, k);
      case 3:
        return G__439285__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439285
}();
cljs.core.RedNode.prototype.apply = function(self__, args439284) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args439284.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if("\ufdd0:else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if("\ufdd0:else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash)
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if("\ufdd0:else") {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0:else") {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3943__auto__ = !(del == null);
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0:else") {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3943__auto__ = !(del == null);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0:else") {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentTreeMap");
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var n = coll.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__439287 = null;
  var G__439287__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__439287__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__439287 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439287__2.call(this, self__, k);
      case 3:
        return G__439287__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439287
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args439286) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args439286.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__439288 = t.left;
          t = G__439288;
          continue
        }else {
          if("\ufdd0:else") {
            var G__439289 = t.right;
            t = G__439289;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__439290 = cljs.core.conj.call(null, stack, t);
              var G__439291 = t.left;
              stack = G__439290;
              t = G__439291;
              continue
            }else {
              var G__439292 = stack;
              var G__439293 = t.right;
              stack = G__439292;
              t = G__439293;
              continue
            }
          }else {
            if("\ufdd0:else") {
              if(c > 0) {
                var G__439294 = cljs.core.conj.call(null, stack, t);
                var G__439295 = t.right;
                stack = G__439294;
                t = G__439295;
                continue
              }else {
                var G__439296 = stack;
                var G__439297 = t.left;
                stack = G__439296;
                t = G__439297;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash)
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__439298 = cljs.core.nnext.call(null, in$);
        var G__439299 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__439298;
        out = G__439299;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__439300) {
    var keyvals = cljs.core.seq(arglist__439300);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__439301) {
    var keyvals = cljs.core.seq(arglist__439301);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = {};
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__439302 = cljs.core.nnext.call(null, kvs);
        kvs = G__439302;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__439303) {
    var keyvals = cljs.core.seq(arglist__439303);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__439304 = cljs.core.nnext.call(null, in$);
        var G__439305 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__439304;
        out = G__439305;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__439306) {
    var keyvals = cljs.core.seq(arglist__439306);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__439307 = cljs.core.nnext.call(null, in$);
        var G__439308 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__439307;
        out = G__439308;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__439309) {
    var comparator = cljs.core.first(arglist__439309);
    var keyvals = cljs.core.rest(arglist__439309);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
goog.provide("cljs.core.KeySeq");
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/KeySeq")
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__439310 = self__.mseq;
    if(G__439310) {
      if(function() {
        var or__3943__auto__ = G__439310.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__439310.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__439310.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__439310)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__439310)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me)
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__439311 = self__.mseq;
    if(G__439311) {
      if(function() {
        var or__3943__auto__ = G__439311.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__439311.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__439311.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__439311)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__439311)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta)
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta)
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
goog.provide("cljs.core.ValSeq");
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/ValSeq")
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__439312 = self__.mseq;
    if(G__439312) {
      if(function() {
        var or__3943__auto__ = G__439312.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__439312.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__439312.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__439312)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__439312)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me)
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__439313 = self__.mseq;
    if(G__439313) {
      if(function() {
        var or__3943__auto__ = G__439313.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__439313.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__439313.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__439313)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__439313)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta)
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta)
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__439314_SHARP_, p2__439315_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3943__auto__ = p1__439314_SHARP_;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.PersistentArrayMap.EMPTY
          }
        }(), p2__439315_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__439316) {
    var maps = cljs.core.seq(arglist__439316);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3943__auto__ = m1;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.PersistentArrayMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__439317) {
    var f = cljs.core.first(arglist__439317);
    var maps = cljs.core.rest(arglist__439317);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, "\ufdd0:cljs.core/not-found");
      var G__439318 = cljs.core.not_EQ_.call(null, entry, "\ufdd0:cljs.core/not-found") ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__439319 = cljs.core.next.call(null, keys);
      ret = G__439318;
      keys = G__439319;
      continue
    }else {
      return ret
    }
    break
  }
};
goog.provide("cljs.core.PersistentHashSet");
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__439322 = null;
  var G__439322__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__439322__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__439322 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439322__2.call(this, self__, k);
      case 3:
        return G__439322__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439322
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args439321) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args439321.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__439320_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__439320_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len / 2 <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : items.slice();
    return new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.fromArray.call(null, arr, true), null)
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__439323 = i + 2;
        var G__439324 = cljs.core.conj_BANG_.call(null, out, items[i]);
        i = G__439323;
        out = G__439324;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
goog.provide("cljs.core.TransientHashSet");
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__439327 = null;
  var G__439327__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__439327__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__439327 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439327__2.call(this, self__, k);
      case 3:
        return G__439327__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439327
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args439326) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args439326.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map)
};
goog.provide("cljs.core.PersistentTreeSet");
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__439329 = null;
  var G__439329__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__439329__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__439329 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__439329__2.call(this, self__, k);
      case 3:
        return G__439329__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__439329
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args439328) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args439328.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__439325_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__439325_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__439330__delegate = function(keys) {
      if(function() {
        var and__3941__auto__ = keys instanceof cljs.core.IndexedSeq;
        if(and__3941__auto__) {
          return keys.arr.length < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD
        }else {
          return and__3941__auto__
        }
      }()) {
        var karr = keys.arr;
        var klen = karr.length;
        var alen = 2 * klen;
        var arr = new Array(alen);
        var ki = 0;
        while(true) {
          if(ki < klen) {
            var ai = 2 * ki;
            arr[ai] = karr[ki];
            arr[ai + 1] = null;
            var G__439331 = ki + 1;
            ki = G__439331;
            continue
          }else {
            return cljs.core.PersistentHashSet.fromArray.call(null, arr, true)
          }
          break
        }
      }else {
        var in$ = keys;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$ == null)) {
            var G__439332 = cljs.core._next.call(null, in$);
            var G__439333 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$));
            in$ = G__439332;
            out = G__439333;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }
    };
    var G__439330 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__439330__delegate.call(this, keys)
    };
    G__439330.cljs$lang$maxFixedArity = 0;
    G__439330.cljs$lang$applyTo = function(arglist__439334) {
      var keys = cljs.core.seq(arglist__439334);
      return G__439330__delegate(keys)
    };
    G__439330.cljs$core$IFn$_invoke$arity$variadic = G__439330__delegate;
    return G__439330
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__439335) {
    var keys = cljs.core.seq(arglist__439335);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__439337) {
    var comparator = cljs.core.first(arglist__439337);
    var keys = cljs.core.rest(arglist__439337);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__439336_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__439336_SHARP_);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__439336_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__439344, seen__$1) {
        while(true) {
          var vec__439345 = p__439344;
          var f = cljs.core.nth.call(null, vec__439345, 0, null);
          var xs__$1 = vec__439345;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4092__auto__) {
            var s = temp__4092__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__439346 = cljs.core.rest.call(null, s);
              var G__439347 = seen__$1;
              p__439344 = G__439346;
              seen__$1 = G__439347;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__439348 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__439349 = cljs.core.next.call(null, s__$1);
      ret = G__439348;
      s__$1 = G__439349;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__439351 = x;
    if(G__439351) {
      if(function() {
        var or__3943__auto__ = G__439351.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__439351.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(cljs.core.string_QMARK_.call(null, x)) {
      return x
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var i = x.lastIndexOf("/", x.length - 2);
        if(i < 0) {
          return cljs.core.subs.call(null, x, 2)
        }else {
          return cljs.core.subs.call(null, x, i + 1)
        }
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__439353 = x;
    if(G__439353) {
      if(function() {
        var or__3943__auto__ = G__439353.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__439353.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      var i = x.lastIndexOf("/", x.length - 2);
      if(i > -1) {
        return cljs.core.subs.call(null, x, 2, i)
      }else {
        return null
      }
    }else {
      throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3941__auto__ = ks;
      if(and__3941__auto__) {
        return vs
      }else {
        return and__3941__auto__
      }
    }()) {
      var G__439356 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__439357 = cljs.core.next.call(null, ks);
      var G__439358 = cljs.core.next.call(null, vs);
      map = G__439356;
      ks = G__439357;
      vs = G__439358;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, map)
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__439361__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__439354_SHARP_, p2__439355_SHARP_) {
        return max_key.call(null, k, p1__439354_SHARP_, p2__439355_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__439361 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__439361__delegate.call(this, k, x, y, more)
    };
    G__439361.cljs$lang$maxFixedArity = 3;
    G__439361.cljs$lang$applyTo = function(arglist__439362) {
      var k = cljs.core.first(arglist__439362);
      arglist__439362 = cljs.core.next(arglist__439362);
      var x = cljs.core.first(arglist__439362);
      arglist__439362 = cljs.core.next(arglist__439362);
      var y = cljs.core.first(arglist__439362);
      var more = cljs.core.rest(arglist__439362);
      return G__439361__delegate(k, x, y, more)
    };
    G__439361.cljs$core$IFn$_invoke$arity$variadic = G__439361__delegate;
    return G__439361
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__439363__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__439359_SHARP_, p2__439360_SHARP_) {
        return min_key.call(null, k, p1__439359_SHARP_, p2__439360_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__439363 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__439363__delegate.call(this, k, x, y, more)
    };
    G__439363.cljs$lang$maxFixedArity = 3;
    G__439363.cljs$lang$applyTo = function(arglist__439364) {
      var k = cljs.core.first(arglist__439364);
      arglist__439364 = cljs.core.next(arglist__439364);
      var x = cljs.core.first(arglist__439364);
      arglist__439364 = cljs.core.next(arglist__439364);
      var y = cljs.core.first(arglist__439364);
      var more = cljs.core.rest(arglist__439364);
      return G__439363__delegate(k, x, y, more)
    };
    G__439363.cljs$core$IFn$_invoke$arity$variadic = G__439363__delegate;
    return G__439363
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test__$1, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test__$1.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test__$1, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test__$1, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, null, cljs.core._GT__EQ_, null], true).call(null, test__$1))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__439367 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__439367, 0, null);
        var s = vec__439367;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__439368 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__439368, 0, null);
      var s = vec__439368;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test__$1, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test__$1, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, null, cljs.core._LT__EQ_, null], true).call(null, test__$1))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__439371 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__439371, 0, null);
        var s = vec__439371;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__439372 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__439372, 0, null);
      var s = vec__439372;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
goog.provide("cljs.core.Range");
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var h__2954__auto__ = self__.__hash;
  if(!(h__2954__auto__ == null)) {
    return h__2954__auto__
  }else {
    var h__2954__auto____$1 = cljs.core.hash_coll.call(null, rng);
    self__.__hash = h__2954__auto____$1;
    return h__2954__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__439373_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__439373_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__439384 = null;
      var G__439384__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__439384__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__439384__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__439384__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__439384__4 = function() {
        var G__439385__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__439385 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439385__delegate.call(this, x, y, z, args)
        };
        G__439385.cljs$lang$maxFixedArity = 3;
        G__439385.cljs$lang$applyTo = function(arglist__439386) {
          var x = cljs.core.first(arglist__439386);
          arglist__439386 = cljs.core.next(arglist__439386);
          var y = cljs.core.first(arglist__439386);
          arglist__439386 = cljs.core.next(arglist__439386);
          var z = cljs.core.first(arglist__439386);
          var args = cljs.core.rest(arglist__439386);
          return G__439385__delegate(x, y, z, args)
        };
        G__439385.cljs$core$IFn$_invoke$arity$variadic = G__439385__delegate;
        return G__439385
      }();
      G__439384 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__439384__0.call(this);
          case 1:
            return G__439384__1.call(this, x);
          case 2:
            return G__439384__2.call(this, x, y);
          case 3:
            return G__439384__3.call(this, x, y, z);
          default:
            return G__439384__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__439384.cljs$lang$maxFixedArity = 3;
      G__439384.cljs$lang$applyTo = G__439384__4.cljs$lang$applyTo;
      return G__439384
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__439387 = null;
      var G__439387__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__439387__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__439387__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__439387__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__439387__4 = function() {
        var G__439388__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__439388 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439388__delegate.call(this, x, y, z, args)
        };
        G__439388.cljs$lang$maxFixedArity = 3;
        G__439388.cljs$lang$applyTo = function(arglist__439389) {
          var x = cljs.core.first(arglist__439389);
          arglist__439389 = cljs.core.next(arglist__439389);
          var y = cljs.core.first(arglist__439389);
          arglist__439389 = cljs.core.next(arglist__439389);
          var z = cljs.core.first(arglist__439389);
          var args = cljs.core.rest(arglist__439389);
          return G__439388__delegate(x, y, z, args)
        };
        G__439388.cljs$core$IFn$_invoke$arity$variadic = G__439388__delegate;
        return G__439388
      }();
      G__439387 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__439387__0.call(this);
          case 1:
            return G__439387__1.call(this, x);
          case 2:
            return G__439387__2.call(this, x, y);
          case 3:
            return G__439387__3.call(this, x, y, z);
          default:
            return G__439387__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__439387.cljs$lang$maxFixedArity = 3;
      G__439387.cljs$lang$applyTo = G__439387__4.cljs$lang$applyTo;
      return G__439387
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__439390 = null;
      var G__439390__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__439390__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__439390__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__439390__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__439390__4 = function() {
        var G__439391__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__439391 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__439391__delegate.call(this, x, y, z, args)
        };
        G__439391.cljs$lang$maxFixedArity = 3;
        G__439391.cljs$lang$applyTo = function(arglist__439392) {
          var x = cljs.core.first(arglist__439392);
          arglist__439392 = cljs.core.next(arglist__439392);
          var y = cljs.core.first(arglist__439392);
          arglist__439392 = cljs.core.next(arglist__439392);
          var z = cljs.core.first(arglist__439392);
          var args = cljs.core.rest(arglist__439392);
          return G__439391__delegate(x, y, z, args)
        };
        G__439391.cljs$core$IFn$_invoke$arity$variadic = G__439391__delegate;
        return G__439391
      }();
      G__439390 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__439390__0.call(this);
          case 1:
            return G__439390__1.call(this, x);
          case 2:
            return G__439390__2.call(this, x, y);
          case 3:
            return G__439390__3.call(this, x, y, z);
          default:
            return G__439390__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__439390.cljs$lang$maxFixedArity = 3;
      G__439390.cljs$lang$applyTo = G__439390__4.cljs$lang$applyTo;
      return G__439390
    }()
  };
  var juxt__4 = function() {
    var G__439393__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__439394 = null;
        var G__439394__0 = function() {
          return cljs.core.reduce.call(null, function(p1__439374_SHARP_, p2__439375_SHARP_) {
            return cljs.core.conj.call(null, p1__439374_SHARP_, p2__439375_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__439394__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__439376_SHARP_, p2__439377_SHARP_) {
            return cljs.core.conj.call(null, p1__439376_SHARP_, p2__439377_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__439394__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__439378_SHARP_, p2__439379_SHARP_) {
            return cljs.core.conj.call(null, p1__439378_SHARP_, p2__439379_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__439394__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__439380_SHARP_, p2__439381_SHARP_) {
            return cljs.core.conj.call(null, p1__439380_SHARP_, p2__439381_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__439394__4 = function() {
          var G__439395__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__439382_SHARP_, p2__439383_SHARP_) {
              return cljs.core.conj.call(null, p1__439382_SHARP_, cljs.core.apply.call(null, p2__439383_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__439395 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__439395__delegate.call(this, x, y, z, args)
          };
          G__439395.cljs$lang$maxFixedArity = 3;
          G__439395.cljs$lang$applyTo = function(arglist__439396) {
            var x = cljs.core.first(arglist__439396);
            arglist__439396 = cljs.core.next(arglist__439396);
            var y = cljs.core.first(arglist__439396);
            arglist__439396 = cljs.core.next(arglist__439396);
            var z = cljs.core.first(arglist__439396);
            var args = cljs.core.rest(arglist__439396);
            return G__439395__delegate(x, y, z, args)
          };
          G__439395.cljs$core$IFn$_invoke$arity$variadic = G__439395__delegate;
          return G__439395
        }();
        G__439394 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__439394__0.call(this);
            case 1:
              return G__439394__1.call(this, x);
            case 2:
              return G__439394__2.call(this, x, y);
            case 3:
              return G__439394__3.call(this, x, y, z);
            default:
              return G__439394__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__439394.cljs$lang$maxFixedArity = 3;
        G__439394.cljs$lang$applyTo = G__439394__4.cljs$lang$applyTo;
        return G__439394
      }()
    };
    var G__439393 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__439393__delegate.call(this, f, g, h, fs)
    };
    G__439393.cljs$lang$maxFixedArity = 3;
    G__439393.cljs$lang$applyTo = function(arglist__439397) {
      var f = cljs.core.first(arglist__439397);
      arglist__439397 = cljs.core.next(arglist__439397);
      var g = cljs.core.first(arglist__439397);
      arglist__439397 = cljs.core.next(arglist__439397);
      var h = cljs.core.first(arglist__439397);
      var fs = cljs.core.rest(arglist__439397);
      return G__439393__delegate(f, g, h, fs)
    };
    G__439393.cljs$core$IFn$_invoke$arity$variadic = G__439393__delegate;
    return G__439393
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__439398 = cljs.core.next.call(null, coll);
        coll = G__439398;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = cljs.core.seq.call(null, coll);
        if(and__3941__auto__) {
          return n > 0
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__439399 = n - 1;
        var G__439400 = cljs.core.next.call(null, coll);
        n = G__439399;
        coll = G__439400;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data, re_seq.call(null, re, post_match))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__439402 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__439402, 0, null);
  var flags = cljs.core.nth.call(null, vec__439402, 1, null);
  var pattern = cljs.core.nth.call(null, vec__439402, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var seq__439407_439411 = cljs.core.seq.call(null, cljs.core.next.call(null, coll));
  var chunk__439408_439412 = null;
  var count__439409_439413 = 0;
  var i__439410_439414 = 0;
  while(true) {
    if(i__439410_439414 < count__439409_439413) {
      var o_439415 = cljs.core._nth.call(null, chunk__439408_439412, i__439410_439414);
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, o_439415, writer, opts);
      var G__439416 = seq__439407_439411;
      var G__439417 = chunk__439408_439412;
      var G__439418 = count__439409_439413;
      var G__439419 = i__439410_439414 + 1;
      seq__439407_439411 = G__439416;
      chunk__439408_439412 = G__439417;
      count__439409_439413 = G__439418;
      i__439410_439414 = G__439419;
      continue
    }else {
      var temp__4092__auto___439420 = cljs.core.seq.call(null, seq__439407_439411);
      if(temp__4092__auto___439420) {
        var seq__439407_439421__$1 = temp__4092__auto___439420;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__439407_439421__$1)) {
          var c__3259__auto___439422 = cljs.core.chunk_first.call(null, seq__439407_439421__$1);
          var G__439423 = cljs.core.chunk_rest.call(null, seq__439407_439421__$1);
          var G__439424 = c__3259__auto___439422;
          var G__439425 = cljs.core.count.call(null, c__3259__auto___439422);
          var G__439426 = 0;
          seq__439407_439411 = G__439423;
          chunk__439408_439412 = G__439424;
          count__439409_439413 = G__439425;
          i__439410_439414 = G__439426;
          continue
        }else {
          var o_439427 = cljs.core.first.call(null, seq__439407_439421__$1);
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, o_439427, writer, opts);
          var G__439428 = cljs.core.next.call(null, seq__439407_439421__$1);
          var G__439429 = null;
          var G__439430 = 0;
          var G__439431 = 0;
          seq__439407_439411 = G__439428;
          chunk__439408_439412 = G__439429;
          count__439409_439413 = G__439430;
          i__439410_439414 = G__439431;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__439436 = cljs.core.seq.call(null, ss);
    var chunk__439437 = null;
    var count__439438 = 0;
    var i__439439 = 0;
    while(true) {
      if(i__439439 < count__439438) {
        var s = cljs.core._nth.call(null, chunk__439437, i__439439);
        cljs.core._write.call(null, writer, s);
        var G__439440 = seq__439436;
        var G__439441 = chunk__439437;
        var G__439442 = count__439438;
        var G__439443 = i__439439 + 1;
        seq__439436 = G__439440;
        chunk__439437 = G__439441;
        count__439438 = G__439442;
        i__439439 = G__439443;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__439436);
        if(temp__4092__auto__) {
          var seq__439436__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__439436__$1)) {
            var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__439436__$1);
            var G__439444 = cljs.core.chunk_rest.call(null, seq__439436__$1);
            var G__439445 = c__3259__auto__;
            var G__439446 = cljs.core.count.call(null, c__3259__auto__);
            var G__439447 = 0;
            seq__439436 = G__439444;
            chunk__439437 = G__439445;
            count__439438 = G__439446;
            i__439439 = G__439447;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__439436__$1);
            cljs.core._write.call(null, writer, s);
            var G__439448 = cljs.core.next.call(null, seq__439436__$1);
            var G__439449 = null;
            var G__439450 = 0;
            var G__439451 = 0;
            seq__439436 = G__439448;
            chunk__439437 = G__439449;
            count__439438 = G__439450;
            i__439439 = G__439451;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__439452) {
    var writer = cljs.core.first(arglist__439452);
    var ss = cljs.core.rest(arglist__439452);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#<undefined>")
    }else {
      if("\ufdd0:else") {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = cljs.core.get.call(null, opts, "\ufdd0:meta");
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = function() {
              var G__439456 = obj;
              if(G__439456) {
                if(function() {
                  var or__3943__auto__ = G__439456.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__439456.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__439456.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__439456)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__439456)
              }
            }();
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__439457 = obj;
              if(G__439457) {
                if(function() {
                  var or__3943__auto__ = G__439457.cljs$lang$protocol_mask$partition0$ & 2147483648;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__439457.cljs$core$IPrintWithWriter$
                  }
                }()) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(function() {
                var or__3943__auto__ = cljs.core.type.call(null, obj) === Boolean;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return typeof obj === "number"
                }
              }()) {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#<Array [", ", ", "]>", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.keyword_QMARK_.call(null, obj)) {
                      cljs.core._write.call(null, writer, ":");
                      var temp__4092__auto___439459 = cljs.core.namespace.call(null, obj);
                      if(cljs.core.truth_(temp__4092__auto___439459)) {
                        var nspc_439460 = temp__4092__auto___439459;
                        cljs.core.write_all.call(null, writer, [cljs.core.str(nspc_439460)].join(""), "/")
                      }else {
                      }
                      return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
                    }else {
                      if(obj instanceof cljs.core.Symbol) {
                        var temp__4092__auto___439461 = cljs.core.namespace.call(null, obj);
                        if(cljs.core.truth_(temp__4092__auto___439461)) {
                          var nspc_439462 = temp__4092__auto___439461;
                          cljs.core.write_all.call(null, writer, [cljs.core.str(nspc_439462)].join(""), "/")
                        }else {
                        }
                        return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
                      }else {
                        if("\ufdd0:else") {
                          if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0:readably")).call(null, opts))) {
                            return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                          }else {
                            return cljs.core._write.call(null, writer, obj)
                          }
                        }else {
                          return null
                        }
                      }
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#<", [cljs.core.str(obj)].join(""), ">")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__439463 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__439463;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj))) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if(function() {
                            var G__439458 = obj;
                            if(G__439458) {
                              if(function() {
                                var or__3943__auto__ = G__439458.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if(or__3943__auto__) {
                                  return or__3943__auto__
                                }else {
                                  return G__439458.cljs$core$IPrintWithWriter$
                                }
                              }()) {
                                return true
                              }else {
                                if(!G__439458.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__439458)
                                }else {
                                  return false
                                }
                              }
                            }else {
                              return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__439458)
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts)
                          }else {
                            if("\ufdd0:else") {
                              return cljs.core.write_all.call(null, writer, "#<", [cljs.core.str(obj)].join(""), ">")
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__439468 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__439469 = null;
  var count__439470 = 0;
  var i__439471 = 0;
  while(true) {
    if(i__439471 < count__439470) {
      var obj = cljs.core._nth.call(null, chunk__439469, i__439471);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__439472 = seq__439468;
      var G__439473 = chunk__439469;
      var G__439474 = count__439470;
      var G__439475 = i__439471 + 1;
      seq__439468 = G__439472;
      chunk__439469 = G__439473;
      count__439470 = G__439474;
      i__439471 = G__439475;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__439468);
      if(temp__4092__auto__) {
        var seq__439468__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__439468__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__439468__$1);
          var G__439476 = cljs.core.chunk_rest.call(null, seq__439468__$1);
          var G__439477 = c__3259__auto__;
          var G__439478 = cljs.core.count.call(null, c__3259__auto__);
          var G__439479 = 0;
          seq__439468 = G__439476;
          chunk__439469 = G__439477;
          count__439470 = G__439478;
          i__439471 = G__439479;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__439468__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__439480 = cljs.core.next.call(null, seq__439468__$1);
          var G__439481 = null;
          var G__439482 = 0;
          var G__439483 = 0;
          seq__439468 = G__439480;
          chunk__439469 = G__439481;
          count__439470 = G__439482;
          i__439471 = G__439483;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, "\ufdd0:flush-on-newline"))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__439484) {
    var objs = cljs.core.seq(arglist__439484);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__439485) {
    var objs = cljs.core.seq(arglist__439485);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__439486) {
    var objs = cljs.core.seq(arglist__439486);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__439487) {
    var objs = cljs.core.seq(arglist__439487);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__439488) {
    var objs = cljs.core.seq(arglist__439488);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__439489) {
    var objs = cljs.core.seq(arglist__439489);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__439490) {
    var objs = cljs.core.seq(arglist__439490);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__439491) {
    var objs = cljs.core.seq(arglist__439491);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__439492) {
    var fmt = cljs.core.first(arglist__439492);
    var args = cljs.core.rest(arglist__439492);
    return printf__delegate(fmt, args)
  };
  printf.cljs$core$IFn$_invoke$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
goog.provide("cljs.core.Atom");
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var seq__439493 = cljs.core.seq.call(null, self__.watches);
  var chunk__439494 = null;
  var count__439495 = 0;
  var i__439496 = 0;
  while(true) {
    if(i__439496 < count__439495) {
      var vec__439497 = cljs.core._nth.call(null, chunk__439494, i__439496);
      var key = cljs.core.nth.call(null, vec__439497, 0, null);
      var f = cljs.core.nth.call(null, vec__439497, 1, null);
      f.call(null, key, this$, oldval, newval);
      var G__439499 = seq__439493;
      var G__439500 = chunk__439494;
      var G__439501 = count__439495;
      var G__439502 = i__439496 + 1;
      seq__439493 = G__439499;
      chunk__439494 = G__439500;
      count__439495 = G__439501;
      i__439496 = G__439502;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__439493);
      if(temp__4092__auto__) {
        var seq__439493__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__439493__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__439493__$1);
          var G__439503 = cljs.core.chunk_rest.call(null, seq__439493__$1);
          var G__439504 = c__3259__auto__;
          var G__439505 = cljs.core.count.call(null, c__3259__auto__);
          var G__439506 = 0;
          seq__439493 = G__439503;
          chunk__439494 = G__439504;
          count__439495 = G__439505;
          i__439496 = G__439506;
          continue
        }else {
          var vec__439498 = cljs.core.first.call(null, seq__439493__$1);
          var key = cljs.core.nth.call(null, vec__439498, 0, null);
          var f = cljs.core.nth.call(null, vec__439498, 1, null);
          f.call(null, key, this$, oldval, newval);
          var G__439507 = cljs.core.next.call(null, seq__439493__$1);
          var G__439508 = null;
          var G__439509 = 0;
          var G__439510 = 0;
          seq__439493 = G__439507;
          chunk__439494 = G__439508;
          count__439495 = G__439509;
          i__439496 = G__439510;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  return this$.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  return this$.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  cljs.core._write.call(null, writer, "#<Atom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return o === other
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches)
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__439514__delegate = function(x, p__439511) {
      var map__439513 = p__439511;
      var map__439513__$1 = cljs.core.seq_QMARK_.call(null, map__439513) ? cljs.core.apply.call(null, cljs.core.hash_map, map__439513) : map__439513;
      var validator = cljs.core.get.call(null, map__439513__$1, "\ufdd0:validator");
      var meta = cljs.core.get.call(null, map__439513__$1, "\ufdd0:meta");
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__439514 = function(x, var_args) {
      var p__439511 = null;
      if(arguments.length > 1) {
        p__439511 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__439514__delegate.call(this, x, p__439511)
    };
    G__439514.cljs$lang$maxFixedArity = 1;
    G__439514.cljs$lang$applyTo = function(arglist__439515) {
      var x = cljs.core.first(arglist__439515);
      var p__439511 = cljs.core.rest(arglist__439515);
      return G__439514__delegate(x, p__439511)
    };
    G__439514.cljs$core$IFn$_invoke$arity$variadic = G__439514__delegate;
    return G__439514
  }();
  atom = function(x, var_args) {
    var p__439511 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto___439516 = a.validator;
  if(cljs.core.truth_(temp__4092__auto___439516)) {
    var validate_439517 = temp__4092__auto___439516;
    if(cljs.core.truth_(validate_439517.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }else {
  }
  var old_value_439518 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_439518, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__439519__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__439519 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__439519__delegate.call(this, a, f, x, y, z, more)
    };
    G__439519.cljs$lang$maxFixedArity = 5;
    G__439519.cljs$lang$applyTo = function(arglist__439520) {
      var a = cljs.core.first(arglist__439520);
      arglist__439520 = cljs.core.next(arglist__439520);
      var f = cljs.core.first(arglist__439520);
      arglist__439520 = cljs.core.next(arglist__439520);
      var x = cljs.core.first(arglist__439520);
      arglist__439520 = cljs.core.next(arglist__439520);
      var y = cljs.core.first(arglist__439520);
      arglist__439520 = cljs.core.next(arglist__439520);
      var z = cljs.core.first(arglist__439520);
      var more = cljs.core.rest(arglist__439520);
      return G__439519__delegate(a, f, x, y, z, more)
    };
    G__439519.cljs$core$IFn$_invoke$arity$variadic = G__439519__delegate;
    return G__439519
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__439521) {
    var iref = cljs.core.first(arglist__439521);
    arglist__439521 = cljs.core.next(arglist__439521);
    var f = cljs.core.first(arglist__439521);
    var args = cljs.core.rest(arglist__439521);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
goog.provide("cljs.core.Delay");
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  return(new cljs.core.Keyword("\ufdd0:done")).call(null, cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return(new cljs.core.Keyword("\ufdd0:value")).call(null, cljs.core.swap_BANG_.call(null, self__.state, function(p__439522) {
    var map__439523 = p__439522;
    var map__439523__$1 = cljs.core.seq_QMARK_.call(null, map__439523) ? cljs.core.apply.call(null, cljs.core.hash_map, map__439523) : map__439523;
    var curr_state = map__439523__$1;
    var done = cljs.core.get.call(null, map__439523__$1, "\ufdd0:done");
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:done", true, "\ufdd0:value", self__.f.call(null)], true)
    }
  }))
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f)
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__3128__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj->js", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__3128__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._key__GT_js[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key->js", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__439525 = k;
    if(G__439525) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__439525.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__439525.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__439525)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__439525)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(function() {
      var or__3943__auto__ = cljs.core.string_QMARK_.call(null, k);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = typeof k === "number";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          var or__3943__auto____$2 = cljs.core.keyword_QMARK_.call(null, k);
          if(or__3943__auto____$2) {
            return or__3943__auto____$2
          }else {
            return k instanceof cljs.core.Symbol
          }
        }
      }
    }()) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__439533 = x;
      if(G__439533) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__439533.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__439533.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__439533)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__439533)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = {};
            var seq__439534_439540 = cljs.core.seq.call(null, x);
            var chunk__439535_439541 = null;
            var count__439536_439542 = 0;
            var i__439537_439543 = 0;
            while(true) {
              if(i__439537_439543 < count__439536_439542) {
                var vec__439538_439544 = cljs.core._nth.call(null, chunk__439535_439541, i__439537_439543);
                var k_439545 = cljs.core.nth.call(null, vec__439538_439544, 0, null);
                var v_439546 = cljs.core.nth.call(null, vec__439538_439544, 1, null);
                m[cljs.core.key__GT_js.call(null, k_439545)] = clj__GT_js.call(null, v_439546);
                var G__439547 = seq__439534_439540;
                var G__439548 = chunk__439535_439541;
                var G__439549 = count__439536_439542;
                var G__439550 = i__439537_439543 + 1;
                seq__439534_439540 = G__439547;
                chunk__439535_439541 = G__439548;
                count__439536_439542 = G__439549;
                i__439537_439543 = G__439550;
                continue
              }else {
                var temp__4092__auto___439551 = cljs.core.seq.call(null, seq__439534_439540);
                if(temp__4092__auto___439551) {
                  var seq__439534_439552__$1 = temp__4092__auto___439551;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__439534_439552__$1)) {
                    var c__3259__auto___439553 = cljs.core.chunk_first.call(null, seq__439534_439552__$1);
                    var G__439554 = cljs.core.chunk_rest.call(null, seq__439534_439552__$1);
                    var G__439555 = c__3259__auto___439553;
                    var G__439556 = cljs.core.count.call(null, c__3259__auto___439553);
                    var G__439557 = 0;
                    seq__439534_439540 = G__439554;
                    chunk__439535_439541 = G__439555;
                    count__439536_439542 = G__439556;
                    i__439537_439543 = G__439557;
                    continue
                  }else {
                    var vec__439539_439558 = cljs.core.first.call(null, seq__439534_439552__$1);
                    var k_439559 = cljs.core.nth.call(null, vec__439539_439558, 0, null);
                    var v_439560 = cljs.core.nth.call(null, vec__439539_439558, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_439559)] = clj__GT_js.call(null, v_439560);
                    var G__439561 = cljs.core.next.call(null, seq__439534_439552__$1);
                    var G__439562 = null;
                    var G__439563 = 0;
                    var G__439564 = 0;
                    seq__439534_439540 = G__439561;
                    chunk__439535_439541 = G__439562;
                    count__439536_439542 = G__439563;
                    i__439537_439543 = G__439564;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if("\ufdd0:else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__3128__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js->clj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:keywordize-keys", false], true))
  };
  var js__GT_clj__2 = function() {
    var G__439585__delegate = function(x, opts) {
      if(function() {
        var G__439575 = cljs.core.IEncodeClojure;
        if(G__439575) {
          if(cljs.core.truth_(function() {
            var or__3943__auto__ = null;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return G__439575.cljs$core$x$
            }
          }())) {
            return true
          }else {
            if(!G__439575.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, x, G__439575)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, x, G__439575)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__439576 = opts;
          var map__439576__$1 = cljs.core.seq_QMARK_.call(null, map__439576) ? cljs.core.apply.call(null, cljs.core.hash_map, map__439576) : map__439576;
          var keywordize_keys = cljs.core.get.call(null, map__439576__$1, "\ufdd0:keywordize-keys");
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__439576, map__439576__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__3228__auto__ = function(map__439576, map__439576__$1, keywordize_keys, keyfn) {
                          return function iter__439581(s__439582) {
                            return new cljs.core.LazySeq(null, false, function(map__439576, map__439576__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__439582__$1 = s__439582;
                                while(true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__439582__$1);
                                  if(temp__4092__auto__) {
                                    var s__439582__$2 = temp__4092__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__439582__$2)) {
                                      var c__3226__auto__ = cljs.core.chunk_first.call(null, s__439582__$2);
                                      var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
                                      var b__439584 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
                                      if(function() {
                                        var i__439583 = 0;
                                        while(true) {
                                          if(i__439583 < size__3227__auto__) {
                                            var k = cljs.core._nth.call(null, c__3226__auto__, i__439583);
                                            cljs.core.chunk_append.call(null, b__439584, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true));
                                            var G__439586 = i__439583 + 1;
                                            i__439583 = G__439586;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__439584), iter__439581.call(null, cljs.core.chunk_rest.call(null, s__439582__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__439584), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__439582__$2);
                                      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true), iter__439581.call(null, cljs.core.rest.call(null, s__439582__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__439576, map__439576__$1, keywordize_keys, keyfn), null)
                          }
                        }(map__439576, map__439576__$1, keywordize_keys, keyfn);
                        return iter__3228__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if("\ufdd0:else") {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__439576, map__439576__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__439585 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__439585__delegate.call(this, x, opts)
    };
    G__439585.cljs$lang$maxFixedArity = 1;
    G__439585.cljs$lang$applyTo = function(arglist__439587) {
      var x = cljs.core.first(arglist__439587);
      var opts = cljs.core.rest(arglist__439587);
      return G__439585__delegate(x, opts)
    };
    G__439585.cljs$core$IFn$_invoke$arity$variadic = G__439585__delegate;
    return G__439585
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__439588__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__439588 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__439588__delegate.call(this, args)
    };
    G__439588.cljs$lang$maxFixedArity = 0;
    G__439588.cljs$lang$applyTo = function(arglist__439589) {
      var args = cljs.core.seq(arglist__439589);
      return G__439588__delegate(args)
    };
    G__439588.cljs$core$IFn$_invoke$arity$variadic = G__439588__delegate;
    return G__439588
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__439590 = ret;
        f = G__439590;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__439591__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__439591 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__439591__delegate.call(this, f, args)
    };
    G__439591.cljs$lang$maxFixedArity = 1;
    G__439591.cljs$lang$applyTo = function(arglist__439592) {
      var f = cljs.core.first(arglist__439592);
      var args = cljs.core.rest(arglist__439592);
      return G__439591__delegate(f, args)
    };
    G__439591.cljs$core$IFn$_invoke$arity$variadic = G__439591__delegate;
    return G__439591
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:parents", cljs.core.PersistentArrayMap.EMPTY, "\ufdd0:descendants", cljs.core.PersistentArrayMap.EMPTY, "\ufdd0:ancestors", cljs.core.PersistentArrayMap.EMPTY], true)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__439593) {
    var f = cljs.core.first(arglist__439593);
    var args = cljs.core.rest(arglist__439593);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3943__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h).call(null, child), parent);
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        var and__3941__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3941__auto__) {
          var and__3941__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3941__auto____$1) {
            var and__3941__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3941__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(function() {
                  var or__3943__auto____$2 = cljs.core.not.call(null, ret);
                  if(or__3943__auto____$2) {
                    return or__3943__auto____$2
                  }else {
                    return i === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret
                }else {
                  var G__439594 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__439595 = i + 1;
                  ret = G__439594;
                  i = G__439595;
                  continue
                }
                break
              }
            }else {
              return and__3941__auto____$2
            }
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:parents")).call(null, h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not=", "not=", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword("\ufdd0:parents")).call(null, h);
    var td = (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h);
    var ta = (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__3943__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:parents", cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0:parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0:ancestors", tf.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h), tag, td, parent, ta), "\ufdd0:descendants", tf.call(null, (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h), parent, ta, tag, td)], 
      true)
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword("\ufdd0:parents")).call(null, h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__439596_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__439596_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__439596_SHARP_), cljs.core.second.call(null, p1__439596_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__439597_SHARP_, p2__439598_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__439597_SHARP_, p2__439598_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = xprefs;
    if(cljs.core.truth_(and__3941__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__3941__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var or__3943__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__439599 = cljs.core.rest.call(null, ps);
          ps = G__439599;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3943__auto____$1)) {
      return or__3943__auto____$1
    }else {
      var or__3943__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__439600 = cljs.core.rest.call(null, ps);
            ps = G__439600;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3943__auto____$2)) {
        return or__3943__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3943__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__439603) {
    var vec__439604 = p__439603;
    var k = cljs.core.nth.call(null, vec__439604, 0, null);
    var _ = cljs.core.nth.call(null, vec__439604, 1, null);
    var e = vec__439604;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3943__auto__ = be == null;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__3128__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._reset[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._reset["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__3128__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._add_method[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__3128__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._remove_method[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__3128__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefer_method[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefer_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__3128__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._get_method[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._get_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__3128__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._methods[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._methods["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__3128__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefers[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefers["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__3128__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._dispatch[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dispatch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
goog.provide("cljs.core.MultiFn");
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn
  }else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  return cljs.core.do_dispatch.call(null, mf, self__.dispatch_fn, args)
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__439605__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__439605 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__439605__delegate.call(this, _, args)
  };
  G__439605.cljs$lang$maxFixedArity = 1;
  G__439605.cljs$lang$applyTo = function(arglist__439606) {
    var _ = cljs.core.first(arglist__439606);
    var args = cljs.core.rest(arglist__439606);
    return G__439605__delegate(_, args)
  };
  G__439605.cljs$core$IFn$_invoke$arity$variadic = G__439605__delegate;
  return G__439605
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
goog.provide("cljs.core.UUID");
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var and__3941__auto__ = other instanceof cljs.core.UUID;
  if(and__3941__auto__) {
    return self__.uuid === other.uuid
  }else {
    return and__3941__auto__
  }
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid)
};
goog.provide("cljs.core.ExceptionInfo");
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3072__auto__, writer__3073__auto__, opts__3074__auto__) {
  return cljs.core._write.call(null, writer__3073__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause)
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if("\ufdd0:else") {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "try*", "try*", -1636962424, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "&", "&", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], true), x)
};
goog.provide("orchard.util.time");
goog.require("cljs.core");
orchard.util.time.periodically = function periodically(interval, f) {
  var inter = cljs.core.atom.call(null, null);
  var handler = function(inter) {
    return function() {
      if(cljs.core._EQ_.call(null, "\ufdd0:stop", f.call(null))) {
        return clearInterval(cljs.core.deref.call(null, inter))
      }else {
        return null
      }
    }
  }(inter);
  cljs.core.reset_BANG_.call(null, inter, setInterval(handler, interval));
  return cljs.core.deref.call(null, inter)
};
orchard.util.time.clear_interval = function clear_interval(interval_id) {
  return clearInterval(interval_id)
};
orchard.util.time.run_in = function run_in(ms, func) {
  return setTimeout(func, ms)
};
orchard.util.time.now = function now() {
  return(new Date).getTime()
};
goog.provide("goog.i18n.DateTimeSymbols");
goog.provide("goog.i18n.DateTimeSymbols_af");
goog.provide("goog.i18n.DateTimeSymbols_am");
goog.provide("goog.i18n.DateTimeSymbols_ar");
goog.provide("goog.i18n.DateTimeSymbols_bg");
goog.provide("goog.i18n.DateTimeSymbols_bn");
goog.provide("goog.i18n.DateTimeSymbols_ca");
goog.provide("goog.i18n.DateTimeSymbols_chr");
goog.provide("goog.i18n.DateTimeSymbols_cs");
goog.provide("goog.i18n.DateTimeSymbols_cy");
goog.provide("goog.i18n.DateTimeSymbols_da");
goog.provide("goog.i18n.DateTimeSymbols_de");
goog.provide("goog.i18n.DateTimeSymbols_de_AT");
goog.provide("goog.i18n.DateTimeSymbols_de_CH");
goog.provide("goog.i18n.DateTimeSymbols_el");
goog.provide("goog.i18n.DateTimeSymbols_en");
goog.provide("goog.i18n.DateTimeSymbols_en_AU");
goog.provide("goog.i18n.DateTimeSymbols_en_GB");
goog.provide("goog.i18n.DateTimeSymbols_en_IE");
goog.provide("goog.i18n.DateTimeSymbols_en_IN");
goog.provide("goog.i18n.DateTimeSymbols_en_ISO");
goog.provide("goog.i18n.DateTimeSymbols_en_SG");
goog.provide("goog.i18n.DateTimeSymbols_en_US");
goog.provide("goog.i18n.DateTimeSymbols_en_ZA");
goog.provide("goog.i18n.DateTimeSymbols_es");
goog.provide("goog.i18n.DateTimeSymbols_es_419");
goog.provide("goog.i18n.DateTimeSymbols_et");
goog.provide("goog.i18n.DateTimeSymbols_eu");
goog.provide("goog.i18n.DateTimeSymbols_fa");
goog.provide("goog.i18n.DateTimeSymbols_fi");
goog.provide("goog.i18n.DateTimeSymbols_fil");
goog.provide("goog.i18n.DateTimeSymbols_fr");
goog.provide("goog.i18n.DateTimeSymbols_fr_CA");
goog.provide("goog.i18n.DateTimeSymbols_gl");
goog.provide("goog.i18n.DateTimeSymbols_gsw");
goog.provide("goog.i18n.DateTimeSymbols_gu");
goog.provide("goog.i18n.DateTimeSymbols_haw");
goog.provide("goog.i18n.DateTimeSymbols_he");
goog.provide("goog.i18n.DateTimeSymbols_hi");
goog.provide("goog.i18n.DateTimeSymbols_hr");
goog.provide("goog.i18n.DateTimeSymbols_hu");
goog.provide("goog.i18n.DateTimeSymbols_id");
goog.provide("goog.i18n.DateTimeSymbols_in");
goog.provide("goog.i18n.DateTimeSymbols_is");
goog.provide("goog.i18n.DateTimeSymbols_it");
goog.provide("goog.i18n.DateTimeSymbols_iw");
goog.provide("goog.i18n.DateTimeSymbols_ja");
goog.provide("goog.i18n.DateTimeSymbols_kn");
goog.provide("goog.i18n.DateTimeSymbols_ko");
goog.provide("goog.i18n.DateTimeSymbols_ln");
goog.provide("goog.i18n.DateTimeSymbols_lt");
goog.provide("goog.i18n.DateTimeSymbols_lv");
goog.provide("goog.i18n.DateTimeSymbols_ml");
goog.provide("goog.i18n.DateTimeSymbols_mr");
goog.provide("goog.i18n.DateTimeSymbols_ms");
goog.provide("goog.i18n.DateTimeSymbols_mt");
goog.provide("goog.i18n.DateTimeSymbols_nl");
goog.provide("goog.i18n.DateTimeSymbols_no");
goog.provide("goog.i18n.DateTimeSymbols_or");
goog.provide("goog.i18n.DateTimeSymbols_pl");
goog.provide("goog.i18n.DateTimeSymbols_pt");
goog.provide("goog.i18n.DateTimeSymbols_pt_BR");
goog.provide("goog.i18n.DateTimeSymbols_pt_PT");
goog.provide("goog.i18n.DateTimeSymbols_ro");
goog.provide("goog.i18n.DateTimeSymbols_ru");
goog.provide("goog.i18n.DateTimeSymbols_sk");
goog.provide("goog.i18n.DateTimeSymbols_sl");
goog.provide("goog.i18n.DateTimeSymbols_sq");
goog.provide("goog.i18n.DateTimeSymbols_sr");
goog.provide("goog.i18n.DateTimeSymbols_sv");
goog.provide("goog.i18n.DateTimeSymbols_sw");
goog.provide("goog.i18n.DateTimeSymbols_ta");
goog.provide("goog.i18n.DateTimeSymbols_te");
goog.provide("goog.i18n.DateTimeSymbols_th");
goog.provide("goog.i18n.DateTimeSymbols_tl");
goog.provide("goog.i18n.DateTimeSymbols_tr");
goog.provide("goog.i18n.DateTimeSymbols_uk");
goog.provide("goog.i18n.DateTimeSymbols_ur");
goog.provide("goog.i18n.DateTimeSymbols_vi");
goog.provide("goog.i18n.DateTimeSymbols_zh");
goog.provide("goog.i18n.DateTimeSymbols_zh_CN");
goog.provide("goog.i18n.DateTimeSymbols_zh_HK");
goog.provide("goog.i18n.DateTimeSymbols_zh_TW");
goog.provide("goog.i18n.DateTimeSymbols_zu");
goog.i18n.DateTimeSymbols_en_ISO = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yyyy-MM-dd"], TIMEFORMATS:["HH:mm:ss v", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], AVAILABLEFORMATS:{"Md":"M/d", "MMMMd":"MMMM d", "MMMd":"MMM d"}, FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_af = {ERAS:["v.C.", "n.C."], ERANAMES:["voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", 
"Oktober", "November", "Desember"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], STANDALONEWEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], SHORTWEEKDAYS:["So", "Ma", "Di", "Wo", "Do", "Vr", "Sa"], STANDALONESHORTWEEKDAYS:["So", 
"Ma", "Di", "Wo", "Do", "Vr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1ste kwartaal", "2de kwartaal", "3de kwartaal", "4de kwartaal"], AMPMS:["vm.", "nm."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "dd MMM y", "yyyy-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_am = {ERAS:["\u12d3/\u12d3", "\u12d3/\u121d"], ERANAMES:["\u12d3\u1218\u1270 \u12d3\u1208\u121d", "\u12d3\u1218\u1270 \u121d\u1215\u1228\u1275"], NARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], STANDALONENARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], MONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", 
"\u121b\u122d\u127d", "\u12a4\u1355\u1228\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", "\u12a6\u12ad\u1270\u12cd\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], STANDALONEMONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", "\u121b\u122d\u127d", "\u12a4\u1355\u1228\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", 
"\u12a6\u12ad\u1270\u12cd\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], SHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u1228", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1270", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], STANDALONESHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u1228", "\u121c\u12ed", 
"\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1270", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], WEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONEWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], SHORTWEEKDAYS:["\u12a5\u1211\u12f5", 
"\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONESHORTWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], NARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], STANDALONENARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], SHORTQUARTERS:["Q1", 
"Q2", "Q3", "Q4"], QUARTERS:["1\u129b\u12cd \u1229\u1265", "\u1201\u1208\u1270\u129b\u12cd \u1229\u1265", "3\u129b\u12cd \u1229\u1265", "4\u129b\u12cd \u1229\u1265"], AMPMS:["\u1321\u12cb\u1275", "\u12a8\u1233\u12d3\u1275"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yyyy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ar = {ZERODIGIT:1632, ERAS:["\u0642.\u0645", "\u0645"], ERANAMES:["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0645\u064a\u0644\u0627\u062f\u064a"], NARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], STANDALONENARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], MONTHS:["\u064a\u0646\u0627\u064a\u0631", 
"\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", 
"\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", 
"\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", 
"\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], 
STANDALONEWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], SHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", 
"\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], STANDALONESHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], NARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", 
"\u062c", "\u0633"], STANDALONENARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", "\u062c", "\u0633"], SHORTQUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], QUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", 
"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], AMPMS:["\u0635", "\u0645"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "dd\u200f/MM\u200f/yyyy", "d\u200f/M\u200f/yyyy"], TIMEFORMATS:["zzzz h:mm:ss a", "z h:mm:ss a", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_bg = {ERAS:["\u043f\u0440. \u043d. \u0435.", "\u043e\u0442 \u043d. \u0435."], ERANAMES:["\u043f\u0440.\u0425\u0440.", "\u0441\u043b.\u0425\u0440."], NARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", 
"\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], STANDALONEMONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], SHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", 
"\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], WEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", "\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", 
"\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", 
"\u043f", "\u0441"], SHORTQUARTERS:["I \u0442\u0440\u0438\u043c.", "II \u0442\u0440\u0438\u043c.", "III \u0442\u0440\u0438\u043c.", "IV \u0442\u0440\u0438\u043c."], QUARTERS:["1-\u0432\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "2-\u0440\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "3-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "4-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435"], AMPMS:["\u043f\u0440. \u043e\u0431.", 
"\u0441\u043b. \u043e\u0431."], DATEFORMATS:["dd MMMM y, EEEE", "dd MMMM y", "dd.MM.yyyy", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_bn = {ZERODIGIT:2534, ERAS:["\u0996\u09c3\u09b7\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], ERANAMES:["\u0996\u09c3\u09b7\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], NARROWMONTHS:["\u099c\u09be", "\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", "\u09a1\u09bf"], STANDALONENARROWMONTHS:["\u099c\u09be", 
"\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", "\u09a1\u09bf"], MONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", 
"\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONEMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", 
"\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], SHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", 
"\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONESHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", 
"\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], WEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", "\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", "\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], STANDALONEWEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", 
"\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", "\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], SHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", "\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], 
STANDALONESHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", "\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], NARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], STANDALONENARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], SHORTQUARTERS:["\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e7", 
"\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e8", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e9", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09ea"], QUARTERS:["\u09aa\u09cd\u09b0\u09a5\u09ae \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u09a6\u09cd\u09ac\u09bf\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u09a4\u09c3\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5 \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6"], 
AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:4, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ca = {ERAS:["aC", "dC"], ERANAMES:["abans de Crist", "despr\u00e9s de Crist"], NARROWMONTHS:["G", "F", "M", "A", "M", "J", "G", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["g", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["de gener", "de febrer", "de mar\u00e7", "d\u2019abril", "de maig", "de juny", "de juliol", "d\u2019agost", "de setembre", "d\u2019octubre", "de novembre", "de desembre"], STANDALONEMONTHS:["gener", "febrer", "mar\u00e7", "abril", 
"maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"], SHORTMONTHS:["de gen.", "de febr.", "de mar\u00e7", "d\u2019abr.", "de maig", "de juny", "de jul.", "d\u2019ag.", "de set.", "d\u2019oct.", "de nov.", "de des."], STANDALONESHORTMONTHS:["gen.", "febr.", "mar\u00e7", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], WEEKDAYS:["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"], STANDALONEWEEKDAYS:["Diumenge", "Dilluns", 
"Dimarts", "Dimecres", "Dijous", "Divendres", "Dissabte"], SHORTWEEKDAYS:["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."], STANDALONESHORTWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], NARROWWEEKDAYS:["G", "l", "T", "C", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["g", "l", "t", "c", "j", "v", "s"], SHORTQUARTERS:["1T", "2T", "3T", "4T"], QUARTERS:["1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM 'de' y", "d MMMM 'de' y", "dd/MM/yyyy", 
"dd/MM/yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_chr = {ERAS:["\u13a4\u13d3\u13b7\u13b8", "\u13a4\u13b6\u13d0\u13c5"], ERANAMES:["\u13cf \u13e5\u13cc \u13be\u13d5\u13b2\u13cd\u13ac\u13be", "\u13a0\u13a9\u13c3\u13ae\u13b5\u13d3\u13cd\u13d7\u13f1 \u13a0\u13d5\u13d8\u13f1\u13cd\u13ac \u13f1\u13b0\u13e9 \u13e7\u13d3\u13c2\u13b8\u13a2\u13cd\u13d7"], NARROWMONTHS:["\u13a4", "\u13a7", "\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a4"], STANDALONENARROWMONTHS:["\u13a4", "\u13a7", 
"\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a4"], MONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", "\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a4\u13cd\u13a9\u13f1"], STANDALONEMONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", 
"\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a4\u13cd\u13a9\u13f1"], SHORTMONTHS:["\u13a4\u13c3", "\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a4\u13cd"], STANDALONESHORTMONTHS:["\u13a4\u13c3", 
"\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a4\u13cd"], WEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", "\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], STANDALONEWEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", 
"\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], SHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", "\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], STANDALONESHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", 
"\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], NARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], STANDALONENARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["\u13cc\u13be\u13b4", "\u13d2\u13af\u13f1\u13a2\u13d7\u13e2"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", 
"h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_cs = {ERAS:["p\u0159. n. l.", "n. l."], ERANAMES:["p\u0159. n. l.", "n. l."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["l", "\u00fa", "b", "d", "k", "\u010d", "\u010d", "s", "z", "\u0159", "l", "p"], MONTHS:["ledna", "\u00fanora", "b\u0159ezna", "dubna", "kv\u011btna", "\u010dervna", "\u010dervence", "srpna", "z\u00e1\u0159\u00ed", "\u0159\u00edjna", "listopadu", "prosince"], STANDALONEMONTHS:["leden", "\u00fanor", 
"b\u0159ezen", "duben", "kv\u011bten", "\u010derven", "\u010dervenec", "srpen", "z\u00e1\u0159\u00ed", "\u0159\u00edjen", "listopad", "prosinec"], SHORTMONTHS:["Led", "\u00dano", "B\u0159e", "Dub", "Kv\u011b", "\u010cer", "\u010cvc", "Srp", "Z\u00e1\u0159", "\u0158\u00edj", "Lis", "Pro"], STANDALONESHORTMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], WEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", "st\u0159eda", "\u010dtvrtek", "p\u00e1tek", "sobota"], 
STANDALONEWEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", "st\u0159eda", "\u010dtvrtek", "p\u00e1tek", "sobota"], SHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], NARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u010dtvrtlet\u00ed", "2. \u010dtvrtlet\u00ed", 
"3. \u010dtvrtlet\u00ed", "4. \u010dtvrtlet\u00ed"], AMPMS:["dop.", "odp."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d. M. yyyy", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_cy = {ERAS:["CC", "OC"], ERANAMES:["Cyn Crist", "Oed Crist"], NARROWMONTHS:["I", "C", "M", "E", "M", "M", "G", "A", "M", "H", "T", "R"], STANDALONENARROWMONTHS:["I", "C", "M", "E", "M", "M", "G", "A", "M", "H", "T", "R"], MONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffenaf", "Awst", "Medi", "Hydref", "Tachwedd", "Rhagfyr"], STANDALONEMONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", "Tachwedd", 
"Rhagfyr"], SHORTMONTHS:["Ion", "Chwef", "Mawrth", "Ebrill", "Mai", "Meh", "Gorff", "Awst", "Medi", "Hyd", "Tach", "Rhag"], STANDALONESHORTMONTHS:["Ion", "Chwe", "Maw", "Ebr", "Mai", "Meh", "Gor", "Awst", "Medi", "Hyd", "Tach", "Rhag"], WEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], STANDALONEWEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], SHORTWEEKDAYS:["Sul", "Llun", "Maw", 
"Mer", "Iau", "Gwen", "Sad"], STANDALONESHORTWEEKDAYS:["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"], NARROWWEEKDAYS:["S", "L", "M", "M", "I", "G", "S"], STANDALONENARROWWEEKDAYS:["S", "L", "M", "M", "I", "G", "S"], SHORTQUARTERS:["Ch1", "Ch2", "Ch3", "Ch4"], QUARTERS:["Chwarter 1af", "2il chwarter", "3ydd chwarter", "4ydd chwarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yyyy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_da = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", 
"december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n", "man", "tir", "ons", "tor", "fre", "l\u00f8r"], 
STANDALONESHORTWEEKDAYS:["s\u00f8n", "man", "tir", "ons", "tor", "fre", "l\u00f8r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["f.m.", "e.m."], DATEFORMATS:["EEEE 'den' d. MMMM y", "d. MMM y", "dd/MM/yyyy", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", 
"November", "Dezember"], SHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["So", 
"Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.yyyy", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_AT = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", 
"Oktober", "November", "Dezember"], SHORTMONTHS:["J\u00e4n", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], STANDALONESHORTMONTHS:["J\u00e4n", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", "Mi.", "Do.", 
"Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "dd.MM.yyyy", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_CH = goog.i18n.DateTimeSymbols_de;
goog.i18n.DateTimeSymbols_el = {ERAS:["\u03c0.\u03a7.", "\u03bc.\u03a7."], ERANAMES:["\u03c0.\u03a7.", "\u03bc.\u03a7."], NARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], STANDALONENARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], MONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", 
"\u039c\u03b1\u03c1\u03c4\u03af\u03bf\u03c5", "\u0391\u03c0\u03c1\u03b9\u03bb\u03af\u03bf\u03c5", "\u039c\u03b1\u0390\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bd\u03af\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bb\u03af\u03bf\u03c5", "\u0391\u03c5\u03b3\u03bf\u03cd\u03c3\u03c4\u03bf\u03c5", "\u03a3\u03b5\u03c0\u03c4\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u039f\u03ba\u03c4\u03c9\u03b2\u03c1\u03af\u03bf\u03c5", "\u039d\u03bf\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u0394\u03b5\u03ba\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5"], 
STANDALONEMONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u039c\u03ac\u03c1\u03c4\u03b9\u03bf\u03c2", "\u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf\u03c2", "\u039c\u03ac\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bd\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bb\u03b9\u03bf\u03c2", "\u0391\u03cd\u03b3\u03bf\u03c5\u03c3\u03c4\u03bf\u03c2", "\u03a3\u03b5\u03c0\u03c4\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", 
"\u039f\u03ba\u03c4\u03ce\u03b2\u03c1\u03b9\u03bf\u03c2", "\u039d\u03bf\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", "\u0394\u03b5\u03ba\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2"], SHORTMONTHS:["\u0399\u03b1\u03bd", "\u03a6\u03b5\u03b2", "\u039c\u03b1\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03b1\u03ca", "\u0399\u03bf\u03c5\u03bd", "\u0399\u03bf\u03c5\u03bb", "\u0391\u03c5\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03b5", "\u0394\u03b5\u03ba"], STANDALONESHORTMONTHS:["\u0399\u03b1\u03bd", 
"\u03a6\u03b5\u03b2", "\u039c\u03ac\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03ac\u03b9", "\u0399\u03bf\u03cd\u03bd", "\u0399\u03bf\u03cd\u03bb", "\u0391\u03c5\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03ad", "\u0394\u03b5\u03ba"], WEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", 
"\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], STANDALONEWEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", "\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], SHORTWEEKDAYS:["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03b9", "\u03a4\u03b5\u03c4", "\u03a0\u03b5\u03bc", 
"\u03a0\u03b1\u03c1", "\u03a3\u03b1\u03b2"], STANDALONESHORTWEEKDAYS:["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03af", "\u03a4\u03b5\u03c4", "\u03a0\u03ad\u03bc", "\u03a0\u03b1\u03c1", "\u03a3\u03ac\u03b2"], NARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], STANDALONENARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], SHORTQUARTERS:["\u03a41", "\u03a42", "\u03a43", "\u03a44"], QUARTERS:["1\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", 
"2\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "3\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "4\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf"], AMPMS:["\u03c0.\u03bc.", "\u03bc.\u03bc."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_AU = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd/MM/yyyy", "d/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_GB = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yyyy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en_IE = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yyyy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en_IN = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "dd-MMM-y", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_SG = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_US = goog.i18n.DateTimeSymbols_en;
goog.i18n.DateTimeSymbols_en_ZA = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "dd MMM y", "yyyy/MM/dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_es = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "anno D\u00f3mini"], NARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", 
"octubre", "noviembre", "diciembre"], SHORTMONTHS:["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"], STANDALONESHORTMONTHS:["ene", "feb", "mar", "abr", "mayo", "jun", "jul", "ago", "sep", "oct", "nov", "dic"], WEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], SHORTWEEKDAYS:["dom", "lun", "mar", "mi\u00e9", "jue", "vie", 
"s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "lun", "mar", "mi\u00e9", "jue", "vie", "s\u00e1b"], NARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2\u00ba trimestre", "3er trimestre", "4\u00ba trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/yyyy", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_es_419 = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "anno D\u00f3mini"], NARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", 
"octubre", "noviembre", "diciembre"], SHORTMONTHS:["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"], STANDALONESHORTMONTHS:["ene", "feb", "mar", "abr", "mayo", "jun", "jul", "ago", "sep", "oct", "nov", "dic"], WEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], SHORTWEEKDAYS:["dom", "lun", "mar", "mi\u00e9", "jue", "vie", 
"s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "lun", "mar", "mi\u00e9", "jue", "vie", "s\u00e1b"], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2\u00ba trimestre", "3er trimestre", "4\u00ba trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/yyyy", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_et = {ERAS:["e.m.a.", "m.a.j."], ERANAMES:["enne meie aega", "meie aja j\u00e4rgi"], NARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"], STANDALONEMONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", 
"august", "september", "oktoober", "november", "detsember"], SHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], STANDALONESHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], WEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", "kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], STANDALONEWEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", 
"kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], SHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONESHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], NARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONENARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["enne keskp\u00e4eva", "p\u00e4rast keskp\u00e4eva"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", 
"dd.MM.yyyy", "dd.MM.yy"], TIMEFORMATS:["H:mm.ss zzzz", "H:mm.ss z", "H:mm.ss", "H:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_eu = {ERAS:["K.a.", "K.o."], ERANAMES:["K.a.", "K.o."], NARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], STANDALONENARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], MONTHS:["urtarrila", "otsaila", "martxoa", "apirila", "maiatza", "ekaina", "uztaila", "abuztua", "iraila", "urria", "azaroa", "abendua"], STANDALONEMONTHS:["urtarrila", "otsaila", "martxoa", "apirila", "maiatza", "ekaina", "uztaila", "abuztua", "iraila", "urria", 
"azaroa", "abendua"], SHORTMONTHS:["urt", "ots", "mar", "api", "mai", "eka", "uzt", "abu", "ira", "urr", "aza", "abe"], STANDALONESHORTMONTHS:["urt", "ots", "mar", "api", "mai", "eka", "uzt", "abu", "ira", "urr", "aza", "abe"], WEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], STANDALONEWEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], SHORTWEEKDAYS:["ig", "al", "as", "az", "og", "or", "lr"], STANDALONESHORTWEEKDAYS:["ig", 
"al", "as", "az", "og", "or", "lr"], NARROWWEEKDAYS:["I", "M", "A", "A", "A", "O", "I"], STANDALONENARROWWEEKDAYS:["I", "M", "A", "L", "A", "O", "I"], SHORTQUARTERS:["1Hh", "2Hh", "3Hh", "4Hh"], QUARTERS:["1. hiruhilekoa", "2. hiruhilekoa", "3. hiruhilekoa", "4. hiruhilekoa"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y'eko' MMMM'ren' dd'a'", "y'eko' MMM'ren' dd'a'", "y MMM d", "yyyy-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fa = {ZERODIGIT:1776, ERAS:["\u0642.\u0645.", "\u0645."], ERANAMES:["\u0642\u0628\u0644 \u0627\u0632 \u0645\u06cc\u0644\u0627\u062f", "\u0645\u06cc\u0644\u0627\u062f\u06cc"], NARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], STANDALONENARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], MONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", 
"\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONEMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", 
"\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], SHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", "\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", 
"\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", 
"\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], WEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONEWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", 
"\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], SHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONESHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", 
"\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], NARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], STANDALONENARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], SHORTQUARTERS:["\u0633\u200c\u0645\u06f1", "\u0633\u200c\u0645\u06f2", "\u0633\u200c\u0645\u06f3", 
"\u0633\u200c\u0645\u06f4"], QUARTERS:["\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0627\u0648\u0644", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u062f\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0633\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0686\u0647\u0627\u0631\u0645"], AMPMS:["\u0642\u0628\u0644\u200c\u0627\u0632\u0638\u0647\u0631", "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", 
"yyyy/M/d"], TIMEFORMATS:["H:mm:ss (zzzz)", "H:mm:ss (z)", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[3, 4], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_fi = {ERAS:["eKr.", "jKr."], ERANAMES:["ennen Kristuksen syntym\u00e4\u00e4", "j\u00e4lkeen Kristuksen syntym\u00e4n"], NARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], STANDALONENARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], MONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONEMONTHS:["tammikuu", 
"helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kes\u00e4kuu", "hein\u00e4kuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"], SHORTMONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONESHORTMONTHS:["tammi", "helmi", "maalis", "huhti", "touko", "kes\u00e4", "hein\u00e4", "elo", "syys", "loka", "marras", "joulu"], WEEKDAYS:["sunnuntaina", "maanantaina", 
"tiistaina", "keskiviikkona", "torstaina", "perjantaina", "lauantaina"], STANDALONEWEEKDAYS:["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"], SHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], STANDALONESHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], NARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], SHORTQUARTERS:["1. nelj.", "2. nelj.", "3. nelj.", "4. nelj."], QUARTERS:["1. nelj\u00e4nnes", 
"2. nelj\u00e4nnes", "3. nelj\u00e4nnes", "4. nelj\u00e4nnes"], AMPMS:["ap.", "ip."], DATEFORMATS:["cccc, d. MMMM y", "d. MMMM y", "d.M.yyyy", "d.M.yyyy"], TIMEFORMATS:["H.mm.ss zzzz", "H.mm.ss z", "H.mm.ss", "H.mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fil = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Mye", "Huw", "Bye", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 sangkapat", "ika-2 sangkapat", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM dd y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_fr = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["janvier", "f\u00e9vrier", "mars", "avril", 
"mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", 
"jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fr_CA = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["janvier", "f\u00e9vrier", "mars", "avril", 
"mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", 
"jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "yyyy-MM-dd", "yy-MM-dd"], 
TIMEFORMATS:["HH 'h' mm 'min' ss 's' zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_gl = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "despois de Cristo"], NARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], MONTHS:["Xaneiro", "Febreiro", "Marzo", "Abril", "Maio", "Xu\u00f1o", "Xullo", "Agosto", "Setembro", "Outubro", "Novembro", "Decembro"], STANDALONEMONTHS:["Xaneiro", "Febreiro", "Marzo", "Abril", "Maio", "Xu\u00f1o", "Xullo", "Agosto", 
"Setembro", "Outubro", "Novembro", "Decembro"], SHORTMONTHS:["Xan", "Feb", "Mar", "Abr", "Mai", "Xu\u00f1", "Xul", "Ago", "Set", "Out", "Nov", "Dec"], STANDALONESHORTMONTHS:["Xan", "Feb", "Mar", "Abr", "Mai", "Xu\u00f1", "Xul", "Ago", "Set", "Out", "Nov", "Dec"], WEEKDAYS:["Domingo", "Luns", "Martes", "M\u00e9rcores", "Xoves", "Venres", "S\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Luns", "Martes", "M\u00e9rcores", "Xoves", "Venres", "S\u00e1bado"], SHORTWEEKDAYS:["Dom", "Lun", "Mar", "M\u00e9r", 
"Xov", "Ven", "S\u00e1b"], STANDALONESHORTWEEKDAYS:["Dom", "Lun", "Mar", "M\u00e9r", "Xov", "Ven", "S\u00e1b"], NARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1o trimestre", "2o trimestre", "3o trimestre", "4o trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "d MMM, y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gsw = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", "Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", 
"Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], SHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], STANDALONEWEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], 
SHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nam."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.yyyy", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", 
"HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_gu = {ERAS:["\u0a88\u0ab2\u0ac1\u0aa8\u0abe \u0a9c\u0aa8\u0acd\u0aae \u0aaa\u0ab9\u0ac7\u0ab8\u0abe\u0a82", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], ERANAMES:["\u0a88\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8 \u0aaa\u0ac2\u0ab0\u0acd\u0ab5\u0ac7", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], NARROWMONTHS:["\u0a9c\u0abe", "\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], STANDALONENARROWMONTHS:["\u0a9c\u0abe", 
"\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], MONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], STANDALONEMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], SHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", 
"\u0aa1\u0abf\u0ab8\u0ac7"], STANDALONESHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", "\u0aa1\u0abf\u0ab8\u0ac7"], WEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", 
"\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", "\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], STANDALONEWEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", "\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", 
"\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], SHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], STANDALONESHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], NARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", 
"\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"], STANDALONENARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", "\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"], SHORTQUARTERS:["\u0aaa\u0ac7\u0ab9\u0ab2\u0abe \u0ab9\u0a82\u0aa4 1", "Q2", "Q3", "\u0a9a\u0acc\u0aa4\u0abe \u0ab9\u0a82\u0aa4 4"], QUARTERS:["\u0aaa\u0ac7\u0ab9\u0ab2\u0abe \u0ab9\u0a82\u0aa4 1", "\u0aa1\u0ac2\u0ab8\u0a8b\u0abe \u0ab9\u0a82\u0aa4 2", "\u0aa4\u0ac0\u0ab8\u0a8b\u0abe \u0ab9\u0a82\u0aa4 3", "\u0a9a\u0acc\u0aa4\u0abe \u0ab9\u0a82\u0aa4 4"], 
AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-MM-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_haw = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", "Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], STANDALONEMONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", 
"Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], SHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], STANDALONESHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], WEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", "Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], STANDALONEWEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", 
"Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], SHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], STANDALONESHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_he = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", 
"\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", 
"\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5", "\u05e4\u05d1\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0", "\u05d9\u05d5\u05dc", "\u05d0\u05d5\u05d2", "\u05e1\u05e4\u05d8", "\u05d0\u05d5\u05e7", "\u05e0\u05d5\u05d1", "\u05d3\u05e6\u05de"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", 
"\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05f3", "\u05d9\u05d5\u05dc\u05f3", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", 
"\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], 
SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], 
NARROWWEEKDAYS:["\u05d0", "\u05d1", "\u05d2", "\u05d3", "\u05d4", "\u05d5", "\u05e9"], STANDALONENARROWWEEKDAYS:["\u05d0", "\u05d1", "\u05d2", "\u05d3", "\u05d4", "\u05d5", "\u05e9"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", 
"\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM yyyy", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hi = {ERAS:["\u0908\u0938\u093e\u092a\u0942\u0930\u094d\u0935", "\u0938\u0928"], ERANAMES:["\u0908\u0938\u093e\u092a\u0942\u0930\u094d\u0935", "\u0938\u0928"], NARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", "\u091c\u0941", "\u0905", "\u0938\u093f", "\u0905", "\u0928", "\u0926\u093f"], STANDALONENARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", "\u091c\u0941", "\u0905", "\u0938\u093f", 
"\u0905", "\u0928", "\u0926\u093f"], MONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u0924\u0942\u092c\u0930", "\u0928\u0935\u092e\u094d\u092c\u0930", "\u0926\u093f\u0938\u092e\u094d\u092c\u0930"], STANDALONEMONTHS:["\u091c\u0928\u0935\u0930\u0940", 
"\u092b\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u0924\u0942\u092c\u0930", "\u0928\u0935\u092e\u094d\u092c\u0930", "\u0926\u093f\u0938\u092e\u094d\u092c\u0930"], SHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", 
"\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u0924\u0942\u092c\u0930", "\u0928\u0935\u092e\u094d\u092c\u0930", "\u0926\u093f\u0938\u092e\u094d\u092c\u0930"], STANDALONESHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", 
"\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u0924\u0942\u092c\u0930", "\u0928\u0935\u092e\u094d\u092c\u0930", "\u0926\u093f\u0938\u092e\u094d\u092c\u0930"], WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u092c\u0943\u0939\u0938\u094d\u092a\u0924\u093f\u0935\u093e\u0930", 
"\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u092c\u0943\u0939\u0938\u094d\u092a\u0924\u093f\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f.", "\u0938\u094b\u092e.", 
"\u092e\u0902\u0917\u0932.", "\u092c\u0941\u0927.", "\u092c\u0943\u0939.", "\u0936\u0941\u0915\u094d\u0930.", "\u0936\u0928\u093f."], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f.", "\u0938\u094b\u092e.", "\u092e\u0902\u0917\u0932.", "\u092c\u0941\u0927.", "\u092c\u0943\u0939.", "\u0936\u0941\u0915\u094d\u0930.", "\u0936\u0928\u093f."], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", "\u0938\u094b", 
"\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u0942\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0940\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u094c\u0925\u0940 \u0924\u093f\u092e\u093e\u0939\u0940"], QUARTERS:["\u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u0942\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0940\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", 
"\u091a\u094c\u0925\u0940 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd-MM-yyyy", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hr = {ERAS:["p. n. e.", "A. D."], ERANAMES:["Prije Krista", "Poslije Krista"], NARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], STANDALONENARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], MONTHS:["sije\u010dnja", "velja\u010de", "o\u017eujka", "travnja", "svibnja", "lipnja", "srpnja", "kolovoza", "rujna", "listopada", "studenoga", "prosinca"], STANDALONEMONTHS:["sije\u010danj", "velja\u010da", 
"o\u017eujak", "travanj", "svibanj", "lipanj", "srpanj", "kolovoz", "rujan", "listopad", "studeni", "prosinac"], SHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], STANDALONESHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], WEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", "petak", "subota"], STANDALONEWEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", 
"petak", "subota"], SHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], STANDALONESHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["n", "p", "u", "s", "\u010d", "p", "s"], SHORTQUARTERS:["1kv", "2kv", "3kv", "4kv"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y.", "d. MMMM y.", "d. M. y.", "d.M.y."], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_hu = {ERAS:["i. e.", "i. sz."], ERANAMES:["id\u0151sz\u00e1m\u00edt\u00e1sunk el\u0151tt", "id\u0151sz\u00e1m\u00edt\u00e1sunk szerint"], NARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "\u00c1", "Sz", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "A", "Sz", "O", "N", "D"], MONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", 
"december"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], WEEKDAYS:["vas\u00e1rnap", 
"h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], STANDALONEWEEKDAYS:["vas\u00e1rnap", "h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], SHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], STANDALONESHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], NARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], STANDALONENARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], SHORTQUARTERS:["N1", "N2", "N3", "N4"], 
QUARTERS:["I. negyed\u00e9v", "II. negyed\u00e9v", "III. negyed\u00e9v", "IV. negyed\u00e9v"], AMPMS:["de.", "du."], DATEFORMATS:["y. MMMM d., EEEE", "y. MMMM d.", "yyyy.MM.dd.", "yyyy.MM.dd."], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_id = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], 
SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], 
NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["kuartal pertama", "kuartal kedua", "kuartal ketiga", "kuartal keempat"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM yyyy", "d MMMM yyyy", "d MMM yyyy", "dd/MM/yy"], TIMEFORMATS:["H:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_in = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], 
SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], 
NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["kuartal pertama", "kuartal kedua", "kuartal ketiga", "kuartal keempat"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM yyyy", "d MMMM yyyy", "d MMM yyyy", "dd/MM/yy"], TIMEFORMATS:["H:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_is = {ERAS:["fyrir Krist", "eftir Krist"], ERANAMES:["fyrir Krist", "eftir Krist"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "\u00c1", "L", "O", "N", "D"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "\u00e1", "s", "o", "n", "d"], MONTHS:["jan\u00faar", "febr\u00faar", "mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], STANDALONEMONTHS:["jan\u00faar", "febr\u00faar", 
"mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], SHORTMONTHS:["jan", "feb", "mar", "apr", "ma\u00ed", "j\u00fan", "j\u00fal", "\u00e1g\u00fa", "sep", "okt", "n\u00f3v", "des"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "ma\u00ed", "j\u00fan", "j\u00fal", "\u00e1g\u00fa", "sep", "okt", "n\u00f3v", "des"], WEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", "mi\u00f0vikudagur", 
"fimmtudagur", "f\u00f6studagur", "laugardagur"], STANDALONEWEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", "mi\u00f0vikudagur", "fimmtudagur", "f\u00f6studagur", "laugardagur"], SHORTWEEKDAYS:["sun", "m\u00e1n", "\u00feri", "mi\u00f0", "fim", "f\u00f6s", "lau"], STANDALONESHORTWEEKDAYS:["sun", "m\u00e1n", "\u00feri", "mi\u00f0", "fim", "f\u00f6s", "lau"], NARROWWEEKDAYS:["S", "M", "\u00de", "M", "F", "F", "L"], STANDALONENARROWWEEKDAYS:["s", "m", "\u00fe", "m", "f", "f", "l"], 
SHORTQUARTERS:["F1", "F2", "F3", "F4"], QUARTERS:["1st fj\u00f3r\u00f0ungur", "2nd fj\u00f3r\u00f0ungur", "3rd fj\u00f3r\u00f0ungur", "4th fj\u00f3r\u00f0ungur"], AMPMS:["f.h.", "e.h."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d.M.yyyy", "d.M.yyyy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_it = {ERAS:["aC", "dC"], ERANAMES:["a.C.", "d.C"], NARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], MONTHS:["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"], STANDALONEMONTHS:["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", 
"Dicembre"], SHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], STANDALONESHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], WEEKDAYS:["domenica", "luned\u00ec", "marted\u00ec", "mercoled\u00ec", "gioved\u00ec", "venerd\u00ec", "sabato"], STANDALONEWEEKDAYS:["Domenica", "Luned\u00ec", "Marted\u00ec", "Mercoled\u00ec", "Gioved\u00ec", "Venerd\u00ec", "Sabato"], SHORTWEEKDAYS:["dom", "lun", "mar", "mer", "gio", 
"ven", "sab"], STANDALONESHORTWEEKDAYS:["dom", "lun", "mar", "mer", "gio", "ven", "sab"], NARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1o trimestre", "2o trimestre", "3o trimestre", "4o trimestre"], AMPMS:["m.", "p."], DATEFORMATS:["EEEE d MMMM y", "dd MMMM y", "dd/MMM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_iw = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", 
"\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", 
"\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5", "\u05e4\u05d1\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0", "\u05d9\u05d5\u05dc", "\u05d0\u05d5\u05d2", "\u05e1\u05e4\u05d8", "\u05d0\u05d5\u05e7", "\u05e0\u05d5\u05d1", "\u05d3\u05e6\u05de"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", 
"\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05f3", "\u05d9\u05d5\u05dc\u05f3", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", 
"\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], 
SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], 
NARROWWEEKDAYS:["\u05d0", "\u05d1", "\u05d2", "\u05d3", "\u05d4", "\u05d5", "\u05e9"], STANDALONENARROWWEEKDAYS:["\u05d0", "\u05d1", "\u05d2", "\u05d3", "\u05d4", "\u05d5", "\u05e9"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", 
"\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM yyyy", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ja = {ERAS:["\u7d00\u5143\u524d", "\u897f\u66a6"], ERANAMES:["\u7d00\u5143\u524d", "\u897f\u66a6"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", 
"6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", 
"\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], STANDALONEWEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", "\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], SHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONESHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], NARROWWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONENARROWWEEKDAYS:["\u65e5", 
"\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u7b2c1\u56db\u534a\u671f", "\u7b2c2\u56db\u534a\u671f", "\u7b2c3\u56db\u534a\u671f", "\u7b2c4\u56db\u534a\u671f"], AMPMS:["\u5348\u524d", "\u5348\u5f8c"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "yyyy/MM/dd", "yyyy/MM/dd"], TIMEFORMATS:["H\u6642mm\u5206ss\u79d2 zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_kn = {ERAS:["\u0c95\u0ccd\u0cb0\u0cbf.\u0caa\u0cc2", "\u0c9c\u0cbe\u0cb9\u0cc0"], ERANAMES:["\u0c88\u0cb8\u0caa\u0cc2\u0cb5\u0cef.", "\u0c95\u0ccd\u0cb0\u0cbf\u0cb8\u0ccd\u0ca4 \u0cb6\u0c95"], NARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8e", "\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], STANDALONENARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8e", "\u0cae\u0cc7", "\u0c9c\u0cc2", 
"\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], MONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cc0", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cc0", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8e\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc6", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], STANDALONEMONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cc0", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cc0", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8e\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc6", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], SHORTMONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cc0", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cc0", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8e\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc6", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], STANDALONESHORTMONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cc0", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cc0", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8e\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc6", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], WEEKDAYS:["\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", "\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], STANDALONEWEEKDAYS:["\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", 
"\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], SHORTWEEKDAYS:["\u0cb0.", "\u0cb8\u0ccb.", "\u0cae\u0c82.", "\u0cac\u0cc1.", "\u0c97\u0cc1.", "\u0cb6\u0cc1.", "\u0cb6\u0ca8\u0cbf."], STANDALONESHORTWEEKDAYS:["\u0cb0.", "\u0cb8\u0ccb.", "\u0cae\u0c82.", "\u0cac\u0cc1.", "\u0c97\u0cc1.", "\u0cb6\u0cc1.", "\u0cb6\u0ca8\u0cbf."], NARROWWEEKDAYS:["\u0cb0", "\u0cb8\u0ccb", 
"\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], STANDALONENARROWWEEKDAYS:["\u0cb0", "\u0cb8\u0ccb", "\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], SHORTQUARTERS:["\u0c92\u0c82\u0ca6\u0cc1 1", "\u0c8e\u0cb0\u0ca1\u0cc1 2", "\u0cae\u0cc2\u0cb0\u0cc1 3", "\u0ca8\u0cbe\u0cb2\u0cc3\u0c95 4"], QUARTERS:["\u0c92\u0c82\u0ca6\u0cc1 1", "\u0c8e\u0cb0\u0ca1\u0cc1 2", "\u0cae\u0cc2\u0cb0\u0cc1 3", "\u0ca8\u0cbe\u0cb2\u0cc3\u0c95 4"], AMPMS:["am", "pm"], 
DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ko = {ERAS:["\uae30\uc6d0\uc804", "\uc11c\uae30"], ERANAMES:["\uc11c\ub825\uae30\uc6d0\uc804", "\uc11c\ub825\uae30\uc6d0"], NARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONENARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], MONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", 
"4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONEMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], SHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONESHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", 
"8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], WEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], STANDALONEWEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], SHORTWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONESHORTWEEKDAYS:["\uc77c", 
"\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], NARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONENARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], SHORTQUARTERS:["1\ubd84\uae30", "2\ubd84\uae30", "3\ubd84\uae30", "4\ubd84\uae30"], QUARTERS:["\uc81c 1/4\ubd84\uae30", "\uc81c 2/4\ubd84\uae30", "\uc81c 3/4\ubd84\uae30", "\uc81c 4/4\ubd84\uae30"], AMPMS:["\uc624\uc804", "\uc624\ud6c4"], DATEFORMATS:["y\ub144 M\uc6d4 d\uc77c EEEE", 
"y\ub144 M\uc6d4 d\uc77c", "yyyy. M. d.", "yy. M. d."], TIMEFORMATS:["a h\uc2dc m\ubd84 s\ucd08 zzzz", "a h\uc2dc m\ubd84 s\ucd08 z", "a h:mm:ss", "a h:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ln = {ERAS:["lib\u00f3so ya", "nsima ya Y"], ERANAMES:["Yambo ya Y\u00e9zu Kr\u00eds", "Nsima ya Y\u00e9zu Kr\u00eds"], NARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], STANDALONENARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], MONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", 
"s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", "s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], STANDALONEMONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", "s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", 
"s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], SHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], STANDALONESHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], WEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", 
"mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], STANDALONEWEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", "mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], SHORTWEEKDAYS:["eye", "ybo", "mbl", "mst", "min", "mtn", "mps"], STANDALONESHORTWEEKDAYS:["eye", "ybo", "mbl", 
"mst", "min", "mtn", "mps"], NARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], STANDALONENARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], SHORTQUARTERS:["SM1", "SM2", "SM3", "SM4"], QUARTERS:["s\u00e1nz\u00e1 m\u00eds\u00e1to ya yambo", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00ednei"], AMPMS:["nt\u0254\u0301ng\u0254\u0301", "mp\u00f3kwa"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", 
"d MMM y", "d/M/yyyy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_lt = {ERAS:["pr. Kr.", "po Kr."], ERANAMES:["prie\u0161 Krist\u0173", "po Kristaus"], NARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], STANDALONENARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], MONTHS:["sausio", "vasaris", "kovas", "balandis", "gegu\u017e\u0117", "bir\u017eelis", "liepa", "rugpj\u016btis", "rugs\u0117jis", "spalis", "lapkritis", "gruodis"], STANDALONEMONTHS:["Sausis", "Vasaris", "Kovas", "Balandis", "Gegu\u017e\u0117", 
"Bir\u017eelis", "Liepa", "Rugpj\u016btis", "Rugs\u0117jis", "Spalis", "Lapkritis", "Gruodis"], SHORTMONTHS:["Saus.", "Vas", "Kov.", "Bal.", "Geg.", "Bir.", "Liep.", "Rugp.", "Rugs.", "Spal.", "Lapkr.", "Gruod."], STANDALONESHORTMONTHS:["Saus.", "Vas.", "Kov.", "Bal.", "Geg.", "Bir.", "Liep.", "Rugp.", "Rugs.", "Spal.", "Lapkr.", "Gruod."], WEEKDAYS:["sekmadienis", "pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], STANDALONEWEEKDAYS:["sekmadienis", 
"pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], SHORTWEEKDAYS:["Sk", "Pr", "An", "Tr", "Kt", "Pn", "\u0160t"], STANDALONESHORTWEEKDAYS:["Sk", "Pr", "An", "Tr", "Kt", "Pn", "\u0160t"], NARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], STANDALONENARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], SHORTQUARTERS:["I k.", "II k.", "III k.", "IV ketv."], QUARTERS:["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"], 
AMPMS:["prie\u0161piet", "popiet"], DATEFORMATS:["y 'm'. MMMM d 'd'., EEEE", "y 'm'. MMMM d 'd'.", "y MMM d", "yyyy-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_lv = {ERAS:["p.m.\u0113.", "m.\u0113."], ERANAMES:["pirms m\u016bsu \u0113ras", "m\u016bsu \u0113r\u0101"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janv\u0101ris", "febru\u0101ris", "marts", "apr\u012blis", "maijs", "j\u016bnijs", "j\u016blijs", "augusts", "septembris", "oktobris", "novembris", "decembris"], STANDALONEMONTHS:["janv\u0101ris", "febru\u0101ris", 
"marts", "apr\u012blis", "maijs", "j\u016bnijs", "j\u016blijs", "augusts", "septembris", "oktobris", "novembris", "decembris"], SHORTMONTHS:["janv.", "febr.", "marts", "apr.", "maijs", "j\u016bn.", "j\u016bl.", "aug.", "sept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["janv.", "febr.", "marts", "apr.", "maijs", "j\u016bn.", "j\u016bl.", "aug.", "sept.", "okt.", "nov.", "dec."], WEEKDAYS:["sv\u0113tdiena", "pirmdiena", "otrdiena", "tre\u0161diena", "ceturtdiena", "piektdiena", "sestdiena"], 
STANDALONEWEEKDAYS:["sv\u0113tdiena", "pirmdiena", "otrdiena", "tre\u0161diena", "ceturtdiena", "piektdiena", "sestdiena"], SHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], STANDALONESHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], NARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], SHORTQUARTERS:["C1", "C2", "C3", "C4"], QUARTERS:["1. ceturksnis", "2. ceturksnis", "3. ceturksnis", "4. ceturksnis"], AMPMS:["priek\u0161pusdien\u0101", 
"p\u0113cpusdien\u0101"], DATEFORMATS:["EEEE, y. 'gada' d. MMMM", "y. 'gada' d. MMMM", "y. 'gada' d. MMM", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ml = {ERAS:["\u0d15\u0d4d\u0d30\u0d3f.\u0d2e\u0d42", "\u0d15\u0d4d\u0d30\u0d3f.\u0d2a\u0d3f."], ERANAMES:["\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d41\u0d4d \u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d4d\u200c", "\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d4d \u0d2a\u0d3f\u0d28\u0d4d\u200d\u0d2a\u0d4d"], NARROWMONTHS:["\u0d1c", "\u0d2b\u0d46", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d47", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", 
"\u0d38\u0d46", "\u0d12", "\u0d28", "\u0d21\u0d3f"], STANDALONENARROWMONTHS:["\u0d1c", "\u0d2b\u0d46", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d47", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", "\u0d38\u0d46", "\u0d12", "\u0d28", "\u0d21\u0d3f"], MONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d30\u0d4d\u200d\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u200d", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d23\u0d4d\u200d", 
"\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d30\u0d4d\u200d", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b\u0d2c\u0d30\u0d4d\u200d", "\u0d28\u0d35\u0d02\u0d2c\u0d30\u0d4d\u200d", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d30\u0d4d\u200d"], STANDALONEMONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d30\u0d4d\u200d\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u200d", 
"\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d23\u0d4d\u200d", "\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d30\u0d4d\u200d", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b\u0d2c\u0d30\u0d4d\u200d", "\u0d28\u0d35\u0d02\u0d2c\u0d30\u0d4d\u200d", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d30\u0d4d\u200d"], SHORTMONTHS:["\u0d1c\u0d28\u0d41", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d30\u0d4d\u200d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", 
"\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d23\u0d4d\u200d", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", "\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], STANDALONESHORTMONTHS:["\u0d1c\u0d28\u0d41", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d30\u0d4d\u200d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d23\u0d4d\u200d", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", 
"\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", "\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], WEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u0d1a", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u0d1a", "\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u0d1a", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a", 
"\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a"], STANDALONEWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u0d1a", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u0d1a", "\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u0d1a", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a", "\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a"], SHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d30\u0d4d\u200d", 
"\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d4d\u200d", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d28\u0d4d\u200d", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], STANDALONESHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d30\u0d4d\u200d", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d4d\u200d", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d28\u0d4d\u200d", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], 
NARROWWEEKDAYS:["\u0d1e\u0d3e", "\u0d24\u0d3f", "\u0d1a\u0d4a", "\u0d2c\u0d41", "\u0d35\u0d4d\u0d2f\u0d3e", "\u0d35\u0d46", "\u0d36"], STANDALONENARROWWEEKDAYS:["\u0d1e\u0d3e", "\u0d24\u0d3f", "\u0d1a\u0d4a", "\u0d2c\u0d41", "\u0d35\u0d4d\u0d2f\u0d3e", "\u0d35\u0d46", "\u0d36"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u0d12\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d30\u0d23\u0d4d\u0d1f\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d2e\u0d42\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", 
"\u0d28\u0d3e\u0d32\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02"], AMPMS:["am", "pm"], DATEFORMATS:["y, MMMM d, EEEE", "y, MMMM d", "y, MMM d", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mr = {ERAS:["\u0908\u0938\u093e\u092a\u0942\u0930\u094d\u0935", "\u0938\u0928"], ERANAMES:["\u0908\u0938\u0935\u0940\u0938\u0928\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u0935\u0940\u0938\u0928"], NARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", "\u092e\u0947", "\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], STANDALONENARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", "\u092e\u0947", 
"\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], MONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", 
"\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], STANDALONEMONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", 
"\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], SHORTMONTHS:["\u091c\u093e\u0928\u0947", "\u092b\u0947\u092c\u094d\u0930\u0941", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u0947\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], STANDALONESHORTMONTHS:["\u091c\u093e\u0928\u0947", 
"\u092b\u0947\u092c\u094d\u0930\u0941", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u0947\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", 
"\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f", 
"\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", 
"\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f 1", "2 \u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u093f 3", "\u0924\u093f 4"], QUARTERS:["\u092a\u094d\u0930\u0925\u092e \u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0943\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u0924\u0941\u0930\u094d\u0925 \u0924\u093f\u092e\u093e\u0939\u0940"], 
AMPMS:["am", "pm"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["h-mm-ss a zzzz", "h-mm-ss a z", "h-mm-ss a", "h-mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ms = {ERAS:["S.M.", "TM"], ERANAMES:["S.M.", "TM"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], STANDALONEMONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], 
SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogos", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogos", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], STANDALONEWEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], SHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], 
NARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], SHORTQUARTERS:["Suku 1", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4"], QUARTERS:["Suku pertama", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4"], AMPMS:["PG", "PTG"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd/MM/yyyy", "d/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mt = {ERAS:["QK", "WK"], ERANAMES:["Qabel Kristu", "Wara Kristu"], NARROWMONTHS:["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"], MONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", "Settembru", "Ottubru", "Novembru", "Di\u010bembru"], STANDALONEMONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", 
"Settembru", "Ottubru", "Novembru", "Di\u010bembru"], SHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], STANDALONESHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], WEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", "Is-Sibt"], STANDALONEWEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", 
"Is-Sibt"], SHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], STANDALONESHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], NARROWWEEKDAYS:["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"], STANDALONENARROWWEEKDAYS:["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["K1", "K2", "K3", "K4"], AMPMS:["QN", "WN"], DATEFORMATS:["EEEE, d 'ta'\u2019 MMMM y", "d 'ta'\u2019 MMMM y", "dd MMM y", "dd/MM/yyyy"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nl = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["Voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", 
"oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], STANDALONEWEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], SHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", "vr", "za"], 
STANDALONESHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", "vr", "za"], NARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], STANDALONENARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], 
SHORTMONTHS:["jan.", "feb.", "mars", "apr.", "mai", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], STANDALONESHORTWEEKDAYS:["s\u00f8.", 
"ma.", "ti.", "on.", "to.", "fr.", "l\u00f8."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_or = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b47", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], STANDALONENARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b47", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], MONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONEMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], SHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONESHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], WEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", 
"\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", "\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", "\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", "\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], STANDALONEWEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", "\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", "\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", 
"\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", "\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], SHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], STANDALONESHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], 
NARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", "\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], STANDALONENARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", "\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], 
FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pl = {ERAS:["p.n.e.", "n.e."], ERANAMES:["p.n.e.", "n.e."], NARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], STANDALONENARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], MONTHS:["stycznia", "lutego", "marca", "kwietnia", "maja", "czerwca", "lipca", "sierpnia", "wrze\u015bnia", "pa\u017adziernika", "listopada", "grudnia"], STANDALONEMONTHS:["stycze\u0144", "luty", "marzec", "kwiecie\u0144", "maj", "czerwiec", "lipiec", "sierpie\u0144", 
"wrzesie\u0144", "pa\u017adziernik", "listopad", "grudzie\u0144"], SHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], STANDALONESHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], WEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], STANDALONEWEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], 
SHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], STANDALONESHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], NARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["I kwarta\u0142", "II kwarta\u0142", "III kwarta\u0142", "IV kwarta\u0142"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd.MM.yyyy"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_pt = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"], STANDALONEMONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", 
"setembro", "outubro", "novembro", "dezembro"], SHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], STANDALONESHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], WEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1\u00ba trimestre", "2\u00ba trimestre", "3\u00ba trimestre", "4\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/yyyy", "dd/MM/yy"], 
TIMEFORMATS:["HH'h'mm'min'ss's' zzzz", "HH'h'mm'min'ss's' z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pt_BR = goog.i18n.DateTimeSymbols_pt;
goog.i18n.DateTimeSymbols_pt_PT = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Janeiro", "Fevereiro", "Mar\u00e7o", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], STANDALONEMONTHS:["Janeiro", "Fevereiro", "Mar\u00e7o", "Abril", "Maio", "Junho", "Julho", "Agosto", 
"Setembro", "Outubro", "Novembro", "Dezembro"], SHORTMONTHS:["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], WEEKDAYS:["Domingo", "Segunda-feira", "Ter\u00e7a-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "S\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Segunda-feira", "Ter\u00e7a-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "S\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.\u00ba trimestre", "2.\u00ba trimestre", "3.\u00ba trimestre", "4.\u00ba trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/yyyy", 
"dd/MM/yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ro = {ERAS:["\u00ee.Hr.", "d.Hr."], ERANAMES:["\u00eenainte de Hristos", "dup\u0103 Hristos"], NARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], STANDALONEMONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", 
"iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], SHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], STANDALONESHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], WEEKDAYS:["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\u00e2mb\u0103t\u0103"], STANDALONEWEEKDAYS:["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\u00e2mb\u0103t\u0103"], 
SHORTWEEKDAYS:["Du", "Lu", "Ma", "Mi", "Jo", "Vi", "S\u00e2"], STANDALONESHORTWEEKDAYS:["Du", "Lu", "Ma", "Mi", "Jo", "Vi", "S\u00e2"], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["trim. I", "trim. II", "trim. III", "trim. IV"], QUARTERS:["trimestrul I", "trimestrul al II-lea", "trimestrul al III-lea", "trimestrul al IV-lea"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd.MM.yyyy", "dd.MM.yyyy"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ru = {ERAS:["\u0434\u043e \u043d.\u044d.", "\u043d.\u044d."], ERANAMES:["\u0434\u043e \u043d.\u044d.", "\u043d.\u044d."], NARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], STANDALONENARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], MONTHS:["\u044f\u043d\u0432\u0430\u0440\u044f", "\u0444\u0435\u0432\u0440\u0430\u043b\u044f", 
"\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440\u0435\u043b\u044f", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", "\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433\u0443\u0441\u0442\u0430", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f", "\u043e\u043a\u0442\u044f\u0431\u0440\u044f", "\u043d\u043e\u044f\u0431\u0440\u044f", "\u0434\u0435\u043a\u0430\u0431\u0440\u044f"], STANDALONEMONTHS:["\u042f\u043d\u0432\u0430\u0440\u044c", "\u0424\u0435\u0432\u0440\u0430\u043b\u044c", "\u041c\u0430\u0440\u0442", 
"\u0410\u043f\u0440\u0435\u043b\u044c", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433\u0443\u0441\u0442", "\u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u041e\u043a\u0442\u044f\u0431\u0440\u044c", "\u041d\u043e\u044f\u0431\u0440\u044c", "\u0414\u0435\u043a\u0430\u0431\u0440\u044c"], SHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440.", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", 
"\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433.", "\u0441\u0435\u043d\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f\u0431.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u042f\u043d\u0432.", "\u0424\u0435\u0432\u0440.", "\u041c\u0430\u0440\u0442", "\u0410\u043f\u0440.", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433.", "\u0421\u0435\u043d\u0442.", "\u041e\u043a\u0442.", "\u041d\u043e\u044f\u0431.", "\u0414\u0435\u043a."], WEEKDAYS:["\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440\u0433", "\u043f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0441\u0443\u0431\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", "\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0412\u0442\u043e\u0440\u043d\u0438\u043a", "\u0421\u0440\u0435\u0434\u0430", 
"\u0427\u0435\u0442\u0432\u0435\u0440\u0433", "\u041f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0421\u0443\u0431\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u0432\u0441", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u0412\u0441", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u0412", "\u041f\u043d", "\u0412\u0442", "\u0421", "\u0427", "\u041f", "\u0421"], 
STANDALONENARROWWEEKDAYS:["\u0412", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["1-\u0439 \u043a\u0432.", "2-\u0439 \u043a\u0432.", "3-\u0439 \u043a\u0432.", "4-\u0439 \u043a\u0432."], QUARTERS:["1-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], AMPMS:["\u0434\u043e \u043f\u043e\u043b\u0443\u0434\u043d\u044f", 
"\u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u043b\u0443\u0434\u043d\u044f"], DATEFORMATS:["EEEE, d MMMM y\u00a0'\u0433'.", "d MMMM y\u00a0'\u0433'.", "dd.MM.yyyy", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sk = {ERAS:["pred n.l.", "n.l."], ERANAMES:["pred n.l.", "n.l."], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["janu\u00e1ra", "febru\u00e1ra", "marca", "apr\u00edla", "m\u00e1ja", "j\u00fana", "j\u00fala", "augusta", "septembra", "okt\u00f3bra", "novembra", "decembra"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "marec", "apr\u00edl", "m\u00e1j", 
"j\u00fan", "j\u00fal", "august", "september", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", "piatok", "sobota"], STANDALONEWEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", 
"piatok", "sobota"], SHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u0161tvr\u0165rok", "2. \u0161tvr\u0165rok", "3. \u0161tvr\u0165rok", "4. \u0161tvr\u0165rok"], AMPMS:["dopoludnia", "popoludn\u00ed"], DATEFORMATS:["EEEE, d. MMMM y", 
"d. MMMM y", "d.M.yyyy", "d.M.yyyy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sl = {ERAS:["pr. n. \u0161t.", "po Kr."], ERANAMES:["pred na\u0161im \u0161tetjem", "na\u0161e \u0161tetje"], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", 
"avgust", "september", "oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "avg.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], WEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], STANDALONEWEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], SHORTWEEKDAYS:["ned.", "pon.", "tor.", 
"sre.", "\u010det.", "pet.", "sob."], STANDALONESHORTWEEKDAYS:["ned", "pon", "tor", "sre", "\u010det", "pet", "sob"], NARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], STANDALONENARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u010detrtletje", "2. \u010detrtletje", "3. \u010detrtletje", "4. \u010detrtletje"], AMPMS:["dop.", "pop."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "d. MMM yyyy", "d. MM. yy"], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sq = {ERAS:["p.e.r.", "n.e.r."], ERANAMES:["p.e.r.", "n.e.r."], NARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], STANDALONENARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], MONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", "tetor", "n\u00ebntor", "dhjetor"], STANDALONEMONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", "tetor", "n\u00ebntor", 
"dhjetor"], SHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], STANDALONESHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], WEEKDAYS:["e diel", "e h\u00ebn\u00eb", "e mart\u00eb", "e m\u00ebrkur\u00eb", "e enjte", "e premte", "e shtun\u00eb"], STANDALONEWEEKDAYS:["e diel", "e h\u00ebn\u00eb", "e mart\u00eb", "e m\u00ebrkur\u00eb", "e enjte", "e premte", "e shtun\u00eb"], SHORTWEEKDAYS:["Die", "H\u00ebn", 
"Mar", "M\u00ebr", "Enj", "Pre", "Sht"], STANDALONESHORTWEEKDAYS:["Die", "H\u00ebn", "Mar", "M\u00ebr", "Enj", "Pre", "Sht"], NARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], STANDALONENARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["PD", "MD"], DATEFORMATS:["EEEE, dd MMMM y", "dd MMMM y", "yyyy-MM-dd", "yy-MM-dd"], TIMEFORMATS:["h.mm.ss.a zzzz", "h.mm.ss.a z", "h.mm.ss.a", "h.mm.a"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sr = {ERAS:["\u043f. \u043d. \u0435.", "\u043d. \u0435."], ERANAMES:["\u041f\u0440\u0435 \u043d\u043e\u0432\u0435 \u0435\u0440\u0435", "\u041d\u043e\u0432\u0435 \u0435\u0440\u0435"], NARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", 
"\u0444\u0435\u0431\u0440\u0443\u0430\u0440", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], STANDALONEMONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", "\u0444\u0435\u0431\u0440\u0443\u0430\u0440", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], SHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", 
"\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], STANDALONESHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], WEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", 
"\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", "\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], 
SHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", 
"\u0447", "\u043f", "\u0441"], SHORTQUARTERS:["\u041a1", "\u041a2", "\u041a3", "\u041a4"], QUARTERS:["\u041f\u0440\u0432\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0414\u0440\u0443\u0433\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0422\u0440\u0435\u045b\u0435 \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0427\u0435\u0442\u0432\u0440\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435"], AMPMS:["\u043f\u0440\u0435 \u043f\u043e\u0434\u043d\u0435", 
"\u043f\u043e\u043f\u043e\u0434\u043d\u0435"], DATEFORMATS:["EEEE, dd. MMMM y.", "dd. MMMM y.", "dd.MM.y.", "d.M.yy."], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sv = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f\u00f6re Kristus", "efter Kristus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", 
"oktober", "november", "december"], SHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["s\u00f6ndag", "m\u00e5ndag", "tisdag", "onsdag", "torsdag", "fredag", "l\u00f6rdag"], STANDALONEWEEKDAYS:["s\u00f6ndag", "m\u00e5ndag", "tisdag", "onsdag", "torsdag", "fredag", "l\u00f6rdag"], SHORTWEEKDAYS:["s\u00f6n", "m\u00e5n", "tis", "ons", "tors", 
"fre", "l\u00f6r"], STANDALONESHORTWEEKDAYS:["s\u00f6n", "m\u00e5n", "tis", "ons", "tor", "fre", "l\u00f6r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1:a kvartalet", "2:a kvartalet", "3:e kvartalet", "4:e kvartalet"], AMPMS:["fm", "em"], DATEFORMATS:["EEEE'en' 'den' d:'e' MMMM y", "d MMMM y", "d MMM y", "yyyy-MM-dd"], TIMEFORMATS:["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sw = {ERAS:["KK", "BK"], ERANAMES:["Kabla ya Kristo", "Baada ya Kristo"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", "Novemba", "Desemba"], STANDALONEMONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", 
"Novemba", "Desemba"], SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], STANDALONEWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], SHORTWEEKDAYS:["J2", "J3", "J4", "J5", "Alh", "Ij", "J1"], STANDALONESHORTWEEKDAYS:["J2", 
"J3", "J4", "J5", "Alh", "Ij", "J1"], NARROWWEEKDAYS:["2", "3", "4", "5", "A", "I", "1"], STANDALONENARROWWEEKDAYS:["2", "3", "4", "5", "A", "I", "1"], SHORTQUARTERS:["R1", "R2", "R3", "R4"], QUARTERS:["Robo 1", "Robo 2", "Robo 3", "Robo 4"], AMPMS:["asubuhi", "alasiri"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yyyy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ta = {ERAS:["\u0b95\u0bbf.\u0bae\u0bc1.", "\u0b95\u0bbf.\u0baa\u0bbf."], ERANAMES:["\u0b95\u0bbf\u0bb1\u0bbf\u0bb8\u0bcd\u0ba4\u0bc1\u0bb5\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd", "\u0b85\u0ba9\u0bcb \u0b9f\u0bcb\u0bae\u0bbf\u0ba9\u0bbf"], NARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", "\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], STANDALONENARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", 
"\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], MONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bcd", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], STANDALONEMONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bc1", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], SHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], STANDALONESHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", 
"\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], WEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", "\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], STANDALONEWEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", 
"\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], SHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONESHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], NARROWWEEKDAYS:["\u0b9e\u0bbe", 
"\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONENARROWWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], SHORTQUARTERS:["\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc11", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc12", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc13", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc14"], QUARTERS:["\u0bae\u0bc1\u0ba4\u0bb2\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", 
"\u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0bae\u0bc2\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0ba8\u0bbe\u0ba9\u0bcd\u0b95\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], 
FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_te = {ERAS:["\u0c08\u0c38\u0c3e\u0c2a\u0c42\u0c30\u0c4d\u0c35.", "\u0c38\u0c28\u0c4d."], ERANAMES:["\u0c08\u0c38\u0c3e\u0c2a\u0c42\u0c30\u0c4d\u0c35.", "\u0c38\u0c28\u0c4d."], NARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", "\u0c2e\u0c3e", "\u0c0f", "\u0c2e\u0c46", "\u0c1c\u0c41", "\u0c1c\u0c41", "\u0c06", "\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], STANDALONENARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", "\u0c2e", "\u0c0e", "\u0c2e\u0c46", "\u0c1c\u0c41", "\u0c1c\u0c41", "\u0c06", 
"\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], MONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c42\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", 
"\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], STANDALONEMONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c42\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", 
"\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], SHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c42\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", "\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], 
STANDALONESHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c42\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", "\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], WEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", 
"\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", "\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], STANDALONEWEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", "\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", 
"\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], SHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", "\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"], STANDALONESHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", "\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", 
"\u0c36\u0c28\u0c3f"], NARROWWEEKDAYS:["\u0c06", "\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], STANDALONENARROWWEEKDAYS:["\u0c06", "\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], SHORTQUARTERS:["\u0c12\u0c15\u0c1f\u0c3f 1", "\u0c30\u0c46\u0c02\u0c21\u0c41 2", "\u0c2e\u0c42\u0c21\u0c41 3", "\u0c28\u0c3e\u0c32\u0c41\u0c17\u0c41 4"], QUARTERS:["\u0c12\u0c15\u0c1f\u0c3f 1", "\u0c30\u0c46\u0c02\u0c21\u0c41 2", "\u0c2e\u0c42\u0c21\u0c41 3", 
"\u0c28\u0c3e\u0c32\u0c41\u0c17\u0c41 4"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_th = {ERAS:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19 \u0e04.\u0e28.", "\u0e04.\u0e28."], ERANAMES:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a", "\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a"], NARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", 
"\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONENARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], MONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", "\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", 
"\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], STANDALONEMONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", 
"\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", "\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], SHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", 
"\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONESHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], WEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", 
"\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", "\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], STANDALONEWEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", "\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", 
"\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], SHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], STANDALONESHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], NARROWWEEKDAYS:["\u0e2d", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e", 
"\u0e28", "\u0e2a"], STANDALONENARROWWEEKDAYS:["\u0e2d", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e", "\u0e28", "\u0e2a"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], AMPMS:["\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07", "\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07"], DATEFORMATS:["EEEE\u0e17\u0e35\u0e48 d MMMM G y", 
"d MMMM y", "d MMM y", "d/M/yyyy"], TIMEFORMATS:["H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 m \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 zzzz", "H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 m \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tl = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Mye", "Huw", "Bye", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 sangkapat", "ika-2 sangkapat", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM dd y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tr = {ERAS:["M\u00d6", "MS"], ERANAMES:["Milattan \u00d6nce", "Milattan Sonra"], NARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], STANDALONENARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], MONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", "Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], STANDALONEMONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", 
"Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], SHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], STANDALONESHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], WEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", "Cuma", "Cumartesi"], STANDALONEWEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", 
"Cuma", "Cumartesi"], SHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], STANDALONESHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], NARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], STANDALONENARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], SHORTQUARTERS:["\u00c71", "\u00c72", "\u00c73", "\u00c74"], QUARTERS:["1. \u00e7eyrek", "2. \u00e7eyrek", "3. \u00e7eyrek", "4. \u00e7eyrek"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y EEEE", "d MMMM y", 
"d MMM y", "dd MM yyyy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_uk = {ERAS:["\u0434\u043e \u043d.\u0435.", "\u043d.\u0435."], ERANAMES:["\u0434\u043e \u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438", "\u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438"], NARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], STANDALONENARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], MONTHS:["\u0441\u0456\u0447\u043d\u044f", 
"\u043b\u044e\u0442\u043e\u0433\u043e", "\u0431\u0435\u0440\u0435\u0437\u043d\u044f", "\u043a\u0432\u0456\u0442\u043d\u044f", "\u0442\u0440\u0430\u0432\u043d\u044f", "\u0447\u0435\u0440\u0432\u043d\u044f", "\u043b\u0438\u043f\u043d\u044f", "\u0441\u0435\u0440\u043f\u043d\u044f", "\u0432\u0435\u0440\u0435\u0441\u043d\u044f", "\u0436\u043e\u0432\u0442\u043d\u044f", "\u043b\u0438\u0441\u0442\u043e\u043f\u0430\u0434\u0430", "\u0433\u0440\u0443\u0434\u043d\u044f"], STANDALONEMONTHS:["\u0421\u0456\u0447\u0435\u043d\u044c", 
"\u041b\u044e\u0442\u0438\u0439", "\u0411\u0435\u0440\u0435\u0437\u0435\u043d\u044c", "\u041a\u0432\u0456\u0442\u0435\u043d\u044c", "\u0422\u0440\u0430\u0432\u0435\u043d\u044c", "\u0427\u0435\u0440\u0432\u0435\u043d\u044c", "\u041b\u0438\u043f\u0435\u043d\u044c", "\u0421\u0435\u0440\u043f\u0435\u043d\u044c", "\u0412\u0435\u0440\u0435\u0441\u0435\u043d\u044c", "\u0416\u043e\u0432\u0442\u0435\u043d\u044c", "\u041b\u0438\u0441\u0442\u043e\u043f\u0430\u0434", "\u0413\u0440\u0443\u0434\u0435\u043d\u044c"], 
SHORTMONTHS:["\u0441\u0456\u0447.", "\u043b\u044e\u0442.", "\u0431\u0435\u0440.", "\u043a\u0432\u0456\u0442.", "\u0442\u0440\u0430\u0432.", "\u0447\u0435\u0440\u0432.", "\u043b\u0438\u043f.", "\u0441\u0435\u0440\u043f.", "\u0432\u0435\u0440.", "\u0436\u043e\u0432\u0442.", "\u043b\u0438\u0441\u0442.", "\u0433\u0440\u0443\u0434."], STANDALONESHORTMONTHS:["\u0421\u0456\u0447", "\u041b\u044e\u0442", "\u0411\u0435\u0440", "\u041a\u0432\u0456", "\u0422\u0440\u0430", "\u0427\u0435\u0440", "\u041b\u0438\u043f", 
"\u0421\u0435\u0440", "\u0412\u0435\u0440", "\u0416\u043e\u0432", "\u041b\u0438\u0441", "\u0413\u0440\u0443"], WEEKDAYS:["\u041d\u0435\u0434\u0456\u043b\u044f", "\u041f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0412\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0421\u0435\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0435\u0440", "\u041f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0421\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u041d\u0435\u0434\u0456\u043b\u044f", 
"\u041f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0412\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0421\u0435\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0435\u0440", "\u041f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0421\u0443\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], STANDALONESHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", 
"\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], STANDALONENARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["I \u043a\u0432.", "II \u043a\u0432.", "III \u043a\u0432.", "IV \u043a\u0432."], QUARTERS:["I \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "II \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "III \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "IV \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], 
AMPMS:["\u0434\u043f", "\u043f\u043f"], DATEFORMATS:["EEEE, d MMMM y '\u0440'.", "d MMMM y '\u0440'.", "d MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ur = {ERAS:["\u0642 \u0645", "\u0639\u064a\u0633\u0648\u06cc \u0633\u0646"], ERANAMES:["\u0642\u0628\u0644 \u0645\u0633\u064a\u062d", "\u0639\u064a\u0633\u0648\u06cc \u0633\u0646"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u064a\u0644", 
"\u0645\u0626", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u064a\u0644", "\u0645\u0626", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", 
"\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u064a\u0644", "\u0645\u0626", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", 
"\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u064a\u0644", "\u0645\u0626", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u067e\u064a\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u0647", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", 
"\u06c1\u0641\u062a\u06c1"], STANDALONEWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u067e\u064a\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u0647", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], SHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u067e\u064a\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u0647", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], STANDALONESHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", 
"\u067e\u064a\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u0647", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u064a\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", 
"\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], QUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u064a\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], AMPMS:["\u062f\u0646", "\u0631\u0627\u062a"], DATEFORMATS:["EEEE\u060d d\u060d MMMM y", "d\u060d MMMM y", "d\u060d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_vi = {ERAS:["tr. CN", "sau CN"], ERANAMES:["tr. CN", "sau CN"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["th\u00e1ng m\u1ed9t", "th\u00e1ng hai", "th\u00e1ng ba", "th\u00e1ng t\u01b0", "th\u00e1ng n\u0103m", "th\u00e1ng s\u00e1u", "th\u00e1ng b\u1ea3y", "th\u00e1ng t\u00e1m", "th\u00e1ng ch\u00edn", "th\u00e1ng m\u01b0\u1eddi", "th\u00e1ng m\u01b0\u1eddi m\u1ed9t", 
"th\u00e1ng m\u01b0\u1eddi hai"], STANDALONEMONTHS:["th\u00e1ng m\u1ed9t", "th\u00e1ng hai", "th\u00e1ng ba", "th\u00e1ng t\u01b0", "th\u00e1ng n\u0103m", "th\u00e1ng s\u00e1u", "th\u00e1ng b\u1ea3y", "th\u00e1ng t\u00e1m", "th\u00e1ng ch\u00edn", "th\u00e1ng m\u01b0\u1eddi", "th\u00e1ng m\u01b0\u1eddi m\u1ed9t", "th\u00e1ng m\u01b0\u1eddi hai"], SHORTMONTHS:["thg 1", "thg 2", "thg 3", "thg 4", "thg 5", "thg 6", "thg 7", "thg 8", "thg 9", "thg 10", "thg 11", "thg 12"], STANDALONESHORTMONTHS:["thg 1", 
"thg 2", "thg 3", "thg 4", "thg 5", "thg 6", "thg 7", "thg 8", "thg 9", "thg 10", "thg 11", "thg 12"], WEEKDAYS:["Ch\u1ee7 nh\u1eadt", "Th\u1ee9 hai", "Th\u1ee9 ba", "Th\u1ee9 t\u01b0", "Th\u1ee9 n\u0103m", "Th\u1ee9 s\u00e1u", "Th\u1ee9 b\u1ea3y"], STANDALONEWEEKDAYS:["Ch\u1ee7 nh\u1eadt", "Th\u1ee9 hai", "Th\u1ee9 ba", "Th\u1ee9 t\u01b0", "Th\u1ee9 n\u0103m", "Th\u1ee9 s\u00e1u", "Th\u1ee9 b\u1ea3y"], SHORTWEEKDAYS:["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], STANDALONESHORTWEEKDAYS:["CN", 
"Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], NARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], STANDALONENARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Qu\u00fd 1", "Qu\u00fd 2", "Qu\u00fd 3", "Qu\u00fd 4"], AMPMS:["SA", "CH"], DATEFORMATS:["EEEE, 'ng\u00e0y' dd MMMM 'n\u0103m' y", "'Ng\u00e0y' dd 'th\u00e1ng' M 'n\u0103m' y", "dd-MM-yyyy", "dd/MM/yyyy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_zh = {ERAS:["\u516c\u5143\u524d", "\u516c\u5143"], ERANAMES:["\u516c\u5143\u524d", "\u516c\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], 
STANDALONEMONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", 
"\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", 
"\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], STANDALONESHORTWEEKDAYS:["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], NARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63\u5ea6", "\u7b2c2\u5b63\u5ea6", "\u7b2c3\u5b63\u5ea6", 
"\u7b2c4\u5b63\u5ea6"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "yyyy-M-d", "yy-M-d"], TIMEFORMATS:["zzzzah\u65f6mm\u5206ss\u79d2", "zah\u65f6mm\u5206ss\u79d2", "ah:mm:ss", "ah:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_CN = goog.i18n.DateTimeSymbols_zh;
goog.i18n.DateTimeSymbols_zh_HK = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u897f\u5143\u524d", "\u897f\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", 
"\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", 
"\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", 
"\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], NARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", 
"yy\u5e74M\u6708d\u65e5"], TIMEFORMATS:["ah:mm:ss [zzzz]", "ah:mm:ss [z]", "ahh:mm:ss", "ah:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_TW = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u897f\u5143\u524d", "\u897f\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", 
"\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", 
"\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", 
"\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], NARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "yyyy/M/d", "y/M/d"], 
TIMEFORMATS:["zzzzah\u6642mm\u5206ss\u79d2", "zah\u6642mm\u5206ss\u79d2", "ah:mm:ss", "ah:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zu = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januwari", "Februwari", "Mashi", "Apreli", "Meyi", "Juni", "Julayi", "Agasti", "Septhemba", "Okthoba", "Novemba", "Disemba"], STANDALONEMONTHS:["uJanuwari", "uFebruwari", "uMashi", "u-Apreli", "uMeyi", "uJuni", "uJulayi", "uAgasti", "uSepthemba", "u-Okthoba", 
"uNovemba", "uDisemba"], SHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "uLwesine", "Lwesihlanu", "Mgqibelo"], STANDALONEWEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "uLwesine", "Lwesihlanu", "Mgqibelo"], SHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], 
STANDALONESHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], NARROWWEEKDAYS:["S", "M", "B", "T", "S", "H", "M"], STANDALONENARROWWEEKDAYS:["S", "M", "B", "T", "S", "H", "M"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ikota yoku-1", "ikota yesi-2", "ikota yesi-3", "ikota yesi-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE dd MMMM y", "d MMMM y", "d MMM y", "yyyy-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], 
FIRSTWEEKCUTOFFDAY:5};
if(goog.LOCALE == "af") {
  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_af
}else {
  if(goog.LOCALE == "am") {
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_am
  }else {
    if(goog.LOCALE == "ar") {
      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ar
    }else {
      if(goog.LOCALE == "bg") {
        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bg
      }else {
        if(goog.LOCALE == "bn") {
          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bn
        }else {
          if(goog.LOCALE == "ca") {
            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ca
          }else {
            if(goog.LOCALE == "chr") {
              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_chr
            }else {
              if(goog.LOCALE == "cs") {
                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cs
              }else {
                if(goog.LOCALE == "cy") {
                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cy
                }else {
                  if(goog.LOCALE == "da") {
                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_da
                  }else {
                    if(goog.LOCALE == "de") {
                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de
                    }else {
                      if(goog.LOCALE == "de_AT" || goog.LOCALE == "de-AT") {
                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de_AT
                      }else {
                        if(goog.LOCALE == "de_CH" || goog.LOCALE == "de-CH") {
                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de
                        }else {
                          if(goog.LOCALE == "el") {
                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_el
                          }else {
                            if(goog.LOCALE == "en") {
                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en
                            }else {
                              if(goog.LOCALE == "en_AU" || goog.LOCALE == "en-AU") {
                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_AU
                              }else {
                                if(goog.LOCALE == "en_GB" || goog.LOCALE == "en-GB") {
                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_GB
                                }else {
                                  if(goog.LOCALE == "en_IE" || goog.LOCALE == "en-IE") {
                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IE
                                  }else {
                                    if(goog.LOCALE == "en_IN" || goog.LOCALE == "en-IN") {
                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IN
                                    }else {
                                      if(goog.LOCALE == "en_SG" || goog.LOCALE == "en-SG") {
                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_SG
                                      }else {
                                        if(goog.LOCALE == "en_US" || goog.LOCALE == "en-US") {
                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en
                                        }else {
                                          if(goog.LOCALE == "en_ZA" || goog.LOCALE == "en-ZA") {
                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_ZA
                                          }else {
                                            if(goog.LOCALE == "es") {
                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es
                                            }else {
                                              if(goog.LOCALE == "es_419" || goog.LOCALE == "es-419") {
                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es_419
                                              }else {
                                                if(goog.LOCALE == "et") {
                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_et
                                                }else {
                                                  if(goog.LOCALE == "eu") {
                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_eu
                                                  }else {
                                                    if(goog.LOCALE == "fa") {
                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fa
                                                    }else {
                                                      if(goog.LOCALE == "fi") {
                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fi
                                                      }else {
                                                        if(goog.LOCALE == "fil") {
                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fil
                                                        }else {
                                                          if(goog.LOCALE == "fr") {
                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr
                                                          }else {
                                                            if(goog.LOCALE == "fr_CA" || goog.LOCALE == "fr-CA") {
                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr_CA
                                                            }else {
                                                              if(goog.LOCALE == "gl") {
                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gl
                                                              }else {
                                                                if(goog.LOCALE == "gsw") {
                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gsw
                                                                }else {
                                                                  if(goog.LOCALE == "gu") {
                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gu
                                                                  }else {
                                                                    if(goog.LOCALE == "haw") {
                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_haw
                                                                    }else {
                                                                      if(goog.LOCALE == "he") {
                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_he
                                                                      }else {
                                                                        if(goog.LOCALE == "hi") {
                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hi
                                                                        }else {
                                                                          if(goog.LOCALE == "hr") {
                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hr
                                                                          }else {
                                                                            if(goog.LOCALE == "hu") {
                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hu
                                                                            }else {
                                                                              if(goog.LOCALE == "id") {
                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_id
                                                                              }else {
                                                                                if(goog.LOCALE == "in") {
                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_in
                                                                                }else {
                                                                                  if(goog.LOCALE == "is") {
                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_is
                                                                                  }else {
                                                                                    if(goog.LOCALE == "it") {
                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_it
                                                                                    }else {
                                                                                      if(goog.LOCALE == "iw") {
                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_iw
                                                                                      }else {
                                                                                        if(goog.LOCALE == "ja") {
                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ja
                                                                                        }else {
                                                                                          if(goog.LOCALE == "kn") {
                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kn
                                                                                          }else {
                                                                                            if(goog.LOCALE == "ko") {
                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ko
                                                                                            }else {
                                                                                              if(goog.LOCALE == "ln") {
                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ln
                                                                                              }else {
                                                                                                if(goog.LOCALE == "lt") {
                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lt
                                                                                                }else {
                                                                                                  if(goog.LOCALE == "lv") {
                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lv
                                                                                                  }else {
                                                                                                    if(goog.LOCALE == "ml") {
                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ml
                                                                                                    }else {
                                                                                                      if(goog.LOCALE == "mr") {
                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mr
                                                                                                      }else {
                                                                                                        if(goog.LOCALE == "ms") {
                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ms
                                                                                                        }else {
                                                                                                          if(goog.LOCALE == "mt") {
                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mt
                                                                                                          }else {
                                                                                                            if(goog.LOCALE == "nl") {
                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nl
                                                                                                            }else {
                                                                                                              if(goog.LOCALE == "no") {
                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no
                                                                                                              }else {
                                                                                                                if(goog.LOCALE == "or") {
                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_or
                                                                                                                }else {
                                                                                                                  if(goog.LOCALE == "pl") {
                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pl
                                                                                                                  }else {
                                                                                                                    if(goog.LOCALE == "pt") {
                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt
                                                                                                                    }else {
                                                                                                                      if(goog.LOCALE == "pt_BR" || goog.LOCALE == "pt-BR") {
                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt
                                                                                                                      }else {
                                                                                                                        if(goog.LOCALE == "pt_PT" || goog.LOCALE == "pt-PT") {
                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt_PT
                                                                                                                        }else {
                                                                                                                          if(goog.LOCALE == "ro") {
                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ro
                                                                                                                          }else {
                                                                                                                            if(goog.LOCALE == "ru") {
                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ru
                                                                                                                            }else {
                                                                                                                              if(goog.LOCALE == "sk") {
                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sk
                                                                                                                              }else {
                                                                                                                                if(goog.LOCALE == "sl") {
                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sl
                                                                                                                                }else {
                                                                                                                                  if(goog.LOCALE == "sq") {
                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sq
                                                                                                                                  }else {
                                                                                                                                    if(goog.LOCALE == "sr") {
                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sr
                                                                                                                                    }else {
                                                                                                                                      if(goog.LOCALE == "sv") {
                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sv
                                                                                                                                      }else {
                                                                                                                                        if(goog.LOCALE == "sw") {
                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sw
                                                                                                                                        }else {
                                                                                                                                          if(goog.LOCALE == "ta") {
                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ta
                                                                                                                                          }else {
                                                                                                                                            if(goog.LOCALE == "te") {
                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_te
                                                                                                                                            }else {
                                                                                                                                              if(goog.LOCALE == "th") {
                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_th
                                                                                                                                              }else {
                                                                                                                                                if(goog.LOCALE == "tl") {
                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tl
                                                                                                                                                }else {
                                                                                                                                                  if(goog.LOCALE == "tr") {
                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tr
                                                                                                                                                  }else {
                                                                                                                                                    if(goog.LOCALE == "uk") {
                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uk
                                                                                                                                                    }else {
                                                                                                                                                      if(goog.LOCALE == "ur") {
                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ur
                                                                                                                                                      }else {
                                                                                                                                                        if(goog.LOCALE == "vi") {
                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_vi
                                                                                                                                                        }else {
                                                                                                                                                          if(goog.LOCALE == "zh") {
                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh
                                                                                                                                                          }else {
                                                                                                                                                            if(goog.LOCALE == "zh_CN" || goog.LOCALE == "zh-CN") {
                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh
                                                                                                                                                            }else {
                                                                                                                                                              if(goog.LOCALE == "zh_HK" || goog.LOCALE == "zh-HK") {
                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_HK
                                                                                                                                                              }else {
                                                                                                                                                                if(goog.LOCALE == "zh_TW" || goog.LOCALE == "zh-TW") {
                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_TW
                                                                                                                                                                }else {
                                                                                                                                                                  if(goog.LOCALE == "zu") {
                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zu
                                                                                                                                                                  }else {
                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
;goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  this.disposed_ = false;
  if(goog.Disposable.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return!!this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    if(goog.Disposable.ENABLE_MONITORING) {
      if(this.disposed_ == undefined) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor");
      }
      var uid = goog.getUid(this);
      delete goog.Disposable.instances_[uid]
    }
    this.disposed_ = true;
    this.disposeInternal()
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if(!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = []
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope))
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
  if(this.onDisposeCallbacks_) {
    while(this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()()
    }
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && !!document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || goog.userAgent.IE && goog.userAgent.isVersion("8") || goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if(e.defaultPrevented) {
    this.preventDefault()
  }
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
  if(goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack
  }
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray)
  }
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return listener.handleEvent(eventObject)
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  retval = goog.events.fireListener(listener, be);
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(f.call(opt_obj, val, undefined, iterator)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterator.next();
        if(f.call(opt_obj, val, undefined, iterator)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("535.3")) {
    retVal = !retVal
  }
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = false;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(goog.net.XmlHttp.ASSUME_NATIVE_XHR) {
    return""
  }
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if(!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1)
  }
  return scheme ? scheme.toLowerCase() : ""
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for(var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs)
    }
  }else {
    if(value != null) {
      pairs.push("&", key, value === "" ? "" : "=", goog.string.urlEncode(value))
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if(this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS)
          }else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_()
          }
        }finally {
          this.cleanUpXhr_()
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY)
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_()
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme)
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("orchard.dispatch");
goog.require("cljs.core");
orchard.dispatch.reactions = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
orchard.dispatch.react_to = function() {
  var react_to = null;
  var react_to__2 = function(event_pred, reactor) {
    return react_to.call(null, null, event_pred, reactor)
  };
  var react_to__3 = function(max_count, event_pred, reactor) {
    var reaction = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:max-count", max_count, "\ufdd0:event-pred", event_pred, "\ufdd0:reactor", reactor], true);
    cljs.core.swap_BANG_.call(null, orchard.dispatch.reactions, cljs.core.assoc, reaction, 0);
    return reaction
  };
  react_to = function(max_count, event_pred, reactor) {
    switch(arguments.length) {
      case 2:
        return react_to__2.call(this, max_count, event_pred);
      case 3:
        return react_to__3.call(this, max_count, event_pred, reactor)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  react_to.cljs$core$IFn$_invoke$arity$2 = react_to__2;
  react_to.cljs$core$IFn$_invoke$arity$3 = react_to__3;
  return react_to
}();
orchard.dispatch.delete_reaction = function delete_reaction(reaction) {
  return cljs.core.swap_BANG_.call(null, orchard.dispatch.reactions, cljs.core.dissoc, reaction)
};
orchard.dispatch.fire = function() {
  var fire = null;
  var fire__1 = function(event_id) {
    return fire.call(null, event_id, null)
  };
  var fire__2 = function() {
    var G__433572__delegate = function(event_id, p__433547) {
      var vec__433560 = p__433547;
      var event_data = cljs.core.nth.call(null, vec__433560, 0, null);
      var matching_reactions = cljs.core.filter.call(null, function(p__433561) {
        var vec__433562 = p__433561;
        var map__433563 = cljs.core.nth.call(null, vec__433562, 0, null);
        var map__433563__$1 = cljs.core.seq_QMARK_.call(null, map__433563) ? cljs.core.apply.call(null, cljs.core.hash_map, map__433563) : map__433563;
        var event_pred = cljs.core.get.call(null, map__433563__$1, "\ufdd0:event-pred");
        var run_count = cljs.core.nth.call(null, vec__433562, 1, null);
        return event_pred.call(null, event_id)
      }, cljs.core.deref.call(null, orchard.dispatch.reactions));
      var seq__433564 = cljs.core.seq.call(null, matching_reactions);
      var chunk__433565 = null;
      var count__433566 = 0;
      var i__433567 = 0;
      while(true) {
        if(i__433567 < count__433566) {
          var vec__433568 = cljs.core._nth.call(null, chunk__433565, i__433567);
          var reaction = cljs.core.nth.call(null, vec__433568, 0, null);
          var run_count = cljs.core.nth.call(null, vec__433568, 1, null);
          var map__433569_433573 = reaction;
          var map__433569_433574__$1 = cljs.core.seq_QMARK_.call(null, map__433569_433573) ? cljs.core.apply.call(null, cljs.core.hash_map, map__433569_433573) : map__433569_433573;
          var reactor_433575 = cljs.core.get.call(null, map__433569_433574__$1, "\ufdd0:reactor");
          var max_count_433576 = cljs.core.get.call(null, map__433569_433574__$1, "\ufdd0:max-count");
          var run_count_433577__$1 = run_count + 1;
          reactor_433575.call(null, event_id, event_data);
          if(cljs.core.truth_(function() {
            var and__3941__auto__ = max_count_433576;
            if(cljs.core.truth_(and__3941__auto__)) {
              return max_count_433576 <= run_count_433577__$1
            }else {
              return and__3941__auto__
            }
          }())) {
            orchard.dispatch.delete_reaction.call(null, reaction)
          }else {
            cljs.core.swap_BANG_.call(null, orchard.dispatch.reactions, cljs.core.assoc, reaction, run_count_433577__$1)
          }
          var G__433578 = seq__433564;
          var G__433579 = chunk__433565;
          var G__433580 = count__433566;
          var G__433581 = i__433567 + 1;
          seq__433564 = G__433578;
          chunk__433565 = G__433579;
          count__433566 = G__433580;
          i__433567 = G__433581;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__433564);
          if(temp__4092__auto__) {
            var seq__433564__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__433564__$1)) {
              var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__433564__$1);
              var G__433582 = cljs.core.chunk_rest.call(null, seq__433564__$1);
              var G__433583 = c__3259__auto__;
              var G__433584 = cljs.core.count.call(null, c__3259__auto__);
              var G__433585 = 0;
              seq__433564 = G__433582;
              chunk__433565 = G__433583;
              count__433566 = G__433584;
              i__433567 = G__433585;
              continue
            }else {
              var vec__433570 = cljs.core.first.call(null, seq__433564__$1);
              var reaction = cljs.core.nth.call(null, vec__433570, 0, null);
              var run_count = cljs.core.nth.call(null, vec__433570, 1, null);
              var map__433571_433586 = reaction;
              var map__433571_433587__$1 = cljs.core.seq_QMARK_.call(null, map__433571_433586) ? cljs.core.apply.call(null, cljs.core.hash_map, map__433571_433586) : map__433571_433586;
              var reactor_433588 = cljs.core.get.call(null, map__433571_433587__$1, "\ufdd0:reactor");
              var max_count_433589 = cljs.core.get.call(null, map__433571_433587__$1, "\ufdd0:max-count");
              var run_count_433590__$1 = run_count + 1;
              reactor_433588.call(null, event_id, event_data);
              if(cljs.core.truth_(function() {
                var and__3941__auto__ = max_count_433589;
                if(cljs.core.truth_(and__3941__auto__)) {
                  return max_count_433589 <= run_count_433590__$1
                }else {
                  return and__3941__auto__
                }
              }())) {
                orchard.dispatch.delete_reaction.call(null, reaction)
              }else {
                cljs.core.swap_BANG_.call(null, orchard.dispatch.reactions, cljs.core.assoc, reaction, run_count_433590__$1)
              }
              var G__433591 = cljs.core.next.call(null, seq__433564__$1);
              var G__433592 = null;
              var G__433593 = 0;
              var G__433594 = 0;
              seq__433564 = G__433591;
              chunk__433565 = G__433592;
              count__433566 = G__433593;
              i__433567 = G__433594;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    };
    var G__433572 = function(event_id, var_args) {
      var p__433547 = null;
      if(arguments.length > 1) {
        p__433547 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__433572__delegate.call(this, event_id, p__433547)
    };
    G__433572.cljs$lang$maxFixedArity = 1;
    G__433572.cljs$lang$applyTo = function(arglist__433595) {
      var event_id = cljs.core.first(arglist__433595);
      var p__433547 = cljs.core.rest(arglist__433595);
      return G__433572__delegate(event_id, p__433547)
    };
    G__433572.cljs$core$IFn$_invoke$arity$variadic = G__433572__delegate;
    return G__433572
  }();
  fire = function(event_id, var_args) {
    var p__433547 = var_args;
    switch(arguments.length) {
      case 1:
        return fire__1.call(this, event_id);
      default:
        return fire__2.cljs$core$IFn$_invoke$arity$variadic(event_id, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fire.cljs$lang$maxFixedArity = 1;
  fire.cljs$lang$applyTo = fire__2.cljs$lang$applyTo;
  fire.cljs$core$IFn$_invoke$arity$1 = fire__1;
  fire.cljs$core$IFn$_invoke$arity$variadic = fire__2.cljs$core$IFn$_invoke$arity$variadic;
  return fire
}();
goog.provide("orchard.util.log");
goog.require("cljs.core");
goog.require("orchard.dispatch");
orchard.util.log.log = function() {
  var log__delegate = function(v, text) {
    var vs = cljs.core.string_QMARK_.call(null, v) ? cljs.core.apply.call(null, cljs.core.str, v, text) : [cljs.core.str(v)].join("");
    orchard.dispatch.fire.call(null, "\ufdd0:log-message", vs);
    return console.log(vs)
  };
  var log = function(v, var_args) {
    var text = null;
    if(arguments.length > 1) {
      text = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return log__delegate.call(this, v, text)
  };
  log.cljs$lang$maxFixedArity = 1;
  log.cljs$lang$applyTo = function(arglist__438645) {
    var v = cljs.core.first(arglist__438645);
    var text = cljs.core.rest(arglist__438645);
    return log__delegate(v, text)
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log
}();
orchard.util.log.log_obj = function log_obj(obj) {
  console.log(obj);
  return obj
};
orchard.util.log.jslog = function() {
  var jslog__delegate = function(m) {
    return orchard.util.log.log.call(null, cljs.core.apply.call(null, cljs.core.js__GT_clj, m))
  };
  var jslog = function(var_args) {
    var m = null;
    if(arguments.length > 0) {
      m = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return jslog__delegate.call(this, m)
  };
  jslog.cljs$lang$maxFixedArity = 0;
  jslog.cljs$lang$applyTo = function(arglist__438646) {
    var m = cljs.core.seq(arglist__438646);
    return jslog__delegate(m)
  };
  jslog.cljs$core$IFn$_invoke$arity$variadic = jslog__delegate;
  return jslog
}();
orchard.util.log.log_err = function() {
  var log_err__delegate = function(v, p__438647) {
    var vec__438649 = p__438647;
    var text = cljs.core.nth.call(null, vec__438649, 0, null);
    return orchard.util.log.log.call(null, v, text)
  };
  var log_err = function(v, var_args) {
    var p__438647 = null;
    if(arguments.length > 1) {
      p__438647 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return log_err__delegate.call(this, v, p__438647)
  };
  log_err.cljs$lang$maxFixedArity = 1;
  log_err.cljs$lang$applyTo = function(arglist__438650) {
    var v = cljs.core.first(arglist__438650);
    var p__438647 = cljs.core.rest(arglist__438650);
    return log_err__delegate(v, p__438647)
  };
  log_err.cljs$core$IFn$_invoke$arity$variadic = log_err__delegate;
  return log_err
}();
orchard.util.log.log_flags_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0:global", null], true));
orchard.util.log.in_QMARK_ = function() {
  var in_QMARK_ = null;
  var in_QMARK___1 = function(x) {
    return in_QMARK_.call(null, cljs.core.deref.call(null, orchard.util.log.log_flags_STAR_), x)
  };
  var in_QMARK___2 = function(coll, x) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([x, null], true), cljs.core.deref.call(null, orchard.util.log.log_flags_STAR_)))) {
      return true
    }else {
      return false
    }
  };
  in_QMARK_ = function(coll, x) {
    switch(arguments.length) {
      case 1:
        return in_QMARK___1.call(this, coll);
      case 2:
        return in_QMARK___2.call(this, coll, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  in_QMARK_.cljs$core$IFn$_invoke$arity$1 = in_QMARK___1;
  in_QMARK_.cljs$core$IFn$_invoke$arity$2 = in_QMARK___2;
  return in_QMARK_
}();
orchard.util.log.set_flags = function set_flags(flags) {
  return cljs.core.reset_BANG_.call(null, orchard.util.log.log_flags_STAR_, cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, flags))
};
orchard.util.log.add_flags = function() {
  var add_flags__delegate = function(flags) {
    return cljs.core.swap_BANG_.call(null, orchard.util.log.log_flags_STAR_, function(p1__438651_SHARP_) {
      return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.concat.call(null, p1__438651_SHARP_, flags))
    })
  };
  var add_flags = function(var_args) {
    var flags = null;
    if(arguments.length > 0) {
      flags = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return add_flags__delegate.call(this, flags)
  };
  add_flags.cljs$lang$maxFixedArity = 0;
  add_flags.cljs$lang$applyTo = function(arglist__438653) {
    var flags = cljs.core.seq(arglist__438653);
    return add_flags__delegate(flags)
  };
  add_flags.cljs$core$IFn$_invoke$arity$variadic = add_flags__delegate;
  return add_flags
}();
orchard.util.log.remove_flags = function remove_flags(flags) {
  return cljs.core.swap_BANG_.call(null, orchard.util.log.log_flags_STAR_, function(fs) {
    return cljs.core.remove.call(null, function(p1__438652_SHARP_) {
      return orchard.util.log.in_QMARK_.call(null, flags, p1__438652_SHARP_)
    }, fs)
  })
};
orchard.util.log.flagged_QMARK_ = function flagged_QMARK_(flag) {
  return!(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([flag, null], true), cljs.core.deref.call(null, orchard.util.log.log_flags_STAR_)) == null)
};
orchard.util.log.log$ = function() {
  var log$ = null;
  var log$__2 = function() {
    var G__438656__delegate = function(flags, args) {
      var flags__$1 = cljs.core.flatten.call(null, cljs.core.PersistentVector.fromArray([flags], true));
      var flagged_QMARK_ = cljs.core.reduce.call(null, function(flags__$1) {
        return function(p1__438654_SHARP_, p2__438655_SHARP_) {
          var or__3943__auto__ = p1__438654_SHARP_;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return orchard.util.log.in_QMARK_.call(null, p2__438655_SHARP_)
          }
        }
      }(flags__$1), false, flags__$1);
      var args__$1 = cljs.core.flatten.call(null, args);
      cljs.core.println.call(null, flags__$1, flagged_QMARK_, args__$1);
      if(cljs.core.truth_(flagged_QMARK_)) {
        orchard.util.log.log.call(null, "LOG: flags = ", flags__$1);
        return orchard.util.log.log.call(null, args__$1)
      }else {
        return null
      }
    };
    var G__438656 = function(flags, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__438656__delegate.call(this, flags, args)
    };
    G__438656.cljs$lang$maxFixedArity = 1;
    G__438656.cljs$lang$applyTo = function(arglist__438657) {
      var flags = cljs.core.first(arglist__438657);
      var args = cljs.core.rest(arglist__438657);
      return G__438656__delegate(flags, args)
    };
    G__438656.cljs$core$IFn$_invoke$arity$variadic = G__438656__delegate;
    return G__438656
  }();
  log$ = function(flags, var_args) {
    var args = var_args;
    switch(arguments.length) {
      default:
        return log$__2.cljs$core$IFn$_invoke$arity$variadic(flags, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  log$.cljs$lang$maxFixedArity = 1;
  log$.cljs$lang$applyTo = log$__2.cljs$lang$applyTo;
  log$.cljs$core$IFn$_invoke$arity$variadic = log$__2.cljs$core$IFn$_invoke$arity$variadic;
  return log$
}();
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = {};
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler)
  }else {
    var x__3128__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler)
  }
};
cljs.core.async.impl.protocols.WritePort = {};
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler)
  }else {
    var x__3128__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler)
  }
};
cljs.core.async.impl.protocols.Channel = {};
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if(function() {
    var and__3941__auto__ = chan;
    if(and__3941__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan)
  }else {
    var x__3128__auto__ = chan == null ? null : chan;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan)
  }
};
cljs.core.async.impl.protocols.Handler = {};
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h)
  }else {
    var x__3128__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h)
  }else {
    var x__3128__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.Buffer = {};
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b)
  }else {
    var x__3128__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b)
  }else {
    var x__3128__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm)
  }else {
    var x__3128__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm)
  }
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 4;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o]
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx]
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX] === "\ufdd0:finished"
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if(void 0 === cljs.core.async.impl.ioc_helpers.t439677) {
    goog.provide("cljs.core.async.impl.ioc_helpers.t439677");
    cljs.core.async.impl.ioc_helpers.t439677 = function(f, fn_handler, meta439678) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta439678 = meta439678;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.impl.ioc_helpers.t439677.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t439677.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t439677";
    cljs.core.async.impl.ioc_helpers.t439677.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
      return cljs.core._write.call(null, writer__3070__auto__, "cljs.core.async.impl.ioc-helpers/t439677")
    };
    cljs.core.async.impl.ioc_helpers.t439677.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t439677.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.impl.ioc_helpers.t439677.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.impl.ioc_helpers.t439677.prototype.cljs$core$IMeta$_meta$arity$1 = function(_439679) {
      var self__ = this;
      return self__.meta439678
    };
    cljs.core.async.impl.ioc_helpers.t439677.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_439679, meta439678__$1) {
      var self__ = this;
      return new cljs.core.async.impl.ioc_helpers.t439677(self__.f, self__.fn_handler, meta439678__$1)
    };
    cljs.core.async.impl.ioc_helpers.__GT_t439677 = function __GT_t439677(f__$1, fn_handler__$1, meta439678) {
      return new cljs.core.async.impl.ioc_helpers.t439677(f__$1, fn_handler__$1, meta439678)
    }
  }else {
  }
  return new cljs.core.async.impl.ioc_helpers.t439677(f, fn_handler, null)
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state)
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
  }catch(e439681) {
    if(e439681 instanceof Object) {
      var ex = e439681;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    }else {
      if("\ufdd0:else") {
        throw e439681;
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_439684_439686 = state;
    statearr_439684_439686[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_439684_439686[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_439685_439687 = state;
    statearr_439685_439687[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_439685_439687[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return"\ufdd0:recur"
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_439690_439692 = state;
    statearr_439690_439692[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_439690_439692[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_439691_439693 = state;
    statearr_439691_439693[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_439691_439693[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return"\ufdd0:recur"
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__439694) {
    var map__439699 = p__439694;
    var map__439699__$1 = cljs.core.seq_QMARK_.call(null, map__439699) ? cljs.core.apply.call(null, cljs.core.hash_map, map__439699) : map__439699;
    var opts = map__439699__$1;
    var statearr_439700_439703 = state;
    statearr_439700_439703[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_439701_439704 = state;
      statearr_439701_439704[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
    }, ports, opts);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_439702_439705 = state;
      statearr_439702_439705[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return"\ufdd0:recur"
    }else {
      return null
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__439694 = null;
    if(arguments.length > 3) {
      p__439694 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__439694)
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__439706) {
    var state = cljs.core.first(arglist__439706);
    arglist__439706 = cljs.core.next(arglist__439706);
    var cont_block = cljs.core.first(arglist__439706);
    arglist__439706 = cljs.core.next(arglist__439706);
    var ports = cljs.core.first(arglist__439706);
    var p__439694 = cljs.core.rest(arglist__439706);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__439694)
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if(value == null) {
  }else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null
    }))
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while(true) {
    if(cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__439671 = cnt + 1;
      cnt = G__439671;
      continue
    }else {
      return null
    }
    break
  }
};
goog.provide("cljs.core.async.impl.buffers.RingBuffer");
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core.async.impl.buffers/RingBuffer")
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if(self__.length === 0) {
    return null
  }else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if(self__.length + 1 === self__.arr.length) {
    this$.resize()
  }else {
  }
  return this$.unshift(x)
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if(self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr
  }else {
    if(self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr
    }else {
      if(self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__3306__auto__ = self__.length;
  var x = 0;
  while(true) {
    if(x < n__3306__auto__) {
      var v_439672 = this$.pop();
      if(keep_QMARK_.call(null, v_439672)) {
        this$.unshift(v_439672)
      }else {
      }
      var G__439673 = x + 1;
      x = G__439673;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr)
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if(n > 0) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ">", ">", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n))
};
goog.provide("cljs.core.async.impl.buffers.FixedBuffer");
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core.async.impl.buffers/FixedBuffer")
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length === self__.n
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(cljs.core.not.call(null, this$.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(this$))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n)
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.DroppingBuffer");
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core.async.impl.buffers/DroppingBuffer")
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    return null
  }else {
    return self__.buf.unshift(itm)
  }
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n)
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.SlidingBuffer");
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core.async.impl.buffers/SlidingBuffer")
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    this$.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(this$)
  }else {
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n)
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_439660 = 0;
  while(true) {
    var m_439661 = cljs.core.async.impl.dispatch.tasks.pop();
    if(m_439661 == null) {
    }else {
      m_439661.call(null);
      if(count_439660 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__439662 = count_439660 + 1;
        count_439660 = G__439662;
        continue
      }else {
      }
    }
    break
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if(cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
  }else {
    return null
  }
};
if(typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null)
  }
}else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_
    }else {
      return and__3941__auto__
    }
  }())) {
    return null
  }else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if(typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0)
    }else {
      if(typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages)
      }else {
        if("\ufdd0:else") {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay)
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if(void 0 === cljs.core.async.impl.channels.t439666) {
    goog.provide("cljs.core.async.impl.channels.t439666");
    cljs.core.async.impl.channels.t439666 = function(val, box, meta439667) {
      this.val = val;
      this.box = box;
      this.meta439667 = meta439667;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984
    };
    cljs.core.async.impl.channels.t439666.cljs$lang$type = true;
    cljs.core.async.impl.channels.t439666.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t439666";
    cljs.core.async.impl.channels.t439666.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
      return cljs.core._write.call(null, writer__3070__auto__, "cljs.core.async.impl.channels/t439666")
    };
    cljs.core.async.impl.channels.t439666.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      return self__.val
    };
    cljs.core.async.impl.channels.t439666.prototype.cljs$core$IMeta$_meta$arity$1 = function(_439668) {
      var self__ = this;
      return self__.meta439667
    };
    cljs.core.async.impl.channels.t439666.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_439668, meta439667__$1) {
      var self__ = this;
      return new cljs.core.async.impl.channels.t439666(self__.val, self__.box, meta439667__$1)
    };
    cljs.core.async.impl.channels.__GT_t439666 = function __GT_t439666(val__$1, box__$1, meta439667) {
      return new cljs.core.async.impl.channels.t439666(val__$1, box__$1, meta439667)
    }
  }else {
  }
  return new cljs.core.async.impl.channels.t439666(val, box, null)
};
goog.provide("cljs.core.async.impl.channels.PutBox");
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3072__auto__, writer__3073__auto__, opts__3074__auto__) {
  return cljs.core._write.call(null, writer__3073__auto__, "cljs.core.async.impl.channels/PutBox")
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val)
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler)
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
goog.provide("cljs.core.async.impl.channels.ManyToManyChannel");
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core.async.impl.channels/ManyToManyChannel")
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  if(self__.closed) {
    return null
  }else {
    self__.closed = true;
    while(true) {
      var taker_439669 = self__.takes.pop();
      if(taker_439669 == null) {
      }else {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_439669)) {
          var take_cb_439670 = cljs.core.async.impl.protocols.commit.call(null, taker_439669);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_439670, taker_439669) {
            return function() {
              return take_cb_439670.call(null, null)
            }
          }(take_cb_439670, taker_439669))
        }else {
        }
        continue
      }
      break
    }
    return null
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  if(!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null
  }else {
    if(function() {
      var and__3941__auto__ = !(self__.buf == null);
      if(and__3941__auto__) {
        return cljs.core.count.call(null, self__.buf) > 0
      }else {
        return and__3941__auto__
      }
    }()) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf))
    }else {
      while(true) {
        var putter = self__.puts.pop();
        if(!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if(cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val)
          }else {
            continue
          }
        }else {
          if(self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null)
          }else {
            if(self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)
            }else {
              self__.dirty_takes = self__.dirty_takes + 1
            }
            if(self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            }else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "<", "<", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, "takes", 
              "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null
          }
        }
        break
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  if(!(val == null)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if(function() {
    var or__3943__auto__ = closed__$1;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)
    }
  }()) {
    return cljs.core.async.impl.channels.box.call(null, null)
  }else {
    while(true) {
      var taker = self__.takes.pop();
      if(!(taker == null)) {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val)
            }
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          continue
        }
      }else {
        if(!function() {
          var or__3943__auto__ = self__.buf == null;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf)
          }
        }()) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          if(self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)
          }else {
            self__.dirty_puts = self__.dirty_puts + 1
          }
          if(self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "<", "<", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null
        }
      }
      break
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed)
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null)
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0)
  };
  var random_level__1 = function(level) {
    while(true) {
      if(function() {
        var and__3941__auto__ = Math.random() < cljs.core.async.impl.timers.P;
        if(and__3941__auto__) {
          return level < cljs.core.async.impl.timers.MAX_LEVEL
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__439636 = level + 1;
        level = G__439636;
        continue
      }else {
        return level
      }
      break
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level
}();
goog.provide("cljs.core.async.impl.timers.SkipListNode");
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core.async.impl.timers/SkipListNode")
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward)
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level)
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_439637 = 0;
    while(true) {
      if(i_439637 < arr.length) {
        arr[i_439637] = null;
        var G__439638 = i_439637 + 1;
        i_439637 = G__439638;
        continue
      }else {
      }
      break
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr)
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null)
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while(true) {
      if(!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while(true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if(x_SINGLEQUOTE_.key < k) {
                var G__439639 = x_SINGLEQUOTE_;
                x__$1 = G__439639;
                continue
              }else {
                return x__$1
              }
            }else {
              return x__$1
            }
            break
          }
        }();
        if(update == null) {
        }else {
          update[level] = x__$1
        }
        var G__439640 = x__$1;
        var G__439641 = k;
        var G__439642 = level - 1;
        var G__439643 = update;
        x = G__439640;
        k = G__439641;
        level = G__439642;
        update = G__439643;
        continue
      }else {
        return x
      }
      break
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node
}();
goog.provide("cljs.core.async.impl.timers.SkipList");
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.core.async.impl.timers/SkipList")
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, false, function() {
      if(node == null) {
        return null
      }else {
        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([node.key, node.val], true), iter.call(null, node.forward[0]))
      }
    }, null)
  };
  return iter.call(null, self__.header.forward[0])
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    return x__$1.val = v
  }else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if(new_level > self__.level) {
      var i_439644 = self__.level + 1;
      while(true) {
        if(i_439644 <= new_level + 1) {
          update[i_439644] = self__.header;
          var G__439645 = i_439644 + 1;
          i_439644 = G__439645;
          continue
        }else {
        }
        break
      }
      self__.level = new_level
    }else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while(true) {
      if(i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2
      }else {
        return null
      }
      break
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    var i_439646 = 0;
    while(true) {
      if(i_439646 <= self__.level) {
        var links_439647 = update[i_439646].forward;
        if(links_439647[i_439646] === x__$1) {
          links_439647[i_439646] = x__$1.forward[i_439646];
          var G__439648 = i_439646 + 1;
          i_439646 = G__439648;
          continue
        }else {
          var G__439649 = i_439646 + 1;
          i_439646 = G__439649;
          continue
        }
      }else {
      }
      break
    }
    while(true) {
      if(function() {
        var and__3941__auto__ = self__.level > 0;
        if(and__3941__auto__) {
          return self__.header.forward[self__.level] == null
        }else {
          return and__3941__auto__
        }
      }()) {
        self__.level = self__.level - 1;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(x_SINGLEQUOTE_ == null) {
            return null
          }else {
            if(x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_
            }else {
              var G__439650 = x_SINGLEQUOTE_;
              x__$1 = G__439650;
              continue
            }
          }
          break
        }
      }();
      if(!(nx == null)) {
        var G__439651 = nx;
        var G__439652 = level__$1 - 1;
        x = G__439651;
        level__$1 = G__439652;
        continue
      }else {
        var G__439653 = x;
        var G__439654 = level__$1 - 1;
        x = G__439653;
        level__$1 = G__439654;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(!(x_SINGLEQUOTE_ == null)) {
            if(x_SINGLEQUOTE_.key > k) {
              return x__$1
            }else {
              var G__439655 = x_SINGLEQUOTE_;
              x__$1 = G__439655;
              continue
            }
          }else {
            if(level__$1 === 0) {
              return x__$1
            }else {
              return null
            }
          }
          break
        }
      }();
      if(cljs.core.truth_(nx)) {
        var G__439656 = nx;
        var G__439657 = level__$1 - 1;
        x = G__439656;
        level__$1 = G__439657;
        continue
      }else {
        var G__439658 = x;
        var G__439659 = level__$1 - 1;
        x = G__439658;
        level__$1 = G__439659;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level)
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0)
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = me;
    if(cljs.core.truth_(and__3941__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS
    }else {
      return and__3941__auto__
    }
  }()) ? me.val : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel)
    }, msecs);
    return timeout_channel
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.fn_handler = function fn_handler(f) {
  if(void 0 === cljs.core.async.t439610) {
    goog.provide("cljs.core.async.t439610");
    cljs.core.async.t439610 = function(f, fn_handler, meta439611) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta439611 = meta439611;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t439610.cljs$lang$type = true;
    cljs.core.async.t439610.cljs$lang$ctorStr = "cljs.core.async/t439610";
    cljs.core.async.t439610.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
      return cljs.core._write.call(null, writer__3070__auto__, "cljs.core.async/t439610")
    };
    cljs.core.async.t439610.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t439610.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.t439610.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.t439610.prototype.cljs$core$IMeta$_meta$arity$1 = function(_439612) {
      var self__ = this;
      return self__.meta439611
    };
    cljs.core.async.t439610.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_439612, meta439611__$1) {
      var self__ = this;
      return new cljs.core.async.t439610(self__.f, self__.fn_handler, meta439611__$1)
    };
    cljs.core.async.__GT_t439610 = function __GT_t439610(f__$1, fn_handler__$1, meta439611) {
      return new cljs.core.async.t439610(f__$1, fn_handler__$1, meta439611)
    }
  }else {
  }
  return new cljs.core.async.t439610(f, fn_handler, null)
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n)
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n)
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n)
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null)
  };
  var chan__1 = function(buf_or_n) {
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n === "number" ? cljs.core.async.buffer.call(null, buf_or_n) : buf_or_n)
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs)
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("<! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true)
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if(cljs.core.truth_(ret)) {
      var val_439613 = cljs.core.deref.call(null, ret);
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_439613)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_439613)
        })
      }
    }else {
    }
    return null
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_
}();
cljs.core.async.nop = function nop() {
  return null
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(">! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop)
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true)
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = ret;
      if(cljs.core.truth_(and__3941__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop)
      }else {
        return and__3941__auto__
      }
    }())) {
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, fn0)
      }
    }else {
    }
    return null
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port)
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__3306__auto___439614 = n;
  var x_439615 = 0;
  while(true) {
    if(x_439615 < n__3306__auto___439614) {
      a[x_439615] = 0;
      var G__439616 = x_439615 + 1;
      x_439615 = G__439616;
      continue
    }else {
    }
    break
  }
  var i = 1;
  while(true) {
    if(cljs.core._EQ_.call(null, i, n)) {
      return a
    }else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__439617 = i + 1;
      i = G__439617;
      continue
    }
    break
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if(void 0 === cljs.core.async.t439621) {
    goog.provide("cljs.core.async.t439621");
    cljs.core.async.t439621 = function(flag, alt_flag, meta439622) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta439622 = meta439622;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t439621.cljs$lang$type = true;
    cljs.core.async.t439621.cljs$lang$ctorStr = "cljs.core.async/t439621";
    cljs.core.async.t439621.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
      return cljs.core._write.call(null, writer__3070__auto__, "cljs.core.async/t439621")
    };
    cljs.core.async.t439621.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t439621.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.deref.call(null, self__.flag)
    };
    cljs.core.async.t439621.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true
    };
    cljs.core.async.t439621.prototype.cljs$core$IMeta$_meta$arity$1 = function(_439623) {
      var self__ = this;
      return self__.meta439622
    };
    cljs.core.async.t439621.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_439623, meta439622__$1) {
      var self__ = this;
      return new cljs.core.async.t439621(self__.flag, self__.alt_flag, meta439622__$1)
    };
    cljs.core.async.__GT_t439621 = function __GT_t439621(flag__$1, alt_flag__$1, meta439622) {
      return new cljs.core.async.t439621(flag__$1, alt_flag__$1, meta439622)
    }
  }else {
  }
  return new cljs.core.async.t439621(flag, alt_flag, null)
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if(void 0 === cljs.core.async.t439628) {
    goog.provide("cljs.core.async.t439628");
    cljs.core.async.t439628 = function(cb, flag, alt_handler, meta439629) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta439629 = meta439629;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t439628.cljs$lang$type = true;
    cljs.core.async.t439628.cljs$lang$ctorStr = "cljs.core.async/t439628";
    cljs.core.async.t439628.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
      return cljs.core._write.call(null, writer__3070__auto__, "cljs.core.async/t439628")
    };
    cljs.core.async.t439628.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t439628.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag)
    };
    cljs.core.async.t439628.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb
    };
    cljs.core.async.t439628.prototype.cljs$core$IMeta$_meta$arity$1 = function(_439630) {
      var self__ = this;
      return self__.meta439629
    };
    cljs.core.async.t439628.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_439630, meta439629__$1) {
      var self__ = this;
      return new cljs.core.async.t439628(self__.cb, self__.flag, self__.alt_handler, meta439629__$1)
    };
    cljs.core.async.__GT_t439628 = function __GT_t439628(cb__$1, flag__$1, alt_handler__$1, meta439629) {
      return new cljs.core.async.t439628(cb__$1, flag__$1, alt_handler__$1, meta439629)
    }
  }else {
  }
  return new cljs.core.async.t439628(cb, flag, alt_handler, null)
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword("\ufdd0:priority")).call(null, opts);
  var ret = function() {
    var i = 0;
    while(true) {
      if(i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, cljs.core.PersistentVector.fromArray([null, wport], true))
            }
          }(i, val, idx, port, wport, flag, n, idxs, priority)))
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__439624_SHARP_) {
            return fret.call(null, cljs.core.PersistentVector.fromArray([p1__439624_SHARP_, port], true))
          }
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if(cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([cljs.core.deref.call(null, vbox), function() {
            var or__3943__auto__ = wport;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return port
            }
          }()], true))
        }else {
          var G__439631 = i + 1;
          i = G__439631;
          continue
        }
      }else {
        return null
      }
      break
    }
  }();
  var or__3943__auto__ = ret;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    if(cljs.core.contains_QMARK_.call(null, opts, "\ufdd0:default")) {
      var temp__4092__auto__ = function() {
        var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if(cljs.core.truth_(and__3941__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag)
        }else {
          return and__3941__auto__
        }
      }();
      if(cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword("\ufdd0:default")).call(null, opts), "\ufdd0:default"], true))
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__439632) {
    var map__439634 = p__439632;
    var map__439634__$1 = cljs.core.seq_QMARK_.call(null, map__439634) ? cljs.core.apply.call(null, cljs.core.hash_map, map__439634) : map__439634;
    var opts = map__439634__$1;
    if(null) {
      return null
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__439632 = null;
    if(arguments.length > 1) {
      p__439632 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return alts_BANG___delegate.call(this, ports, p__439632)
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__439635) {
    var ports = cljs.core.first(arglist__439635);
    var p__439632 = cljs.core.rest(arglist__439635);
    return alts_BANG___delegate(ports, p__439632)
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_
}();
goog.provide("orchard.util.dom");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
orchard.util.dom.has_QMARK_ = function has_QMARK_(coll, k) {
  return!(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([k, null], true), coll) == null)
};
orchard.util.dom.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
HTMLCollection.prototype.cljs$core$ICounted$ = true;
HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.length
};
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  return orchard.util.dom.lazy_nl_via_item.call(null, this$)
};
HTMLCollection.prototype.cljs$core$IIndexed$ = true;
HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  return this$.item(n)
};
HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var or__3943__auto__ = this$.item(n);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return not_found
  }
};
NodeList.prototype.cljs$core$IIndexed$ = true;
NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  return this$.item(n)
};
NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var or__3943__auto__ = this$.item(n);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return not_found
  }
};
NodeList.prototype.cljs$core$ICounted$ = true;
NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.length
};
NodeList.prototype.cljs$core$ISeqable$ = true;
NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  return orchard.util.dom.lazy_nl_via_item.call(null, this$)
};
orchard.util.dom.$$ = function() {
  var $$ = null;
  var $$__1 = function(query) {
    return $$.call(null, query, null)
  };
  var $$__2 = function(query, elem) {
    var elem__$1 = function() {
      var or__3943__auto__ = elem;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return document
      }
    }();
    var res = elem__$1.querySelectorAll(cljs.core.name.call(null, query));
    return res
  };
  $$ = function(query, elem) {
    switch(arguments.length) {
      case 1:
        return $$__1.call(this, query);
      case 2:
        return $$__2.call(this, query, elem)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  $$.cljs$core$IFn$_invoke$arity$1 = $$__1;
  $$.cljs$core$IFn$_invoke$arity$2 = $$__2;
  return $$
}();
orchard.util.dom.$ = function() {
  var $ = null;
  var $__1 = function(query) {
    return $.call(null, query, null)
  };
  var $__2 = function(query, elem) {
    var elem__$1 = function() {
      var or__3943__auto__ = elem;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return document
      }
    }();
    var res = elem__$1.querySelector(cljs.core.name.call(null, query));
    return res
  };
  $ = function(query, elem) {
    switch(arguments.length) {
      case 1:
        return $__1.call(this, query);
      case 2:
        return $__2.call(this, query, elem)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  $.cljs$core$IFn$_invoke$arity$1 = $__1;
  $.cljs$core$IFn$_invoke$arity$2 = $__2;
  return $
}();
orchard.util.dom.by_id = function by_id(id) {
  return $([cljs.core.str("#"), cljs.core.str(id)].join(""))
};
orchard.util.dom.by_tag = function by_tag(tag) {
  return cljs.core.js__GT_clj.call(null, document.getElementsByTagName(cljs.core.name.call(null, tag)))
};
orchard.util.dom.by_class = function by_class(class$) {
  return $([cljs.core.str("."), cljs.core.str(class$)].join(""))
};
orchard.util.dom.append = function append(parent, child) {
  parent.appendChild(child);
  return parent
};
orchard.util.dom.add_class = function add_class(elem, class$) {
  if(cljs.core.truth_(elem)) {
    return elem.classList.add(cljs.core.name.call(null, class$))
  }else {
    return null
  }
};
orchard.util.dom.add_id = function add_id(elem, id) {
  if(cljs.core.truth_(elem)) {
    return elem["id"] = cljs.core.name.call(null, id)
  }else {
    return null
  }
};
orchard.util.dom.remove_class = function remove_class(elem, class$) {
  if(cljs.core.truth_(elem)) {
    return elem.classList.remove(cljs.core.name.call(null, class$))
  }else {
    return null
  }
};
orchard.util.dom.has_class_QMARK_ = function has_class_QMARK_(elem, class$) {
  if(cljs.core.truth_(elem)) {
    return elem.classList.contains(cljs.core.name.call(null, class$))
  }else {
    return null
  }
};
orchard.util.dom.toggle_class = function toggle_class(elem, class$) {
  if(cljs.core.truth_(orchard.util.dom.has_class_QMARK_.call(null, elem, class$))) {
    return orchard.util.dom.remove_class.call(null, elem, class$)
  }else {
    return orchard.util.dom.add_class.call(null, elem, class$)
  }
};
orchard.util.dom.set_css = function set_css(elem, things) {
  var seq__438343 = cljs.core.seq.call(null, things);
  var chunk__438344 = null;
  var count__438345 = 0;
  var i__438346 = 0;
  while(true) {
    if(i__438346 < count__438345) {
      var vec__438347 = cljs.core._nth.call(null, chunk__438344, i__438346);
      var k = cljs.core.nth.call(null, vec__438347, 0, null);
      var v = cljs.core.nth.call(null, vec__438347, 1, null);
      elem.style[cljs.core.name.call(null, k)] = cljs.core.keyword_QMARK_.call(null, v) ? cljs.core.name.call(null, v) : v;
      var G__438349 = seq__438343;
      var G__438350 = chunk__438344;
      var G__438351 = count__438345;
      var G__438352 = i__438346 + 1;
      seq__438343 = G__438349;
      chunk__438344 = G__438350;
      count__438345 = G__438351;
      i__438346 = G__438352;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__438343);
      if(temp__4092__auto__) {
        var seq__438343__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__438343__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__438343__$1);
          var G__438353 = cljs.core.chunk_rest.call(null, seq__438343__$1);
          var G__438354 = c__3259__auto__;
          var G__438355 = cljs.core.count.call(null, c__3259__auto__);
          var G__438356 = 0;
          seq__438343 = G__438353;
          chunk__438344 = G__438354;
          count__438345 = G__438355;
          i__438346 = G__438356;
          continue
        }else {
          var vec__438348 = cljs.core.first.call(null, seq__438343__$1);
          var k = cljs.core.nth.call(null, vec__438348, 0, null);
          var v = cljs.core.nth.call(null, vec__438348, 1, null);
          elem.style[cljs.core.name.call(null, k)] = cljs.core.keyword_QMARK_.call(null, v) ? cljs.core.name.call(null, v) : v;
          var G__438357 = cljs.core.next.call(null, seq__438343__$1);
          var G__438358 = null;
          var G__438359 = 0;
          var G__438360 = 0;
          seq__438343 = G__438357;
          chunk__438344 = G__438358;
          count__438345 = G__438359;
          i__438346 = G__438360;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
orchard.util.dom.css = function css(elem, things) {
  var things__$1 = cljs.core._EQ_.call(null, Object, cljs.core.type.call(null, things)) ? cljs.core.js__GT_clj.call(null, things) : things;
  if(cljs.core.map_QMARK_.call(null, things__$1)) {
    return orchard.util.dom.set_css.call(null, elem, things__$1)
  }else {
    return elem.style[cljs.core.name.call(null, things__$1)]
  }
};
orchard.util.dom.set_attr = function set_attr(elem, things) {
  var seq__438367 = cljs.core.seq.call(null, things);
  var chunk__438368 = null;
  var count__438369 = 0;
  var i__438370 = 0;
  while(true) {
    if(i__438370 < count__438369) {
      var vec__438371 = cljs.core._nth.call(null, chunk__438368, i__438370);
      var k = cljs.core.nth.call(null, vec__438371, 0, null);
      var v = cljs.core.nth.call(null, vec__438371, 1, null);
      elem.setAttribute(cljs.core.name.call(null, k), cljs.core.keyword_QMARK_.call(null, v) ? cljs.core.name.call(null, v) : v);
      var G__438373 = seq__438367;
      var G__438374 = chunk__438368;
      var G__438375 = count__438369;
      var G__438376 = i__438370 + 1;
      seq__438367 = G__438373;
      chunk__438368 = G__438374;
      count__438369 = G__438375;
      i__438370 = G__438376;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__438367);
      if(temp__4092__auto__) {
        var seq__438367__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__438367__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__438367__$1);
          var G__438377 = cljs.core.chunk_rest.call(null, seq__438367__$1);
          var G__438378 = c__3259__auto__;
          var G__438379 = cljs.core.count.call(null, c__3259__auto__);
          var G__438380 = 0;
          seq__438367 = G__438377;
          chunk__438368 = G__438378;
          count__438369 = G__438379;
          i__438370 = G__438380;
          continue
        }else {
          var vec__438372 = cljs.core.first.call(null, seq__438367__$1);
          var k = cljs.core.nth.call(null, vec__438372, 0, null);
          var v = cljs.core.nth.call(null, vec__438372, 1, null);
          elem.setAttribute(cljs.core.name.call(null, k), cljs.core.keyword_QMARK_.call(null, v) ? cljs.core.name.call(null, v) : v);
          var G__438381 = cljs.core.next.call(null, seq__438367__$1);
          var G__438382 = null;
          var G__438383 = 0;
          var G__438384 = 0;
          seq__438367 = G__438381;
          chunk__438368 = G__438382;
          count__438369 = G__438383;
          i__438370 = G__438384;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
orchard.util.dom.attr = function attr(elem, things) {
  if(cljs.core.map_QMARK_.call(null, things)) {
    return orchard.util.dom.set_attr.call(null, elem, things)
  }else {
    return elem.getAttribute(cljs.core.name.call(null, things))
  }
};
orchard.util.dom.parent = function parent(elem) {
  return elem.parentNode
};
orchard.util.dom.children = function children(elem) {
  return elem.children
};
orchard.util.dom.remove = function remove(elem) {
  return orchard.util.dom.parent.call(null, elem).removeChild(elem)
};
orchard.util.dom.empty = function empty(elem) {
  while(true) {
    if(cljs.core.seq.call(null, elem.children)) {
      elem.removeChild(elem.children[0]);
      continue
    }else {
      return null
    }
    break
  }
};
orchard.util.dom.val = function() {
  var val__delegate = function(elem, p__438385) {
    var vec__438387 = p__438385;
    var v = cljs.core.nth.call(null, vec__438387, 0, null);
    if(cljs.core.not.call(null, v)) {
      return elem.value
    }else {
      return elem.value = v
    }
  };
  var val = function(elem, var_args) {
    var p__438385 = null;
    if(arguments.length > 1) {
      p__438385 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return val__delegate.call(this, elem, p__438385)
  };
  val.cljs$lang$maxFixedArity = 1;
  val.cljs$lang$applyTo = function(arglist__438388) {
    var elem = cljs.core.first(arglist__438388);
    var p__438385 = cljs.core.rest(arglist__438388);
    return val__delegate(elem, p__438385)
  };
  val.cljs$core$IFn$_invoke$arity$variadic = val__delegate;
  return val
}();
orchard.util.dom.siblings = function siblings(elem) {
  return orchard.util.dom.parent.call(null, elem).children
};
orchard.util.dom.parents = function parents(elem, sel) {
  var root = orchard.util.dom.parent.call(null, orchard.util.dom.$.call(null, "\ufdd0:body", document));
  var p = orchard.util.dom.parent.call(null, elem);
  while(true) {
    if(cljs.core._EQ_.call(null, p, root)) {
      return null
    }else {
      if(cljs.core.truth_(p.webkitMatchesSelector(cljs.core.name.call(null, sel)))) {
        return p
      }else {
        var G__438389 = orchard.util.dom.parent.call(null, p);
        p = G__438389;
        continue
      }
    }
    break
  }
};
orchard.util.dom.next = function next(elem) {
  return elem.nextElementSibling
};
orchard.util.dom.before = function before(elem, neue) {
  return orchard.util.dom.parent.call(null, elem).insertBefore(neue, elem)
};
orchard.util.dom.after = function after(elem, neue) {
  return orchard.util.dom.before.call(null, orchard.util.dom.next.call(null, elem), neue)
};
orchard.util.dom.replace_with = function replace_with(orig, neue) {
  var temp__4092__auto__ = orchard.util.dom.parent.call(null, orig);
  if(cljs.core.truth_(temp__4092__auto__)) {
    var p = temp__4092__auto__;
    return p.replaceChild(neue, orig)
  }else {
    return null
  }
};
orchard.util.dom.height = function height(elem) {
  return elem.clientHeight
};
orchard.util.dom.width = function width(elem) {
  return elem.clientWidth
};
orchard.util.dom.offset_top = function offset_top(elem) {
  return elem.offsetTop
};
orchard.util.dom.scroll_top = function() {
  var scroll_top__delegate = function(elem, p__438390) {
    var vec__438392 = p__438390;
    var v = cljs.core.nth.call(null, vec__438392, 0, null);
    if(cljs.core.not.call(null, v)) {
      return elem.scrollTop
    }else {
      return elem.scrollTop = v
    }
  };
  var scroll_top = function(elem, var_args) {
    var p__438390 = null;
    if(arguments.length > 1) {
      p__438390 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return scroll_top__delegate.call(this, elem, p__438390)
  };
  scroll_top.cljs$lang$maxFixedArity = 1;
  scroll_top.cljs$lang$applyTo = function(arglist__438393) {
    var elem = cljs.core.first(arglist__438393);
    var p__438390 = cljs.core.rest(arglist__438393);
    return scroll_top__delegate(elem, p__438390)
  };
  scroll_top.cljs$core$IFn$_invoke$arity$variadic = scroll_top__delegate;
  return scroll_top
}();
orchard.util.dom.top = function top(elem) {
  return orchard.util.dom.css.call(null, elem, "\ufdd0:top")
};
orchard.util.dom.bottom = function bottom(elem) {
  return orchard.util.dom.css.call(null, elem, "\ufdd0:bottom")
};
orchard.util.dom.left = function left(elem) {
  return orchard.util.dom.css.call(null, elem, "\ufdd0:left")
};
orchard.util.dom.right = function right(elem) {
  return orchard.util.dom.css.call(null, elem, "\ufdd0:right")
};
orchard.util.dom.html = function() {
  var html__delegate = function(elem, p__438394) {
    var vec__438396 = p__438394;
    var h = cljs.core.nth.call(null, vec__438396, 0, null);
    if(cljs.core.not.call(null, h)) {
      return elem.innerHTML
    }else {
      return elem.innerHTML = h
    }
  };
  var html = function(elem, var_args) {
    var p__438394 = null;
    if(arguments.length > 1) {
      p__438394 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return html__delegate.call(this, elem, p__438394)
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__438397) {
    var elem = cljs.core.first(arglist__438397);
    var p__438394 = cljs.core.rest(arglist__438397);
    return html__delegate(elem, p__438394)
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html
}();
orchard.util.dom.__GT_event = function __GT_event(ev) {
  return[cljs.core.str(cljs.core.name.call(null, ev))].join("")
};
orchard.util.dom.make = function make(str) {
  var d = document.createElement("div");
  orchard.util.dom.html.call(null, d, str);
  return orchard.util.dom.children.call(null, d)
};
orchard.util.dom.index = function index(e) {
  var p = orchard.util.dom.parent.call(null, e);
  var c = orchard.util.dom.children.call(null, p);
  var len = c.length;
  var i = 0;
  while(true) {
    if(i >= len) {
      return null
    }else {
      if(cljs.core._EQ_.call(null, c[i], e)) {
        return i
      }else {
        var G__438398 = i + 1;
        i = G__438398;
        continue
      }
    }
    break
  }
};
orchard.util.dom.module_element = function module_element(module) {
  return orchard.util.dom.$.call(null, [cljs.core.str("#module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, module)))].join(""))
};
orchard.util.dom.scroll_to_end = function scroll_to_end(scrollable_elem) {
  return scrollable_elem.scrollTop = scrollable_elem.scrollHeight
};
orchard.util.dom.prevent = function prevent(e) {
  return e.preventDefault()
};
orchard.util.dom.stop_propagation = function stop_propagation(e) {
  return e.stopPropagation()
};
orchard.util.dom.trigger = function trigger(elem, ev) {
  var e = document.createEvent("HTMLEvents");
  e.initEvent(cljs.core.name.call(null, ev), true, true);
  return elem.dispatchEvent(e)
};
orchard.util.dom.on_event = function on_event(elem, event, cb) {
  return elem.addEventListener(orchard.util.dom.__GT_event.call(null, event), cb)
};
orchard.util.dom.clear_event = function clear_event(elem, ev, cb) {
  return elem.removeEventListener(orchard.util.dom.__GT_event.call(null, ev), cb)
};
orchard.util.dom.on_event_STAR_ = function on_event_STAR_(elem, evs) {
  var seq__438405 = cljs.core.seq.call(null, evs);
  var chunk__438406 = null;
  var count__438407 = 0;
  var i__438408 = 0;
  while(true) {
    if(i__438408 < count__438407) {
      var vec__438409 = cljs.core._nth.call(null, chunk__438406, i__438408);
      var ev = cljs.core.nth.call(null, vec__438409, 0, null);
      var cb = cljs.core.nth.call(null, vec__438409, 1, null);
      elem.addEventListener(orchard.util.dom.__GT_event.call(null, ev), cb);
      var G__438411 = seq__438405;
      var G__438412 = chunk__438406;
      var G__438413 = count__438407;
      var G__438414 = i__438408 + 1;
      seq__438405 = G__438411;
      chunk__438406 = G__438412;
      count__438407 = G__438413;
      i__438408 = G__438414;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__438405);
      if(temp__4092__auto__) {
        var seq__438405__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__438405__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__438405__$1);
          var G__438415 = cljs.core.chunk_rest.call(null, seq__438405__$1);
          var G__438416 = c__3259__auto__;
          var G__438417 = cljs.core.count.call(null, c__3259__auto__);
          var G__438418 = 0;
          seq__438405 = G__438415;
          chunk__438406 = G__438416;
          count__438407 = G__438417;
          i__438408 = G__438418;
          continue
        }else {
          var vec__438410 = cljs.core.first.call(null, seq__438405__$1);
          var ev = cljs.core.nth.call(null, vec__438410, 0, null);
          var cb = cljs.core.nth.call(null, vec__438410, 1, null);
          elem.addEventListener(orchard.util.dom.__GT_event.call(null, ev), cb);
          var G__438419 = cljs.core.next.call(null, seq__438405__$1);
          var G__438420 = null;
          var G__438421 = 0;
          var G__438422 = 0;
          seq__438405 = G__438419;
          chunk__438406 = G__438420;
          count__438407 = G__438421;
          i__438408 = G__438422;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
orchard.util.dom.active_element = function active_element() {
  return document.activeElement
};
orchard.util.dom.focus = function focus(elem) {
  return elem.focus()
};
orchard.util.dom.on_doc_ready = function on_doc_ready(func) {
  return orchard.util.dom.on_event.call(null, document, "\ufdd0:DOMContentLoaded", func)
};
orchard.util.dom.window_width = function window_width() {
  return window["innerWidth"]
};
orchard.util.dom.set_frame_title = function set_frame_title(title) {
  return document["title"] = title
};
orchard.util.dom.data_attr = function data_attr(elem, k) {
  var ks = cljs.core.seq_QMARK_.call(null, k) ? k : cljs.core.PersistentVector.fromArray([k], true);
  var dataset = elem.dataset;
  var values = cljs.core.js__GT_clj.call(null, cljs.core.reduce.call(null, function(ks, dataset) {
    return function(values, k__$1) {
      return cljs.core.conj.call(null, values, dataset[cljs.core.name.call(null, k__$1)])
    }
  }(ks, dataset), cljs.core.PersistentVector.EMPTY, ks));
  return cljs.core.js__GT_clj.call(null, JSON.parse(cljs.core._EQ_.call(null, cljs.core.count.call(null, values), 1) ? cljs.core.first.call(null, values) : values))
};
orchard.util.dom.set_data_attr_BANG_ = function() {
  var set_data_attr_BANG___delegate = function(elem, opts) {
    var dataset = elem.dataset;
    var seq__438429_438435 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.flatten.call(null, opts)));
    var chunk__438430_438436 = null;
    var count__438431_438437 = 0;
    var i__438432_438438 = 0;
    while(true) {
      if(i__438432_438438 < count__438431_438437) {
        var vec__438433_438439 = cljs.core._nth.call(null, chunk__438430_438436, i__438432_438438);
        var k_438440 = cljs.core.nth.call(null, vec__438433_438439, 0, null);
        var v_438441 = cljs.core.nth.call(null, vec__438433_438439, 1, null);
        dataset[cljs.core.name.call(null, k_438440)] = JSON.stringify(cljs.core.clj__GT_js.call(null, v_438441));
        var G__438442 = seq__438429_438435;
        var G__438443 = chunk__438430_438436;
        var G__438444 = count__438431_438437;
        var G__438445 = i__438432_438438 + 1;
        seq__438429_438435 = G__438442;
        chunk__438430_438436 = G__438443;
        count__438431_438437 = G__438444;
        i__438432_438438 = G__438445;
        continue
      }else {
        var temp__4092__auto___438446 = cljs.core.seq.call(null, seq__438429_438435);
        if(temp__4092__auto___438446) {
          var seq__438429_438447__$1 = temp__4092__auto___438446;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__438429_438447__$1)) {
            var c__3259__auto___438448 = cljs.core.chunk_first.call(null, seq__438429_438447__$1);
            var G__438449 = cljs.core.chunk_rest.call(null, seq__438429_438447__$1);
            var G__438450 = c__3259__auto___438448;
            var G__438451 = cljs.core.count.call(null, c__3259__auto___438448);
            var G__438452 = 0;
            seq__438429_438435 = G__438449;
            chunk__438430_438436 = G__438450;
            count__438431_438437 = G__438451;
            i__438432_438438 = G__438452;
            continue
          }else {
            var vec__438434_438453 = cljs.core.first.call(null, seq__438429_438447__$1);
            var k_438454 = cljs.core.nth.call(null, vec__438434_438453, 0, null);
            var v_438455 = cljs.core.nth.call(null, vec__438434_438453, 1, null);
            dataset[cljs.core.name.call(null, k_438454)] = JSON.stringify(cljs.core.clj__GT_js.call(null, v_438455));
            var G__438456 = cljs.core.next.call(null, seq__438429_438447__$1);
            var G__438457 = null;
            var G__438458 = 0;
            var G__438459 = 0;
            seq__438429_438435 = G__438456;
            chunk__438430_438436 = G__438457;
            count__438431_438437 = G__438458;
            i__438432_438438 = G__438459;
            continue
          }
        }else {
        }
      }
      break
    }
    return cljs.core.js__GT_clj.call(null, dataset)
  };
  var set_data_attr_BANG_ = function(elem, var_args) {
    var opts = null;
    if(arguments.length > 1) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_data_attr_BANG___delegate.call(this, elem, opts)
  };
  set_data_attr_BANG_.cljs$lang$maxFixedArity = 1;
  set_data_attr_BANG_.cljs$lang$applyTo = function(arglist__438460) {
    var elem = cljs.core.first(arglist__438460);
    var opts = cljs.core.rest(arglist__438460);
    return set_data_attr_BANG___delegate(elem, opts)
  };
  set_data_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_data_attr_BANG___delegate;
  return set_data_attr_BANG_
}();
orchard.util.dom.element = function element(s) {
  return document.createElement(cljs.core.name.call(null, s))
};
orchard.util.dom.observer_chan = function() {
  var observer_chan__delegate = function(target, options) {
    var c = cljs.core.async.chan.call(null, 10);
    var opts = cljs.core.reduce.call(null, function(c) {
      return function(p1__438461_SHARP_, p2__438462_SHARP_) {
        return cljs.core.assoc.call(null, p1__438461_SHARP_, p2__438462_SHARP_, true)
      }
    }(c), cljs.core.PersistentArrayMap.EMPTY, options);
    var opts__$1 = cljs.core.assoc.call(null, opts, "attributes", (new cljs.core.Keyword("\ufdd0:attrs")).call(null, opts));
    var opts__$2 = cljs.core.assoc.call(null, opts__$1, "childList", (new cljs.core.Keyword("\ufdd0:children")).call(null, opts__$1));
    var opts__$3 = cljs.core.assoc.call(null, opts__$2, "characterData", (new cljs.core.Keyword("\ufdd0:text")).call(null, opts__$2));
    var handler = function(mutations) {
      var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__4864__auto__) {
        return function() {
          var f__4865__auto__ = function() {
            var switch__4792__auto__ = function(c__4864__auto__) {
              return function(state_438576) {
                var state_val_438577 = state_438576[1];
                if(state_val_438577 === 1) {
                  var inst_438537 = cljs.core.seq.call(null, mutations);
                  var inst_438538 = inst_438537;
                  var inst_438539 = null;
                  var inst_438540 = 0;
                  var inst_438541 = 0;
                  var state_438576__$1 = function() {
                    var statearr_438578 = state_438576;
                    statearr_438578[5] = inst_438540;
                    statearr_438578[6] = inst_438539;
                    statearr_438578[7] = inst_438538;
                    statearr_438578[8] = inst_438541;
                    return statearr_438578
                  }();
                  var statearr_438579_438603 = state_438576__$1;
                  statearr_438579_438603[2] = null;
                  statearr_438579_438603[1] = 2;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_438577 === 2) {
                    var inst_438540 = state_438576[5];
                    var inst_438541 = state_438576[8];
                    var inst_438543 = inst_438541 < inst_438540;
                    var inst_438544 = inst_438543;
                    var state_438576__$1 = state_438576;
                    if(cljs.core.truth_(inst_438544)) {
                      var statearr_438580_438604 = state_438576__$1;
                      statearr_438580_438604[1] = 4
                    }else {
                      var statearr_438581_438605 = state_438576__$1;
                      statearr_438581_438605[1] = 5
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_438577 === 3) {
                      var inst_438574 = state_438576[2];
                      var state_438576__$1 = state_438576;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_438576__$1, inst_438574)
                    }else {
                      if(state_val_438577 === 4) {
                        var inst_438539 = state_438576[6];
                        var inst_438541 = state_438576[8];
                        var inst_438546 = cljs.core._nth.call(null, inst_438539, inst_438541);
                        var state_438576__$1 = state_438576;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_438576__$1, 7, inst_438546, c)
                      }else {
                        if(state_val_438577 === 5) {
                          var inst_438552 = state_438576[9];
                          var inst_438538 = state_438576[7];
                          var inst_438552__$1 = cljs.core.seq.call(null, inst_438538);
                          var state_438576__$1 = function() {
                            var statearr_438585 = state_438576;
                            statearr_438585[9] = inst_438552__$1;
                            return statearr_438585
                          }();
                          if(inst_438552__$1) {
                            var statearr_438586_438606 = state_438576__$1;
                            statearr_438586_438606[1] = 8
                          }else {
                            var statearr_438587_438607 = state_438576__$1;
                            statearr_438587_438607[1] = 9
                          }
                          return"\ufdd0:recur"
                        }else {
                          if(state_val_438577 === 6) {
                            var inst_438572 = state_438576[2];
                            var state_438576__$1 = state_438576;
                            var statearr_438588_438608 = state_438576__$1;
                            statearr_438588_438608[2] = inst_438572;
                            statearr_438588_438608[1] = 3;
                            return"\ufdd0:recur"
                          }else {
                            if(state_val_438577 === 7) {
                              var inst_438540 = state_438576[5];
                              var inst_438539 = state_438576[6];
                              var inst_438538 = state_438576[7];
                              var inst_438541 = state_438576[8];
                              var inst_438548 = state_438576[2];
                              var inst_438549 = inst_438541 + 1;
                              var tmp438582 = inst_438540;
                              var tmp438583 = inst_438539;
                              var tmp438584 = inst_438538;
                              var inst_438538__$1 = tmp438584;
                              var inst_438539__$1 = tmp438583;
                              var inst_438540__$1 = tmp438582;
                              var inst_438541__$1 = inst_438549;
                              var state_438576__$1 = function() {
                                var statearr_438589 = state_438576;
                                statearr_438589[10] = inst_438548;
                                statearr_438589[5] = inst_438540__$1;
                                statearr_438589[6] = inst_438539__$1;
                                statearr_438589[7] = inst_438538__$1;
                                statearr_438589[8] = inst_438541__$1;
                                return statearr_438589
                              }();
                              var statearr_438590_438609 = state_438576__$1;
                              statearr_438590_438609[2] = null;
                              statearr_438590_438609[1] = 2;
                              return"\ufdd0:recur"
                            }else {
                              if(state_val_438577 === 8) {
                                var inst_438552 = state_438576[9];
                                var inst_438554 = cljs.core.chunked_seq_QMARK_.call(null, inst_438552);
                                var state_438576__$1 = state_438576;
                                if(inst_438554) {
                                  var statearr_438591_438610 = state_438576__$1;
                                  statearr_438591_438610[1] = 11
                                }else {
                                  var statearr_438592_438611 = state_438576__$1;
                                  statearr_438592_438611[1] = 12
                                }
                                return"\ufdd0:recur"
                              }else {
                                if(state_val_438577 === 9) {
                                  var state_438576__$1 = state_438576;
                                  var statearr_438593_438612 = state_438576__$1;
                                  statearr_438593_438612[2] = null;
                                  statearr_438593_438612[1] = 10;
                                  return"\ufdd0:recur"
                                }else {
                                  if(state_val_438577 === 10) {
                                    var inst_438570 = state_438576[2];
                                    var state_438576__$1 = state_438576;
                                    var statearr_438594_438613 = state_438576__$1;
                                    statearr_438594_438613[2] = inst_438570;
                                    statearr_438594_438613[1] = 6;
                                    return"\ufdd0:recur"
                                  }else {
                                    if(state_val_438577 === 11) {
                                      var inst_438552 = state_438576[9];
                                      var inst_438556 = cljs.core.chunk_first.call(null, inst_438552);
                                      var inst_438557 = cljs.core.chunk_rest.call(null, inst_438552);
                                      var inst_438558 = cljs.core.count.call(null, inst_438556);
                                      var inst_438538 = inst_438557;
                                      var inst_438539 = inst_438556;
                                      var inst_438540 = inst_438558;
                                      var inst_438541 = 0;
                                      var state_438576__$1 = function() {
                                        var statearr_438595 = state_438576;
                                        statearr_438595[5] = inst_438540;
                                        statearr_438595[6] = inst_438539;
                                        statearr_438595[7] = inst_438538;
                                        statearr_438595[8] = inst_438541;
                                        return statearr_438595
                                      }();
                                      var statearr_438596_438614 = state_438576__$1;
                                      statearr_438596_438614[2] = null;
                                      statearr_438596_438614[1] = 2;
                                      return"\ufdd0:recur"
                                    }else {
                                      if(state_val_438577 === 12) {
                                        var inst_438552 = state_438576[9];
                                        var inst_438561 = cljs.core.first.call(null, inst_438552);
                                        var state_438576__$1 = state_438576;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_438576__$1, 14, inst_438561, c)
                                      }else {
                                        if(state_val_438577 === 13) {
                                          var inst_438567 = state_438576[2];
                                          var state_438576__$1 = state_438576;
                                          var statearr_438597_438615 = state_438576__$1;
                                          statearr_438597_438615[2] = inst_438567;
                                          statearr_438597_438615[1] = 10;
                                          return"\ufdd0:recur"
                                        }else {
                                          if(state_val_438577 === 14) {
                                            var inst_438552 = state_438576[9];
                                            var inst_438563 = state_438576[2];
                                            var inst_438564 = cljs.core.next.call(null, inst_438552);
                                            var inst_438538 = inst_438564;
                                            var inst_438539 = null;
                                            var inst_438540 = 0;
                                            var inst_438541 = 0;
                                            var state_438576__$1 = function() {
                                              var statearr_438598 = state_438576;
                                              statearr_438598[11] = inst_438563;
                                              statearr_438598[5] = inst_438540;
                                              statearr_438598[6] = inst_438539;
                                              statearr_438598[7] = inst_438538;
                                              statearr_438598[8] = inst_438541;
                                              return statearr_438598
                                            }();
                                            var statearr_438599_438616 = state_438576__$1;
                                            statearr_438599_438616[2] = null;
                                            statearr_438599_438616[1] = 2;
                                            return"\ufdd0:recur"
                                          }else {
                                            return null
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }(c__4864__auto__);
            return function(switch__4792__auto__, c__4864__auto__) {
              return function() {
                var state_machine__4793__auto__ = null;
                var state_machine__4793__auto____0 = function() {
                  var statearr_438601 = new Array(12);
                  statearr_438601[0] = state_machine__4793__auto__;
                  statearr_438601[1] = 1;
                  return statearr_438601
                };
                var state_machine__4793__auto____1 = function(state_438576) {
                  while(true) {
                    var result__4794__auto__ = switch__4792__auto__.call(null, state_438576);
                    if(result__4794__auto__ === "\ufdd0:recur") {
                      continue
                    }else {
                      return result__4794__auto__
                    }
                    break
                  }
                };
                state_machine__4793__auto__ = function(state_438576) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__4793__auto____0.call(this);
                    case 1:
                      return state_machine__4793__auto____1.call(this, state_438576)
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
                state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
                return state_machine__4793__auto__
              }()
            }(switch__4792__auto__, c__4864__auto__)
          }();
          var state__4866__auto__ = function() {
            var statearr_438602 = f__4865__auto__.call(null);
            statearr_438602[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
            return statearr_438602
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
        }
      }(c__4864__auto__));
      return c__4864__auto__
    };
    var observer = new MutationObserver(handler);
    var config = cljs.core.clj__GT_js.call(null, opts__$3);
    observer.observe(target, config);
    return cljs.core.PersistentVector.fromArray([observer, c], true)
  };
  var observer_chan = function(target, var_args) {
    var options = null;
    if(arguments.length > 1) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return observer_chan__delegate.call(this, target, options)
  };
  observer_chan.cljs$lang$maxFixedArity = 1;
  observer_chan.cljs$lang$applyTo = function(arglist__438617) {
    var target = cljs.core.first(arglist__438617);
    var options = cljs.core.rest(arglist__438617);
    return observer_chan__delegate(target, options)
  };
  observer_chan.cljs$core$IFn$_invoke$arity$variadic = observer_chan__delegate;
  return observer_chan
}();
orchard.util.dom.stop_observer_BANG_ = function stop_observer_BANG_(observer) {
  return observer.disconnect()
};
orchard.util.dom.child_of = function child_of(c, p) {
  if(cljs.core.truth_(c)) {
    var parent = c.parentNode;
    while(true) {
      if(cljs.core._EQ_.call(null, parent, p)) {
        return true
      }else {
        if(cljs.core.truth_(parent)) {
          var G__438619 = parent.parentNode;
          parent = G__438619;
          continue
        }else {
          return false
        }
      }
      break
    }
  }else {
    return false
  }
};
orchard.util.dom.find = function find(c, p) {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = c;
    if(cljs.core.truth_(and__3941__auto__)) {
      return p
    }else {
      return and__3941__auto__
    }
  }())) {
    var elems = p.querySelectorAll(orchard.util.core.node__GT_tag.call(null, c));
    return cljs.core.first.call(null, cljs.core.filter.call(null, function(p1__438618_SHARP_) {
      return cljs.core._EQ_.call(null, c, p1__438618_SHARP_)
    }, elems))
  }else {
    return null
  }
};
goog.provide("goog.date.DateLike");
goog.date.DateLike;
goog.provide("goog.i18n.TimeZone");
goog.require("goog.array");
goog.require("goog.date.DateLike");
goog.require("goog.string");
goog.i18n.TimeZone = function() {
  this.timeZoneId_;
  this.standardOffset_;
  this.tzNames_;
  this.transitions_
};
goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_ = 3600 * 1E3;
goog.i18n.TimeZone.NameType = {STD_SHORT_NAME:0, STD_LONG_NAME:1, DLT_SHORT_NAME:2, DLT_LONG_NAME:3};
goog.i18n.TimeZone.createTimeZone = function(timeZoneData) {
  if(typeof timeZoneData == "number") {
    return goog.i18n.TimeZone.createSimpleTimeZone_(timeZoneData)
  }
  var tz = new goog.i18n.TimeZone;
  tz.timeZoneId_ = timeZoneData["id"];
  tz.standardOffset_ = -timeZoneData["std_offset"];
  tz.tzNames_ = timeZoneData["names"];
  tz.transitions_ = timeZoneData["transitions"];
  return tz
};
goog.i18n.TimeZone.createSimpleTimeZone_ = function(timeZoneOffsetInMinutes) {
  var tz = new goog.i18n.TimeZone;
  tz.standardOffset_ = timeZoneOffsetInMinutes;
  tz.timeZoneId_ = goog.i18n.TimeZone.composePosixTimeZoneID_(timeZoneOffsetInMinutes);
  var str = goog.i18n.TimeZone.composeUTCString_(timeZoneOffsetInMinutes);
  tz.tzNames_ = [str, str];
  tz.transitions_ = [];
  return tz
};
goog.i18n.TimeZone.composeGMTString_ = function(offset) {
  var parts = ["GMT"];
  parts.push(offset <= 0 ? "+" : "-");
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), ":", goog.string.padNumber(offset % 60, 2));
  return parts.join("")
};
goog.i18n.TimeZone.composePosixTimeZoneID_ = function(offset) {
  if(offset == 0) {
    return"Etc/GMT"
  }
  var parts = ["Etc/GMT", offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if(offset != 0) {
    parts.push(":", goog.string.padNumber(offset, 2))
  }
  return parts.join("")
};
goog.i18n.TimeZone.composeUTCString_ = function(offset) {
  if(offset == 0) {
    return"UTC"
  }
  var parts = ["UTC", offset < 0 ? "+" : "-"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if(offset != 0) {
    parts.push(":", offset)
  }
  return parts.join("")
};
goog.i18n.TimeZone.prototype.getTimeZoneData = function() {
  return{"id":this.timeZoneId_, "std_offset":-this.standardOffset_, "names":goog.array.clone(this.tzNames_), "transitions":goog.array.clone(this.transitions_)}
};
goog.i18n.TimeZone.prototype.getDaylightAdjustment = function(date) {
  var timeInMs = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes());
  var timeInHours = timeInMs / goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_;
  var index = 0;
  while(index < this.transitions_.length && timeInHours >= this.transitions_[index]) {
    index += 2
  }
  return index == 0 ? 0 : this.transitions_[index - 1]
};
goog.i18n.TimeZone.prototype.getGMTString = function(date) {
  return goog.i18n.TimeZone.composeGMTString_(this.getOffset(date))
};
goog.i18n.TimeZone.prototype.getLongName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_LONG_NAME : goog.i18n.TimeZone.NameType.STD_LONG_NAME]
};
goog.i18n.TimeZone.prototype.getOffset = function(date) {
  return this.standardOffset_ - this.getDaylightAdjustment(date)
};
goog.i18n.TimeZone.prototype.getRFCTimeZoneString = function(date) {
  var offset = -this.getOffset(date);
  var parts = [offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), goog.string.padNumber(offset % 60, 2));
  return parts.join("")
};
goog.i18n.TimeZone.prototype.getShortName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_SHORT_NAME : goog.i18n.TimeZone.NameType.STD_SHORT_NAME]
};
goog.i18n.TimeZone.prototype.getTimeZoneId = function() {
  return this.timeZoneId_
};
goog.i18n.TimeZone.prototype.isDaylightTime = function(date) {
  return this.getDaylightAdjustment(date) > 0
};
goog.provide("goog.i18n.DateTimeFormat");
goog.provide("goog.i18n.DateTimeFormat.Format");
goog.require("goog.asserts");
goog.require("goog.date.DateLike");
goog.require("goog.i18n.DateTimeSymbols");
goog.require("goog.i18n.TimeZone");
goog.require("goog.string");
goog.i18n.DateTimeFormat = function(pattern) {
  goog.asserts.assert(goog.isDef(pattern), "Pattern must be defined");
  this.patternParts_ = [];
  if(typeof pattern == "number") {
    this.applyStandardPattern_(pattern)
  }else {
    this.applyPattern_(pattern)
  }
};
goog.i18n.DateTimeFormat.Format = {FULL_DATE:0, LONG_DATE:1, MEDIUM_DATE:2, SHORT_DATE:3, FULL_TIME:4, LONG_TIME:5, MEDIUM_TIME:6, SHORT_TIME:7, FULL_DATETIME:8, LONG_DATETIME:9, MEDIUM_DATETIME:10, SHORT_DATETIME:11};
goog.i18n.DateTimeFormat.TOKENS_ = [/^\'(?:[^\']|\'\')*\'/, /^(?:G+|y+|M+|k+|S+|E+|a+|h+|K+|H+|c+|L+|Q+|d+|m+|s+|v+|z+|Z+)/, /^[^\'GyMkSEahKHcLQdmsvzZ]+/];
goog.i18n.DateTimeFormat.PartTypes_ = {QUOTED_STRING:0, FIELD:1, LITERAL:2};
goog.i18n.DateTimeFormat.prototype.applyPattern_ = function(pattern) {
  while(pattern) {
    for(var i = 0;i < goog.i18n.DateTimeFormat.TOKENS_.length;++i) {
      var m = pattern.match(goog.i18n.DateTimeFormat.TOKENS_[i]);
      if(m) {
        var part = m[0];
        pattern = pattern.substring(part.length);
        if(i == goog.i18n.DateTimeFormat.PartTypes_.QUOTED_STRING) {
          if(part == "''") {
            part = "'"
          }else {
            part = part.substring(1, part.length - 1);
            part = part.replace(/\'\'/, "'")
          }
        }
        this.patternParts_.push({text:part, type:i});
        break
      }
    }
  }
};
goog.i18n.DateTimeFormat.prototype.format = function(date, opt_timeZone) {
  var diff = opt_timeZone ? (date.getTimezoneOffset() - opt_timeZone.getOffset(date)) * 6E4 : 0;
  var dateForDate = diff ? new Date(date.getTime() + diff) : date;
  var dateForTime = dateForDate;
  if(opt_timeZone && dateForDate.getTimezoneOffset() != date.getTimezoneOffset()) {
    diff += diff > 0 ? -24 * 60 * 6E4 : 24 * 60 * 6E4;
    dateForTime = new Date(date.getTime() + diff)
  }
  var out = [];
  for(var i = 0;i < this.patternParts_.length;++i) {
    var text = this.patternParts_[i].text;
    if(goog.i18n.DateTimeFormat.PartTypes_.FIELD == this.patternParts_[i].type) {
      out.push(this.formatField_(text, date, dateForDate, dateForTime, opt_timeZone))
    }else {
      out.push(text)
    }
  }
  return out.join("")
};
goog.i18n.DateTimeFormat.prototype.applyStandardPattern_ = function(formatType) {
  var pattern;
  if(formatType < 4) {
    pattern = goog.i18n.DateTimeSymbols.DATEFORMATS[formatType]
  }else {
    if(formatType < 8) {
      pattern = goog.i18n.DateTimeSymbols.TIMEFORMATS[formatType - 4]
    }else {
      if(formatType < 12) {
        pattern = goog.i18n.DateTimeSymbols.DATEFORMATS[formatType - 8] + " " + goog.i18n.DateTimeSymbols.TIMEFORMATS[formatType - 8]
      }else {
        this.applyStandardPattern_(goog.i18n.DateTimeFormat.Format.MEDIUM_DATETIME);
        return
      }
    }
  }
  this.applyPattern_(pattern)
};
goog.i18n.DateTimeFormat.prototype.localizeNumbers_ = function(input) {
  if(goog.i18n.DateTimeSymbols.ZERODIGIT === undefined) {
    return input
  }
  var parts = [];
  for(var i = 0;i < input.length;i++) {
    var c = input.charCodeAt(i);
    parts.push(48 <= c && c <= 57 ? String.fromCharCode(goog.i18n.DateTimeSymbols.ZERODIGIT + c - 48) : input.charAt(i))
  }
  return parts.join("")
};
goog.i18n.DateTimeFormat.prototype.formatEra_ = function(count, date) {
  var value = date.getFullYear() > 0 ? 1 : 0;
  return count >= 4 ? goog.i18n.DateTimeSymbols.ERANAMES[value] : goog.i18n.DateTimeSymbols.ERAS[value]
};
goog.i18n.DateTimeFormat.prototype.formatYear_ = function(count, date) {
  var value = date.getFullYear();
  if(value < 0) {
    value = -value
  }
  return this.localizeNumbers_(count == 2 ? goog.string.padNumber(value % 100, 2) : String(value))
};
goog.i18n.DateTimeFormat.prototype.formatMonth_ = function(count, date) {
  var value = date.getMonth();
  switch(count) {
    case 5:
      return goog.i18n.DateTimeSymbols.NARROWMONTHS[value];
    case 4:
      return goog.i18n.DateTimeSymbols.MONTHS[value];
    case 3:
      return goog.i18n.DateTimeSymbols.SHORTMONTHS[value];
    default:
      return this.localizeNumbers_(goog.string.padNumber(value + 1, count))
  }
};
goog.i18n.DateTimeFormat.prototype.format24Hours_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getHours() || 24, count))
};
goog.i18n.DateTimeFormat.prototype.formatFractionalSeconds_ = function(count, date) {
  var value = date.getTime() % 1E3 / 1E3;
  return this.localizeNumbers_(value.toFixed(Math.min(3, count)).substr(2) + (count > 3 ? goog.string.padNumber(0, count - 3) : ""))
};
goog.i18n.DateTimeFormat.prototype.formatDayOfWeek_ = function(count, date) {
  var value = date.getDay();
  return count >= 4 ? goog.i18n.DateTimeSymbols.WEEKDAYS[value] : goog.i18n.DateTimeSymbols.SHORTWEEKDAYS[value]
};
goog.i18n.DateTimeFormat.prototype.formatAmPm_ = function(count, date) {
  var hours = date.getHours();
  return goog.i18n.DateTimeSymbols.AMPMS[hours >= 12 && hours < 24 ? 1 : 0]
};
goog.i18n.DateTimeFormat.prototype.format1To12Hours_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getHours() % 12 || 12, count))
};
goog.i18n.DateTimeFormat.prototype.format0To11Hours_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getHours() % 12, count))
};
goog.i18n.DateTimeFormat.prototype.format0To23Hours_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getHours(), count))
};
goog.i18n.DateTimeFormat.prototype.formatStandaloneDay_ = function(count, date) {
  var value = date.getDay();
  switch(count) {
    case 5:
      return goog.i18n.DateTimeSymbols.STANDALONENARROWWEEKDAYS[value];
    case 4:
      return goog.i18n.DateTimeSymbols.STANDALONEWEEKDAYS[value];
    case 3:
      return goog.i18n.DateTimeSymbols.STANDALONESHORTWEEKDAYS[value];
    default:
      return this.localizeNumbers_(goog.string.padNumber(value, 1))
  }
};
goog.i18n.DateTimeFormat.prototype.formatStandaloneMonth_ = function(count, date) {
  var value = date.getMonth();
  switch(count) {
    case 5:
      return goog.i18n.DateTimeSymbols.STANDALONENARROWMONTHS[value];
    case 4:
      return goog.i18n.DateTimeSymbols.STANDALONEMONTHS[value];
    case 3:
      return goog.i18n.DateTimeSymbols.STANDALONESHORTMONTHS[value];
    default:
      return this.localizeNumbers_(goog.string.padNumber(value + 1, count))
  }
};
goog.i18n.DateTimeFormat.prototype.formatQuarter_ = function(count, date) {
  var value = Math.floor(date.getMonth() / 3);
  return count < 4 ? goog.i18n.DateTimeSymbols.SHORTQUARTERS[value] : goog.i18n.DateTimeSymbols.QUARTERS[value]
};
goog.i18n.DateTimeFormat.prototype.formatDate_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getDate(), count))
};
goog.i18n.DateTimeFormat.prototype.formatMinutes_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getMinutes(), count))
};
goog.i18n.DateTimeFormat.prototype.formatSeconds_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getSeconds(), count))
};
goog.i18n.DateTimeFormat.prototype.formatTimeZoneRFC_ = function(count, date, opt_timeZone) {
  opt_timeZone = opt_timeZone || goog.i18n.TimeZone.createTimeZone(date.getTimezoneOffset());
  return count < 4 ? opt_timeZone.getRFCTimeZoneString(date) : this.localizeNumbers_(opt_timeZone.getGMTString(date))
};
goog.i18n.DateTimeFormat.prototype.formatTimeZone_ = function(count, date, opt_timeZone) {
  opt_timeZone = opt_timeZone || goog.i18n.TimeZone.createTimeZone(date.getTimezoneOffset());
  return count < 4 ? opt_timeZone.getShortName(date) : opt_timeZone.getLongName(date)
};
goog.i18n.DateTimeFormat.prototype.formatTimeZoneId_ = function(date, opt_timeZone) {
  opt_timeZone = opt_timeZone || goog.i18n.TimeZone.createTimeZone(date.getTimezoneOffset());
  return opt_timeZone.getTimeZoneId()
};
goog.i18n.DateTimeFormat.prototype.formatField_ = function(patternStr, date, dateForDate, dateForTime, opt_timeZone) {
  var count = patternStr.length;
  switch(patternStr.charAt(0)) {
    case "G":
      return this.formatEra_(count, dateForDate);
    case "y":
      return this.formatYear_(count, dateForDate);
    case "M":
      return this.formatMonth_(count, dateForDate);
    case "k":
      return this.format24Hours_(count, dateForTime);
    case "S":
      return this.formatFractionalSeconds_(count, dateForTime);
    case "E":
      return this.formatDayOfWeek_(count, dateForDate);
    case "a":
      return this.formatAmPm_(count, dateForTime);
    case "h":
      return this.format1To12Hours_(count, dateForTime);
    case "K":
      return this.format0To11Hours_(count, dateForTime);
    case "H":
      return this.format0To23Hours_(count, dateForTime);
    case "c":
      return this.formatStandaloneDay_(count, dateForDate);
    case "L":
      return this.formatStandaloneMonth_(count, dateForDate);
    case "Q":
      return this.formatQuarter_(count, dateForDate);
    case "d":
      return this.formatDate_(count, dateForDate);
    case "m":
      return this.formatMinutes_(count, dateForTime);
    case "s":
      return this.formatSeconds_(count, dateForTime);
    case "v":
      return this.formatTimeZoneId_(date, opt_timeZone);
    case "z":
      return this.formatTimeZone_(count, date, opt_timeZone);
    case "Z":
      return this.formatTimeZoneRFC_(count, date, opt_timeZone);
    default:
      return""
  }
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__3128__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = clojure.browser.event.event_types[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = clojure.browser.event.event_types["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__440933) {
    var vec__440934 = p__440933;
    var k = cljs.core.nth.call(null, vec__440934, 0, null);
    var v = cljs.core.nth.call(null, vec__440934, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k.toLowerCase()), v], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__440935) {
    var vec__440936 = p__440935;
    var k = cljs.core.nth.call(null, vec__440936, 0, null);
    var v = cljs.core.nth.call(null, vec__440936, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k.toLowerCase()), v], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen.cljs$core$IFn$_invoke$arity$3 = listen__3;
  listen.cljs$core$IFn$_invoke$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once.cljs$core$IFn$_invoke$arity$3 = listen_once__3;
  listen_once.cljs$core$IFn$_invoke$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$3 = unlisten__3;
  unlisten.cljs$core$IFn$_invoke$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_)
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if(scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  var domain = this.getDomain();
  if(domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if(userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if(port != null) {
      out.push(":", String(port))
    }
  }
  var path = this.getPath();
  if(path) {
    if(this.hasDomain() && path.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_))
  }
  var query = this.getEncodedQuery();
  if(query) {
    out.push("?", query)
  }
  var fragment = this.getFragment();
  if(fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_))
  }
  return out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if(goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_)
  }
  return null
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if(!goog.isArray(value)) {
      queryData.add(key, value)
    }else {
      queryData.setValues(key, value)
    }
  }
  return queryData
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if(!values) {
    this.keyMap_.set(key, values = [])
  }
  values.push(value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for(var j = 0;j < val.length;j++) {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if(opt_key) {
    if(this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)))
    }
  }else {
    var values = this.keyMap_.getValues();
    for(var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if(goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default
  }else {
    return values.length > 0 ? String(values[0]) : opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if(values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for(var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if(val[j] !== "") {
        param += "=" + goog.string.urlEncode(val[j])
      }
      sb.push(param)
    }
  }
  return this.encodedQuery_ = sb.join("&")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString())
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CancelledError");
goog.provide("goog.async.Deferred.UnhandledError");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_canceller, opt_defaultScope) {
  this.chain_ = [];
  this.canceller_ = opt_canceller;
  this.defaultScope_ = opt_defaultScope || null
};
goog.async.Deferred.prototype.fired_ = false;
goog.async.Deferred.prototype.hadError_ = false;
goog.async.Deferred.prototype.result_;
goog.async.Deferred.prototype.paused_ = 0;
goog.async.Deferred.prototype.silentlyCancelled_ = false;
goog.async.Deferred.prototype.chained_ = false;
goog.async.Deferred.prototype.unhandledExceptionTimeoutId_;
goog.async.Deferred.prototype.parent_;
goog.async.Deferred.prototype.branches_ = 0;
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if(!this.hasFired()) {
    if(this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if(opt_deepCancel) {
        parent.cancel(opt_deepCancel)
      }else {
        parent.branchCancel_()
      }
    }
    if(this.canceller_) {
      this.canceller_.call(this.defaultScope_, this)
    }else {
      this.silentlyCancelled_ = true
    }
    if(!this.hasFired()) {
      this.errback(new goog.async.Deferred.CancelledError(this))
    }
  }else {
    if(this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel()
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if(this.branches_ <= 0) {
    this.cancel()
  }
};
goog.async.Deferred.prototype.pause_ = function() {
  this.paused_++
};
goog.async.Deferred.prototype.unpause_ = function() {
  this.paused_--;
  if(this.paused_ == 0 && this.hasFired()) {
    this.fire_()
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.resback_(isSuccess, res);
  this.unpause_()
};
goog.async.Deferred.prototype.resback_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_()
};
goog.async.Deferred.prototype.check_ = function() {
  if(this.hasFired()) {
    if(!this.silentlyCancelled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCancelled_ = false
  }
};
goog.async.Deferred.prototype.callback = function(result) {
  this.check_();
  this.assertNotDeferred_(result);
  this.resback_(true, result)
};
goog.async.Deferred.prototype.errback = function(result) {
  this.check_();
  this.assertNotDeferred_(result);
  this.resback_(false, result)
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "Deferred instances can only be chained if they are the result of a " + "callback")
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope)
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope)
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.chained_, "Chained Deferreds can not be re-used");
  this.chain_.push([cb, eb, opt_scope]);
  if(this.hasFired()) {
    this.fire_()
  }
  return this
};
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred))
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if(opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++
  }
  return d
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope)
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.chain_, function(chainRow) {
    return goog.isFunction(chainRow[1])
  })
};
goog.async.Deferred.prototype.fire_ = function() {
  if(this.unhandledExceptionTimeoutId_ && this.hasFired() && this.hasErrback_()) {
    goog.global.clearTimeout(this.unhandledExceptionTimeoutId_);
    delete this.unhandledExceptionTimeoutId_
  }
  if(this.parent_) {
    this.parent_.branches_--;
    delete this.parent_
  }
  var res = this.result_;
  var unhandledException = false;
  var isChained = false;
  while(this.chain_.length && this.paused_ == 0) {
    var chainEntry = this.chain_.shift();
    var callback = chainEntry[0];
    var errback = chainEntry[1];
    var scope = chainEntry[2];
    var f = this.hadError_ ? errback : callback;
    if(f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if(goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret
        }
        if(res instanceof goog.async.Deferred) {
          isChained = true;
          this.pause_()
        }
      }catch(ex) {
        res = ex;
        this.hadError_ = true;
        if(!this.hasErrback_()) {
          unhandledException = true
        }
      }
    }
  }
  this.result_ = res;
  if(isChained && this.paused_) {
    res.addCallbacks(goog.bind(this.continue_, this, true), goog.bind(this.continue_, this, false));
    res.chained_ = true
  }
  if(unhandledException) {
    this.unhandledExceptionTimeoutId_ = goog.global.setTimeout(function() {
      throw new goog.async.Deferred.UnhandledError(res);
    }, 0)
  }
};
goog.async.Deferred.succeed = function(res) {
  var d = new goog.async.Deferred;
  d.callback(res);
  return d
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d
};
goog.async.Deferred.cancelled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if(value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope)
  }else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope)
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Already called";
goog.async.Deferred.CancelledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred
};
goog.inherits(goog.async.Deferred.CancelledError, goog.debug.Error);
goog.async.Deferred.CancelledError.prototype.message = "Deferred was cancelled";
goog.async.Deferred.UnhandledError = function(cause) {
  goog.debug.Error.call(this);
  this.cause = cause;
  this.message = "Unhandled Error in Deferred: " + (cause.message || "[No message]")
};
goog.inherits(goog.async.Deferred.UnhandledError, goog.debug.Error);
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_)
};
goog.async.Delay.prototype.stop = function() {
  if(this.isActive()) {
    goog.Timer.clear(this.id_)
  }
  this.id_ = 0
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.Delay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if(this.listener_) {
    this.listener_.call(this.handler_)
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", 
FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", 
SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return classes.length == expectedCount
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  element.className = newClasses.join(" ");
  return newClasses.length == classes.length - args.length
};
goog.dom.classes.add_ = function(classes, args) {
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i])
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item)
  })
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math");
goog.require("goog.array");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if(d > 180) {
    d = d - 360
  }else {
    if(d <= -180) {
      d = 360 + d
    }
  }
  return d
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1]
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for(var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length1;j++) {
      if(compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1
      }else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while(i > 0 && j > 0) {
    if(compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--
    }else {
      if(arr[i - 1][j] > arr[i][j - 1]) {
        i--
      }else {
        j--
      }
    }
  }
  return result
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0)
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(sampleSize < 2) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y)
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector)
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.getParentElement = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? parent : null
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if(!opt_tag && !opt_class) {
    return null
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = []
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = type;
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_ || this, this);
  return this
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    if(listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key)
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_ || this, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.pollsBeforeReconnect_ = 5;
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.prototype.reconnectFrame_ = null;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.isChannelAvailable = function() {
  return!this.isDisposed() && this.channel_.isPeerAvailable()
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrames_ = function() {
  try {
    if(this.isChannelAvailable()) {
      return this.channel_.getPeerWindowObject().frames || {}
    }
  }catch(e) {
    goog.net.xpc.logger.fine("error retrieving peer frames")
  }
  return{}
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrame_ = function(frameName) {
  return this.getPeerFrames_()[frameName]
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if(!this.isChannelAvailable()) {
    return
  }
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.maybeInnerPeerReconnect_ = function() {
  if(this.reconnectFrame_ || this.pollsBeforeReconnect_-- > 0) {
    return
  }
  goog.net.xpc.logger.finest("Inner peer reconnect triggered.");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.getPeerFrames_();
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.maybeInnerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getMsgFrameName_()), goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getAckFrameName_()), goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.getPeerFrame_(frameName);
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.getPeerFrames_();
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.async.Deferred");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper, opt_oneSidedHandshake, opt_protocolVersion) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.protocolVersion_ = opt_protocolVersion || 2;
  goog.asserts.assert(this.protocolVersion_ >= 1);
  goog.asserts.assert(this.protocolVersion_ <= 2);
  this.peerHostname_ = peerHostname || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!opt_oneSidedHandshake;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  if(this.oneSidedHandshake_) {
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.connected_.awaitDeferred(this.setupAckReceived_)
    }else {
      this.connected_.awaitDeferred(this.setupAckSent_)
    }
  }else {
    this.connected_.awaitDeferred(this.setupAckReceived_);
    if(this.protocolVersion_ == 2) {
      this.connected_.awaitDeferred(this.setupAckSent_)
    }
  }
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(true);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.net.xpc.logger.info("NativeMessagingTransport created.  " + "protocolVersion=" + this.protocolVersion_ + ", oneSidedHandshake=" + this.oneSidedHandshake_ + ", role=" + this.channel_.getRole())
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(version) {
  return this.peerProtocolVersion_ == null || this.peerProtocolVersion_ == version
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if(!goog.isString(data)) {
    return false
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  var transportMessageType = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload)[0];
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && (transportMessageType == goog.net.xpc.SETUP || transportMessageType == goog.net.xpc.SETUP_NTPV2)) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  var transportParts = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload);
  var transportMessageType = transportParts[0];
  var peerEndpointId = transportParts[1];
  switch(transportMessageType) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      if(!this.setupAckReceived_.hasFired()) {
        this.setupAckReceived_.callback(true)
      }
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      if(this.protocolVersion_ == 2) {
        this.setPeerProtocolVersion_(2);
        if(!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true)
        }
      }
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      if(this.protocolVersion_ == 2) {
        var prevPeerProtocolVersion = this.peerProtocolVersion_;
        this.setPeerProtocolVersion_(2);
        this.sendSetupAckMessage_(2);
        if((prevPeerProtocolVersion == 1 || this.peerEndpointId_ != null) && this.peerEndpointId_ != peerEndpointId) {
          goog.net.xpc.logger.info("Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_()
        }
        this.peerEndpointId_ = peerEndpointId
      }
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(this.protocolVersion_ == 1 && this.peerProtocolVersion_ == 2));
  if(this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2)) {
    var payload = goog.net.xpc.SETUP_NTPV2;
    payload += goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload)
  }
  if(this.couldPeerVersionBe_(1)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(protocolVersion) {
  goog.asserts.assert(this.protocolVersion_ != 1 || protocolVersion != 2, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if(this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2) && protocolVersion == 2) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2)
  }else {
    if(this.couldPeerVersionBe_(1) && protocolVersion == 1) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_)
    }else {
      return
    }
  }
  if(!this.setupAckSent_.hasFired()) {
    this.setupAckSent_.callback(true)
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(version) {
  if(version > this.peerProtocolVersion_) {
    this.peerProtocolVersion_ = version
  }
  if(this.peerProtocolVersion_ == 1) {
    if(!this.setupAckSent_.hasFired() && !this.oneSidedHandshake_) {
      this.setupAckSent_.callback(true)
    }
    this.peerEndpointId_ = null
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.maybeAttemptToConnect_()
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var outerFrame = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  if(this.oneSidedHandshake_ && outerFrame || this.channel_.isConnected() || this.isDisposed()) {
    this.maybeAttemptToConnectTimer_.stop();
    return
  }
  this.maybeAttemptToConnectTimer_.start();
  this.sendSetupMessage_()
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  this.send = function(service, payload) {
    var transport = this;
    var channelName = this.channel_.name;
    var sendFunctor = function() {
      transport.sendTimerId_ = 0;
      try {
        var obj = win.postMessage ? win : win.document;
        if(!obj.postMessage) {
          goog.net.xpc.logger.warning("Peer window had no postMessage " + "function.");
          return
        }
        obj.postMessage(channelName + "|" + service + ":" + payload, transport.peerHostname_);
        goog.net.xpc.logger.fine("send(): service=" + service + " payload=" + payload + " to hostname=" + transport.peerHostname_)
      }catch(error) {
        goog.net.xpc.logger.warning("Error performing postMessage, ignoring.", error)
      }
    };
    this.sendTimerId_ = goog.Timer.callOnce(sendFunctor, 0)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  var delay = this.protocolVersion_ == 1 || this.peerProtocolVersion_ == 1 ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : undefined;
  this.channel_.notifyConnected(delay)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
  if(this.sendTimerId_) {
    goog.Timer.clear(this.sendTimerId_);
    this.sendTimerId_ = 0
  }
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.base(this, "disposeInternal")
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(payload) {
  var transportParts = payload.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_);
  transportParts[1] = transportParts[1] || null;
  return transportParts
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = {};
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener
  }catch(e) {
  }
  return isSupported
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  var deliveryHandler = function() {
    this.channel_.safeDeliver(serviceName, payload)
  };
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.async.Deferred");
goog.require("goog.async.Delay");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return!!this.peerWindowObject_ && !Boolean(this.peerWindowObject_.closed)
  }catch(e) {
    return false
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      var protocolVersion = this.cfg_[goog.net.xpc.CfgFields.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2;
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE], protocolVersion);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  peerCfg[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if(role) {
    peerCfg[goog.net.xpc.CfgFields.ROLE] = role == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  goog.net.xpc.logger.info("createPeerIframe()");
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.getDomHelper(parentElm).createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(undefined, this);
  var peerUri = this.getPeerUri(opt_addCfgParam);
  this.peerLoadHandler_.listenOnce(iframeElm, "load", this.peerWindowDeferred_.callback, false, this.peerWindowDeferred_);
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    window.setTimeout(goog.bind(function() {
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  if(this.peerWindowDeferred_) {
    this.peerWindowDeferred_.cancel();
    this.peerWindowDeferred_ = null
  }
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(opt_addCfgParam) {
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  return peerUri
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.peerWindowDeferred_) {
    this.peerWindowDeferred_.addCallback(this.continueConnection_)
  }else {
    this.continueConnection_()
  }
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.net.xpc.logger.info("continueConnection_()");
  this.peerWindowDeferred_ = null;
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == window.top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while(this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()()
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.transport_ = null;
  this.connectCb_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(opt_delay) {
  if(this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  goog.dispose(this.connectionDelay_);
  if(opt_delay) {
    this.connectionDelay_ = new goog.async.Delay(this.connectCb_, opt_delay);
    this.connectionDelay_.start()
  }else {
    this.connectionDelay_ = null;
    this.connectCb_()
  }
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = goog.net.xpc.CrossPageChannel.prototype.notifyConnected;
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(!this.isPeerAvailable()) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.safeDeliver = function(serviceName, payload, opt_origin) {
  this.deliver_(serviceName, payload, opt_origin)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(this.peerWindowDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.deliver_, this, serviceName, payload, opt_origin));
    return
  }
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if(role) {
    return role
  }else {
    return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER
  }
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.base(this, "disposeInternal")
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    goog.dispose(goog.net.xpc.channels_[name])
  }
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__440921) {
  var vec__440922 = p__440921;
  var k = cljs.core.nth.call(null, vec__440922, 0, null);
  var v = cljs.core.nth.call(null, vec__440922, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k.toLowerCase()), v], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.connect[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.connect["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.connect[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.connect["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.connect[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.connect["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.connect[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.connect["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  connect.cljs$core$IFn$_invoke$arity$1 = connect__1;
  connect.cljs$core$IFn$_invoke$arity$2 = connect__2;
  connect.cljs$core$IFn$_invoke$arity$3 = connect__3;
  connect.cljs$core$IFn$_invoke$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.transmit[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.transmit["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.transmit[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.transmit["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.transmit[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.transmit["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.transmit[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.transmit["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.transmit[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.transmit["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transmit.cljs$core$IFn$_invoke$arity$2 = transmit__2;
  transmit.cljs$core$IFn$_invoke$arity$3 = transmit__3;
  transmit.cljs$core$IFn$_invoke$arity$4 = transmit__4;
  transmit.cljs$core$IFn$_invoke$arity$5 = transmit__5;
  transmit.cljs$core$IFn$_invoke$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__3128__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = clojure.browser.net.close[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = clojure.browser.net.close["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__440923) {
    var vec__440924 = p__440923;
    var k = cljs.core.nth.call(null, vec__440924, 0, null);
    var v = cljs.core.nth.call(null, vec__440924, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k.toLowerCase()), v], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__440925) {
  var vec__440926 = p__440925;
  var k = cljs.core.nth.call(null, vec__440926, 0, null);
  var v = cljs.core.nth.call(null, vec__440926, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k.toLowerCase()), v], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.register_service[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.register_service["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__3128__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.register_service[goog.typeOf(x__3128__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.register_service["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  register_service.cljs$core$IFn$_invoke$arity$3 = register_service__3;
  register_service.cljs$core$IFn$_invoke$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__4092__auto__ = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__4092__auto__)) {
      var config = temp__4092__auto__;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__440930) {
      var vec__440931 = p__440930;
      var k = cljs.core.nth.call(null, vec__440931, 0, null);
      var v = cljs.core.nth.call(null, vec__440931, 1, null);
      var temp__4090__auto__ = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, k);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var field = temp__4090__auto__;
        var G__440932 = sum;
        G__440932[field] = v;
        return G__440932
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpc_connection.cljs$core$IFn$_invoke$arity$0 = xpc_connection__0;
  xpc_connection.cljs$core$IFn$_invoke$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__4090__auto__ = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var conn = temp__4090__auto__;
    return clojure.browser.net.transmit.call(null, conn, "\ufdd0:print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result = function() {
    try {
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:status", "\ufdd0:success", "\ufdd0:value", [cljs.core.str(eval(block))].join("")], true)
    }catch(e440920) {
      if(e440920 instanceof Error) {
        var e = e440920;
        return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:status", "\ufdd0:exception", "\ufdd0:value", cljs.core.pr_str.call(null, e), "\ufdd0:stacktrace", cljs.core.truth_(e.hasOwnProperty("stack")) ? e.stack : "No stacktrace available."], true)
      }else {
        if("\ufdd0:else") {
          throw e440920;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn, "\ufdd0:error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  send_print.cljs$core$IFn$_invoke$arity$2 = send_print__2;
  send_print.cljs$core$IFn$_invoke$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", t, "\ufdd0:content", data, "\ufdd0:order", cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)], true))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__4090__auto__ = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var repl_connection = temp__4090__auto__;
    var connection = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection, "\ufdd0:success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection, "\ufdd0:evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection, "\ufdd0:send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0:result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection, "\ufdd0:print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0:print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0:ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection = clojure.browser.net.xpc_connection.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:peer_uri", repl_server_url], true));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection));
  clojure.browser.net.register_service.call(null, repl_connection, "\ufdd0:evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection, "\ufdd0:send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0:else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__440898 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__440899 = limit__$1 - 1;
            var G__440900 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__440898;
            limit__$1 = G__440899;
            parts = G__440900;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(function() {
        var or__3943__auto__ = cljs.core._EQ_.call(null, ch, "\n");
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core._EQ_.call(null, ch, "\r")
        }
      }()) {
        var G__440901 = index - 1;
        index = G__440901;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4090__auto___440902 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4090__auto___440902)) {
        var replacement_440903 = temp__4090__auto___440902;
        buffer.append([cljs.core.str(replacement_440903)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__440904 = index + 1;
      index = G__440904;
      continue
    }
    break
  }
};
goog.provide("dommy.attrs");
goog.require("cljs.core");
goog.require("clojure.string");
dommy.attrs.class_match_QMARK_ = function class_match_QMARK_(class_name, class$, idx) {
  var and__3941__auto__ = function() {
    var or__3943__auto__ = idx === 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return" " === class_name.charAt(idx - 1)
    }
  }();
  if(cljs.core.truth_(and__3941__auto__)) {
    var total_len = class_name.length;
    var stop = idx + class$.length;
    if(stop <= total_len) {
      var or__3943__auto__ = stop === total_len;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return" " === class_name.charAt(stop)
      }
    }else {
      return null
    }
  }else {
    return and__3941__auto__
  }
};
dommy.attrs.class_index = function class_index(class_name, class$) {
  var start_from = 0;
  while(true) {
    var i = class_name.indexOf(class$, start_from);
    if(i >= 0) {
      if(dommy.attrs.class_match_QMARK_.call(null, class_name, class$, i)) {
        return i
      }else {
        var G__440582 = i + class$.length;
        start_from = G__440582;
        continue
      }
    }else {
      return null
    }
    break
  }
};
dommy.attrs.has_class_QMARK_ = function has_class_QMARK_(elem, class$) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var class$__$1 = cljs.core.name.call(null, class$);
  var temp__4090__auto__ = elem__$1.classList;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var class_list = temp__4090__auto__;
    return class_list.contains(class$__$1)
  }else {
    var temp__4092__auto__ = elem__$1.className;
    if(cljs.core.truth_(temp__4092__auto__)) {
      var class_name = temp__4092__auto__;
      var temp__4092__auto____$1 = dommy.attrs.class_index.call(null, class_name, class$__$1);
      if(cljs.core.truth_(temp__4092__auto____$1)) {
        var i = temp__4092__auto____$1;
        return i >= 0
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
dommy.attrs.add_class_BANG_ = function() {
  var add_class_BANG_ = null;
  var add_class_BANG___2 = function(elem, classes) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var classes__$1 = clojure.string.trim.call(null, cljs.core.name.call(null, classes));
    if(cljs.core.seq.call(null, classes__$1)) {
      var temp__4090__auto___440607 = elem__$1.classList;
      if(cljs.core.truth_(temp__4090__auto___440607)) {
        var class_list_440608 = temp__4090__auto___440607;
        var seq__440595_440609 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__440596_440610 = null;
        var count__440597_440611 = 0;
        var i__440598_440612 = 0;
        while(true) {
          if(i__440598_440612 < count__440597_440611) {
            var class_440613 = cljs.core._nth.call(null, chunk__440596_440610, i__440598_440612);
            class_list_440608.add(class_440613);
            var G__440614 = seq__440595_440609;
            var G__440615 = chunk__440596_440610;
            var G__440616 = count__440597_440611;
            var G__440617 = i__440598_440612 + 1;
            seq__440595_440609 = G__440614;
            chunk__440596_440610 = G__440615;
            count__440597_440611 = G__440616;
            i__440598_440612 = G__440617;
            continue
          }else {
            var temp__4092__auto___440618 = cljs.core.seq.call(null, seq__440595_440609);
            if(temp__4092__auto___440618) {
              var seq__440595_440619__$1 = temp__4092__auto___440618;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__440595_440619__$1)) {
                var c__3259__auto___440620 = cljs.core.chunk_first.call(null, seq__440595_440619__$1);
                var G__440621 = cljs.core.chunk_rest.call(null, seq__440595_440619__$1);
                var G__440622 = c__3259__auto___440620;
                var G__440623 = cljs.core.count.call(null, c__3259__auto___440620);
                var G__440624 = 0;
                seq__440595_440609 = G__440621;
                chunk__440596_440610 = G__440622;
                count__440597_440611 = G__440623;
                i__440598_440612 = G__440624;
                continue
              }else {
                var class_440625 = cljs.core.first.call(null, seq__440595_440619__$1);
                class_list_440608.add(class_440625);
                var G__440626 = cljs.core.next.call(null, seq__440595_440619__$1);
                var G__440627 = null;
                var G__440628 = 0;
                var G__440629 = 0;
                seq__440595_440609 = G__440626;
                chunk__440596_440610 = G__440627;
                count__440597_440611 = G__440628;
                i__440598_440612 = G__440629;
                continue
              }
            }else {
            }
          }
          break
        }
      }else {
        var class_name_440630 = elem__$1.className;
        var seq__440599_440631 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__440600_440632 = null;
        var count__440601_440633 = 0;
        var i__440602_440634 = 0;
        while(true) {
          if(i__440602_440634 < count__440601_440633) {
            var class_440635 = cljs.core._nth.call(null, chunk__440600_440632, i__440602_440634);
            if(cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_440630, class_440635))) {
            }else {
              elem__$1.className = class_name_440630 === "" ? class_440635 : [cljs.core.str(class_name_440630), cljs.core.str(" "), cljs.core.str(class_440635)].join("")
            }
            var G__440636 = seq__440599_440631;
            var G__440637 = chunk__440600_440632;
            var G__440638 = count__440601_440633;
            var G__440639 = i__440602_440634 + 1;
            seq__440599_440631 = G__440636;
            chunk__440600_440632 = G__440637;
            count__440601_440633 = G__440638;
            i__440602_440634 = G__440639;
            continue
          }else {
            var temp__4092__auto___440640 = cljs.core.seq.call(null, seq__440599_440631);
            if(temp__4092__auto___440640) {
              var seq__440599_440641__$1 = temp__4092__auto___440640;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__440599_440641__$1)) {
                var c__3259__auto___440642 = cljs.core.chunk_first.call(null, seq__440599_440641__$1);
                var G__440643 = cljs.core.chunk_rest.call(null, seq__440599_440641__$1);
                var G__440644 = c__3259__auto___440642;
                var G__440645 = cljs.core.count.call(null, c__3259__auto___440642);
                var G__440646 = 0;
                seq__440599_440631 = G__440643;
                chunk__440600_440632 = G__440644;
                count__440601_440633 = G__440645;
                i__440602_440634 = G__440646;
                continue
              }else {
                var class_440647 = cljs.core.first.call(null, seq__440599_440641__$1);
                if(cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_440630, class_440647))) {
                }else {
                  elem__$1.className = class_name_440630 === "" ? class_440647 : [cljs.core.str(class_name_440630), cljs.core.str(" "), cljs.core.str(class_440647)].join("")
                }
                var G__440648 = cljs.core.next.call(null, seq__440599_440641__$1);
                var G__440649 = null;
                var G__440650 = 0;
                var G__440651 = 0;
                seq__440599_440631 = G__440648;
                chunk__440600_440632 = G__440649;
                count__440601_440633 = G__440650;
                i__440602_440634 = G__440651;
                continue
              }
            }else {
            }
          }
          break
        }
      }
    }else {
    }
    return elem__$1
  };
  var add_class_BANG___3 = function() {
    var G__440652__delegate = function(elem, classes, more_classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__440603_440653 = cljs.core.seq.call(null, cljs.core.conj.call(null, more_classes, classes));
      var chunk__440604_440654 = null;
      var count__440605_440655 = 0;
      var i__440606_440656 = 0;
      while(true) {
        if(i__440606_440656 < count__440605_440655) {
          var c_440657 = cljs.core._nth.call(null, chunk__440604_440654, i__440606_440656);
          add_class_BANG_.call(null, elem__$1, c_440657);
          var G__440658 = seq__440603_440653;
          var G__440659 = chunk__440604_440654;
          var G__440660 = count__440605_440655;
          var G__440661 = i__440606_440656 + 1;
          seq__440603_440653 = G__440658;
          chunk__440604_440654 = G__440659;
          count__440605_440655 = G__440660;
          i__440606_440656 = G__440661;
          continue
        }else {
          var temp__4092__auto___440662 = cljs.core.seq.call(null, seq__440603_440653);
          if(temp__4092__auto___440662) {
            var seq__440603_440663__$1 = temp__4092__auto___440662;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__440603_440663__$1)) {
              var c__3259__auto___440664 = cljs.core.chunk_first.call(null, seq__440603_440663__$1);
              var G__440665 = cljs.core.chunk_rest.call(null, seq__440603_440663__$1);
              var G__440666 = c__3259__auto___440664;
              var G__440667 = cljs.core.count.call(null, c__3259__auto___440664);
              var G__440668 = 0;
              seq__440603_440653 = G__440665;
              chunk__440604_440654 = G__440666;
              count__440605_440655 = G__440667;
              i__440606_440656 = G__440668;
              continue
            }else {
              var c_440669 = cljs.core.first.call(null, seq__440603_440663__$1);
              add_class_BANG_.call(null, elem__$1, c_440669);
              var G__440670 = cljs.core.next.call(null, seq__440603_440663__$1);
              var G__440671 = null;
              var G__440672 = 0;
              var G__440673 = 0;
              seq__440603_440653 = G__440670;
              chunk__440604_440654 = G__440671;
              count__440605_440655 = G__440672;
              i__440606_440656 = G__440673;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__440652 = function(elem, classes, var_args) {
      var more_classes = null;
      if(arguments.length > 2) {
        more_classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__440652__delegate.call(this, elem, classes, more_classes)
    };
    G__440652.cljs$lang$maxFixedArity = 2;
    G__440652.cljs$lang$applyTo = function(arglist__440674) {
      var elem = cljs.core.first(arglist__440674);
      arglist__440674 = cljs.core.next(arglist__440674);
      var classes = cljs.core.first(arglist__440674);
      var more_classes = cljs.core.rest(arglist__440674);
      return G__440652__delegate(elem, classes, more_classes)
    };
    G__440652.cljs$core$IFn$_invoke$arity$variadic = G__440652__delegate;
    return G__440652
  }();
  add_class_BANG_ = function(elem, classes, var_args) {
    var more_classes = var_args;
    switch(arguments.length) {
      case 2:
        return add_class_BANG___2.call(this, elem, classes);
      default:
        return add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, classes, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_class_BANG_.cljs$lang$maxFixedArity = 2;
  add_class_BANG_.cljs$lang$applyTo = add_class_BANG___3.cljs$lang$applyTo;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$2 = add_class_BANG___2;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return add_class_BANG_
}();
dommy.attrs.remove_class_str = function remove_class_str(init_class_name, class$) {
  var class_name = init_class_name;
  while(true) {
    var class_len = class_name.length;
    var temp__4090__auto__ = dommy.attrs.class_index.call(null, class_name, class$);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var i = temp__4090__auto__;
      var G__440675 = function() {
        var end = i + class$.length;
        return[cljs.core.str(end < class_len ? [cljs.core.str(class_name.substring(0, i)), cljs.core.str(class_name.substr(end + 1))].join("") : class_name.substring(0, i - 1))].join("")
      }();
      class_name = G__440675;
      continue
    }else {
      return class_name
    }
    break
  }
};
dommy.attrs.remove_class_BANG_ = function() {
  var remove_class_BANG_ = null;
  var remove_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var class$__$1 = cljs.core.name.call(null, class$);
    var temp__4090__auto___440684 = elem__$1.classList;
    if(cljs.core.truth_(temp__4090__auto___440684)) {
      var class_list_440685 = temp__4090__auto___440684;
      class_list_440685.remove(class$__$1)
    }else {
      var class_name_440686 = elem__$1.className;
      var new_class_name_440687 = dommy.attrs.remove_class_str.call(null, class_name_440686, class$__$1);
      if(class_name_440686 === new_class_name_440687) {
      }else {
        elem__$1.className = new_class_name_440687
      }
    }
    return elem__$1
  };
  var remove_class_BANG___3 = function() {
    var G__440688__delegate = function(elem, class$, classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__440680 = cljs.core.seq.call(null, cljs.core.conj.call(null, classes, class$));
      var chunk__440681 = null;
      var count__440682 = 0;
      var i__440683 = 0;
      while(true) {
        if(i__440683 < count__440682) {
          var c = cljs.core._nth.call(null, chunk__440681, i__440683);
          remove_class_BANG_.call(null, elem__$1, c);
          var G__440689 = seq__440680;
          var G__440690 = chunk__440681;
          var G__440691 = count__440682;
          var G__440692 = i__440683 + 1;
          seq__440680 = G__440689;
          chunk__440681 = G__440690;
          count__440682 = G__440691;
          i__440683 = G__440692;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__440680);
          if(temp__4092__auto__) {
            var seq__440680__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__440680__$1)) {
              var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__440680__$1);
              var G__440693 = cljs.core.chunk_rest.call(null, seq__440680__$1);
              var G__440694 = c__3259__auto__;
              var G__440695 = cljs.core.count.call(null, c__3259__auto__);
              var G__440696 = 0;
              seq__440680 = G__440693;
              chunk__440681 = G__440694;
              count__440682 = G__440695;
              i__440683 = G__440696;
              continue
            }else {
              var c = cljs.core.first.call(null, seq__440680__$1);
              remove_class_BANG_.call(null, elem__$1, c);
              var G__440697 = cljs.core.next.call(null, seq__440680__$1);
              var G__440698 = null;
              var G__440699 = 0;
              var G__440700 = 0;
              seq__440680 = G__440697;
              chunk__440681 = G__440698;
              count__440682 = G__440699;
              i__440683 = G__440700;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    };
    var G__440688 = function(elem, class$, var_args) {
      var classes = null;
      if(arguments.length > 2) {
        classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__440688__delegate.call(this, elem, class$, classes)
    };
    G__440688.cljs$lang$maxFixedArity = 2;
    G__440688.cljs$lang$applyTo = function(arglist__440701) {
      var elem = cljs.core.first(arglist__440701);
      arglist__440701 = cljs.core.next(arglist__440701);
      var class$ = cljs.core.first(arglist__440701);
      var classes = cljs.core.rest(arglist__440701);
      return G__440688__delegate(elem, class$, classes)
    };
    G__440688.cljs$core$IFn$_invoke$arity$variadic = G__440688__delegate;
    return G__440688
  }();
  remove_class_BANG_ = function(elem, class$, var_args) {
    var classes = var_args;
    switch(arguments.length) {
      case 2:
        return remove_class_BANG___2.call(this, elem, class$);
      default:
        return remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, class$, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_class_BANG_.cljs$lang$maxFixedArity = 2;
  remove_class_BANG_.cljs$lang$applyTo = remove_class_BANG___3.cljs$lang$applyTo;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_class_BANG___2;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_class_BANG_
}();
dommy.attrs.toggle_class_BANG_ = function() {
  var toggle_class_BANG_ = null;
  var toggle_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var temp__4090__auto___440702 = elem__$1.classList;
    if(cljs.core.truth_(temp__4090__auto___440702)) {
      var class_list_440703 = temp__4090__auto___440702;
      class_list_440703.toggle(class$)
    }else {
      toggle_class_BANG_.call(null, elem__$1, class$, !dommy.attrs.has_class_QMARK_.call(null, elem__$1, class$))
    }
    return elem__$1
  };
  var toggle_class_BANG___3 = function(elem, class$, add_QMARK_) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(add_QMARK_) {
      dommy.attrs.add_class_BANG_.call(null, elem__$1, class$)
    }else {
      dommy.attrs.remove_class_BANG_.call(null, elem__$1, class$)
    }
    return elem__$1
  };
  toggle_class_BANG_ = function(elem, class$, add_QMARK_) {
    switch(arguments.length) {
      case 2:
        return toggle_class_BANG___2.call(this, elem, class$);
      case 3:
        return toggle_class_BANG___3.call(this, elem, class$, add_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_class_BANG___2;
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$3 = toggle_class_BANG___3;
  return toggle_class_BANG_
}();
dommy.attrs.style_str = function style_str(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, function(p__440706) {
      var vec__440707 = p__440706;
      var k = cljs.core.nth.call(null, vec__440707, 0, null);
      var v = cljs.core.nth.call(null, vec__440707, 1, null);
      return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str(":"), cljs.core.str(cljs.core.name.call(null, v)), cljs.core.str(";")].join("")
    }, x))
  }
};
dommy.attrs.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(elem, kvs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var style = elem__$1.style;
    var seq__440714_440720 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__440715_440721 = null;
    var count__440716_440722 = 0;
    var i__440717_440723 = 0;
    while(true) {
      if(i__440717_440723 < count__440716_440722) {
        var vec__440718_440724 = cljs.core._nth.call(null, chunk__440715_440721, i__440717_440723);
        var k_440725 = cljs.core.nth.call(null, vec__440718_440724, 0, null);
        var v_440726 = cljs.core.nth.call(null, vec__440718_440724, 1, null);
        style[cljs.core.name.call(null, k_440725)] = v_440726;
        var G__440727 = seq__440714_440720;
        var G__440728 = chunk__440715_440721;
        var G__440729 = count__440716_440722;
        var G__440730 = i__440717_440723 + 1;
        seq__440714_440720 = G__440727;
        chunk__440715_440721 = G__440728;
        count__440716_440722 = G__440729;
        i__440717_440723 = G__440730;
        continue
      }else {
        var temp__4092__auto___440731 = cljs.core.seq.call(null, seq__440714_440720);
        if(temp__4092__auto___440731) {
          var seq__440714_440732__$1 = temp__4092__auto___440731;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__440714_440732__$1)) {
            var c__3259__auto___440733 = cljs.core.chunk_first.call(null, seq__440714_440732__$1);
            var G__440734 = cljs.core.chunk_rest.call(null, seq__440714_440732__$1);
            var G__440735 = c__3259__auto___440733;
            var G__440736 = cljs.core.count.call(null, c__3259__auto___440733);
            var G__440737 = 0;
            seq__440714_440720 = G__440734;
            chunk__440715_440721 = G__440735;
            count__440716_440722 = G__440736;
            i__440717_440723 = G__440737;
            continue
          }else {
            var vec__440719_440738 = cljs.core.first.call(null, seq__440714_440732__$1);
            var k_440739 = cljs.core.nth.call(null, vec__440719_440738, 0, null);
            var v_440740 = cljs.core.nth.call(null, vec__440719_440738, 1, null);
            style[cljs.core.name.call(null, k_440739)] = v_440740;
            var G__440741 = cljs.core.next.call(null, seq__440714_440732__$1);
            var G__440742 = null;
            var G__440743 = 0;
            var G__440744 = 0;
            seq__440714_440720 = G__440741;
            chunk__440715_440721 = G__440742;
            count__440716_440722 = G__440743;
            i__440717_440723 = G__440744;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem__$1
  };
  var set_style_BANG_ = function(elem, var_args) {
    var kvs = null;
    if(arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_style_BANG___delegate.call(this, elem, kvs)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 1;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__440745) {
    var elem = cljs.core.first(arglist__440745);
    var kvs = cljs.core.rest(arglist__440745);
    return set_style_BANG___delegate(elem, kvs)
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
dommy.attrs.style = function style(elem, k) {
  if(cljs.core.truth_(k)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "k", "k", -1640531420, null)))].join(""));
  }
  return window.getComputedStyle(dommy.template.__GT_node_like.call(null, elem))[cljs.core.name.call(null, k)]
};
dommy.attrs.set_px_BANG_ = function() {
  var set_px_BANG___delegate = function(elem, kvs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var seq__440752_440758 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__440753_440759 = null;
    var count__440754_440760 = 0;
    var i__440755_440761 = 0;
    while(true) {
      if(i__440755_440761 < count__440754_440760) {
        var vec__440756_440762 = cljs.core._nth.call(null, chunk__440753_440759, i__440755_440761);
        var k_440763 = cljs.core.nth.call(null, vec__440756_440762, 0, null);
        var v_440764 = cljs.core.nth.call(null, vec__440756_440762, 1, null);
        dommy.attrs.set_style_BANG_.call(null, elem__$1, k_440763, [cljs.core.str(v_440764), cljs.core.str("px")].join(""));
        var G__440765 = seq__440752_440758;
        var G__440766 = chunk__440753_440759;
        var G__440767 = count__440754_440760;
        var G__440768 = i__440755_440761 + 1;
        seq__440752_440758 = G__440765;
        chunk__440753_440759 = G__440766;
        count__440754_440760 = G__440767;
        i__440755_440761 = G__440768;
        continue
      }else {
        var temp__4092__auto___440769 = cljs.core.seq.call(null, seq__440752_440758);
        if(temp__4092__auto___440769) {
          var seq__440752_440770__$1 = temp__4092__auto___440769;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__440752_440770__$1)) {
            var c__3259__auto___440771 = cljs.core.chunk_first.call(null, seq__440752_440770__$1);
            var G__440772 = cljs.core.chunk_rest.call(null, seq__440752_440770__$1);
            var G__440773 = c__3259__auto___440771;
            var G__440774 = cljs.core.count.call(null, c__3259__auto___440771);
            var G__440775 = 0;
            seq__440752_440758 = G__440772;
            chunk__440753_440759 = G__440773;
            count__440754_440760 = G__440774;
            i__440755_440761 = G__440775;
            continue
          }else {
            var vec__440757_440776 = cljs.core.first.call(null, seq__440752_440770__$1);
            var k_440777 = cljs.core.nth.call(null, vec__440757_440776, 0, null);
            var v_440778 = cljs.core.nth.call(null, vec__440757_440776, 1, null);
            dommy.attrs.set_style_BANG_.call(null, elem__$1, k_440777, [cljs.core.str(v_440778), cljs.core.str("px")].join(""));
            var G__440779 = cljs.core.next.call(null, seq__440752_440770__$1);
            var G__440780 = null;
            var G__440781 = 0;
            var G__440782 = 0;
            seq__440752_440758 = G__440779;
            chunk__440753_440759 = G__440780;
            count__440754_440760 = G__440781;
            i__440755_440761 = G__440782;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem__$1
  };
  var set_px_BANG_ = function(elem, var_args) {
    var kvs = null;
    if(arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_px_BANG___delegate.call(this, elem, kvs)
  };
  set_px_BANG_.cljs$lang$maxFixedArity = 1;
  set_px_BANG_.cljs$lang$applyTo = function(arglist__440783) {
    var elem = cljs.core.first(arglist__440783);
    var kvs = cljs.core.rest(arglist__440783);
    return set_px_BANG___delegate(elem, kvs)
  };
  set_px_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_px_BANG___delegate;
  return set_px_BANG_
}();
dommy.attrs.px = function px(elem, k) {
  var pixels = dommy.attrs.style.call(null, dommy.template.__GT_node_like.call(null, elem), k);
  if(cljs.core.seq.call(null, pixels)) {
    return parseInt(pixels)
  }else {
    return null
  }
};
dommy.attrs.set_attr_BANG_ = function() {
  var set_attr_BANG_ = null;
  var set_attr_BANG___2 = function(elem, k) {
    return set_attr_BANG_.call(null, dommy.template.__GT_node_like.call(null, elem), k, "true")
  };
  var set_attr_BANG___3 = function(elem, k, v) {
    if(cljs.core.truth_(v)) {
      if(cljs.core.fn_QMARK_.call(null, v)) {
        var G__440792 = dommy.template.__GT_node_like.call(null, elem);
        G__440792[cljs.core.name.call(null, k)] = v;
        return G__440792
      }else {
        var G__440793 = dommy.template.__GT_node_like.call(null, elem);
        G__440793.setAttribute(cljs.core.name.call(null, k), k === "\ufdd0:style" ? dommy.attrs.style_str.call(null, v) : v);
        return G__440793
      }
    }else {
      return null
    }
  };
  var set_attr_BANG___4 = function() {
    var G__440800__delegate = function(elem, k, v, kvs) {
      if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
      }else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
      }
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__440794_440801 = cljs.core.seq.call(null, cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([k, v], true), cljs.core.partition.call(null, 2, kvs)));
      var chunk__440795_440802 = null;
      var count__440796_440803 = 0;
      var i__440797_440804 = 0;
      while(true) {
        if(i__440797_440804 < count__440796_440803) {
          var vec__440798_440805 = cljs.core._nth.call(null, chunk__440795_440802, i__440797_440804);
          var k_440806__$1 = cljs.core.nth.call(null, vec__440798_440805, 0, null);
          var v_440807__$1 = cljs.core.nth.call(null, vec__440798_440805, 1, null);
          set_attr_BANG_.call(null, elem__$1, k_440806__$1, v_440807__$1);
          var G__440808 = seq__440794_440801;
          var G__440809 = chunk__440795_440802;
          var G__440810 = count__440796_440803;
          var G__440811 = i__440797_440804 + 1;
          seq__440794_440801 = G__440808;
          chunk__440795_440802 = G__440809;
          count__440796_440803 = G__440810;
          i__440797_440804 = G__440811;
          continue
        }else {
          var temp__4092__auto___440812 = cljs.core.seq.call(null, seq__440794_440801);
          if(temp__4092__auto___440812) {
            var seq__440794_440813__$1 = temp__4092__auto___440812;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__440794_440813__$1)) {
              var c__3259__auto___440814 = cljs.core.chunk_first.call(null, seq__440794_440813__$1);
              var G__440815 = cljs.core.chunk_rest.call(null, seq__440794_440813__$1);
              var G__440816 = c__3259__auto___440814;
              var G__440817 = cljs.core.count.call(null, c__3259__auto___440814);
              var G__440818 = 0;
              seq__440794_440801 = G__440815;
              chunk__440795_440802 = G__440816;
              count__440796_440803 = G__440817;
              i__440797_440804 = G__440818;
              continue
            }else {
              var vec__440799_440819 = cljs.core.first.call(null, seq__440794_440813__$1);
              var k_440820__$1 = cljs.core.nth.call(null, vec__440799_440819, 0, null);
              var v_440821__$1 = cljs.core.nth.call(null, vec__440799_440819, 1, null);
              set_attr_BANG_.call(null, elem__$1, k_440820__$1, v_440821__$1);
              var G__440822 = cljs.core.next.call(null, seq__440794_440813__$1);
              var G__440823 = null;
              var G__440824 = 0;
              var G__440825 = 0;
              seq__440794_440801 = G__440822;
              chunk__440795_440802 = G__440823;
              count__440796_440803 = G__440824;
              i__440797_440804 = G__440825;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__440800 = function(elem, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__440800__delegate.call(this, elem, k, v, kvs)
    };
    G__440800.cljs$lang$maxFixedArity = 3;
    G__440800.cljs$lang$applyTo = function(arglist__440826) {
      var elem = cljs.core.first(arglist__440826);
      arglist__440826 = cljs.core.next(arglist__440826);
      var k = cljs.core.first(arglist__440826);
      arglist__440826 = cljs.core.next(arglist__440826);
      var v = cljs.core.first(arglist__440826);
      var kvs = cljs.core.rest(arglist__440826);
      return G__440800__delegate(elem, k, v, kvs)
    };
    G__440800.cljs$core$IFn$_invoke$arity$variadic = G__440800__delegate;
    return G__440800
  }();
  set_attr_BANG_ = function(elem, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 2:
        return set_attr_BANG___2.call(this, elem, k);
      case 3:
        return set_attr_BANG___3.call(this, elem, k, v);
      default:
        return set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic(elem, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 3;
  set_attr_BANG_.cljs$lang$applyTo = set_attr_BANG___4.cljs$lang$applyTo;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_attr_BANG___2;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_attr_BANG___3;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return set_attr_BANG_
}();
dommy.attrs.remove_attr_BANG_ = function() {
  var remove_attr_BANG_ = null;
  var remove_attr_BANG___2 = function(elem, k) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray(["\ufdd0:class", null, "\ufdd0:classes", null], true).call(null, k))) {
      elem__$1.className = ""
    }else {
      elem__$1.removeAttribute(cljs.core.name.call(null, k))
    }
    return elem__$1
  };
  var remove_attr_BANG___3 = function() {
    var G__440835__delegate = function(elem, k, ks) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__440831_440836 = cljs.core.seq.call(null, cljs.core.cons.call(null, k, ks));
      var chunk__440832_440837 = null;
      var count__440833_440838 = 0;
      var i__440834_440839 = 0;
      while(true) {
        if(i__440834_440839 < count__440833_440838) {
          var k_440840__$1 = cljs.core._nth.call(null, chunk__440832_440837, i__440834_440839);
          remove_attr_BANG_.call(null, elem__$1, k_440840__$1);
          var G__440841 = seq__440831_440836;
          var G__440842 = chunk__440832_440837;
          var G__440843 = count__440833_440838;
          var G__440844 = i__440834_440839 + 1;
          seq__440831_440836 = G__440841;
          chunk__440832_440837 = G__440842;
          count__440833_440838 = G__440843;
          i__440834_440839 = G__440844;
          continue
        }else {
          var temp__4092__auto___440845 = cljs.core.seq.call(null, seq__440831_440836);
          if(temp__4092__auto___440845) {
            var seq__440831_440846__$1 = temp__4092__auto___440845;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__440831_440846__$1)) {
              var c__3259__auto___440847 = cljs.core.chunk_first.call(null, seq__440831_440846__$1);
              var G__440848 = cljs.core.chunk_rest.call(null, seq__440831_440846__$1);
              var G__440849 = c__3259__auto___440847;
              var G__440850 = cljs.core.count.call(null, c__3259__auto___440847);
              var G__440851 = 0;
              seq__440831_440836 = G__440848;
              chunk__440832_440837 = G__440849;
              count__440833_440838 = G__440850;
              i__440834_440839 = G__440851;
              continue
            }else {
              var k_440852__$1 = cljs.core.first.call(null, seq__440831_440846__$1);
              remove_attr_BANG_.call(null, elem__$1, k_440852__$1);
              var G__440853 = cljs.core.next.call(null, seq__440831_440846__$1);
              var G__440854 = null;
              var G__440855 = 0;
              var G__440856 = 0;
              seq__440831_440836 = G__440853;
              chunk__440832_440837 = G__440854;
              count__440833_440838 = G__440855;
              i__440834_440839 = G__440856;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__440835 = function(elem, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__440835__delegate.call(this, elem, k, ks)
    };
    G__440835.cljs$lang$maxFixedArity = 2;
    G__440835.cljs$lang$applyTo = function(arglist__440857) {
      var elem = cljs.core.first(arglist__440857);
      arglist__440857 = cljs.core.next(arglist__440857);
      var k = cljs.core.first(arglist__440857);
      var ks = cljs.core.rest(arglist__440857);
      return G__440835__delegate(elem, k, ks)
    };
    G__440835.cljs$core$IFn$_invoke$arity$variadic = G__440835__delegate;
    return G__440835
  }();
  remove_attr_BANG_ = function(elem, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return remove_attr_BANG___2.call(this, elem, k);
      default:
        return remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_attr_BANG_.cljs$lang$maxFixedArity = 2;
  remove_attr_BANG_.cljs$lang$applyTo = remove_attr_BANG___3.cljs$lang$applyTo;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_attr_BANG___2;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_attr_BANG_
}();
dommy.attrs.attr = function attr(elem, k) {
  if(cljs.core.truth_(k)) {
    return dommy.template.__GT_node_like.call(null, elem).getAttribute(cljs.core.name.call(null, k))
  }else {
    return null
  }
};
dommy.attrs.hidden_QMARK_ = function hidden_QMARK_(elem) {
  return"none" === dommy.template.__GT_node_like.call(null, elem).style.display
};
dommy.attrs.toggle_BANG_ = function() {
  var toggle_BANG_ = null;
  var toggle_BANG___1 = function(elem) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    toggle_BANG_.call(null, elem__$1, dommy.attrs.hidden_QMARK_.call(null, elem__$1));
    return elem__$1
  };
  var toggle_BANG___2 = function(elem, show_QMARK_) {
    var G__440859 = dommy.template.__GT_node_like.call(null, elem);
    G__440859.style.display = show_QMARK_ ? "" : "none";
    return G__440859
  };
  toggle_BANG_ = function(elem, show_QMARK_) {
    switch(arguments.length) {
      case 1:
        return toggle_BANG___1.call(this, elem);
      case 2:
        return toggle_BANG___2.call(this, elem, show_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_BANG_.cljs$core$IFn$_invoke$arity$1 = toggle_BANG___1;
  toggle_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_BANG___2;
  return toggle_BANG_
}();
dommy.attrs.hide_BANG_ = function hide_BANG_(elem) {
  var G__440861 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__440861, false);
  return G__440861
};
dommy.attrs.show_BANG_ = function show_BANG_(elem) {
  var G__440863 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__440863, true);
  return G__440863
};
dommy.attrs.bounding_client_rect = function bounding_client_rect(elem) {
  return cljs.core.js__GT_clj.call(null, function() {
    var G__440865 = dommy.template.__GT_node_like.call(null, elem).getBoundingClientRect();
    G__440865["constructor"] = Object;
    return G__440865
  }(), "\ufdd0:keywordize-keys", true)
};
goog.provide("dommy.template");
goog.require("cljs.core");
goog.require("dommy.attrs");
goog.require("clojure.string");
dommy.template.PElement = {};
dommy.template._elem = function _elem(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.dommy$template$PElement$_elem$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.dommy$template$PElement$_elem$arity$1(this$)
  }else {
    var x__3128__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = dommy.template._elem[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = dommy.template._elem["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PElement.-elem", this$);
        }
      }
    }().call(null, this$)
  }
};
dommy.template.next_css_index = function next_css_index(s, start_idx) {
  var id_idx = s.indexOf("#", start_idx);
  var class_idx = s.indexOf(".", start_idx);
  var idx = Math.min(id_idx, class_idx);
  if(idx < 0) {
    return Math.max(id_idx, class_idx)
  }else {
    return idx
  }
};
dommy.template.base_element = function base_element(node_key) {
  var node_str = cljs.core.name.call(null, node_key);
  var base_idx = dommy.template.next_css_index.call(null, node_str, 0);
  var tag = base_idx > 0 ? node_str.substring(0, base_idx) : base_idx === 0 ? "div" : "\ufdd0:else" ? node_str : null;
  var node = document.createElement(tag);
  if(base_idx >= 0) {
    var str_440434 = node_str.substring(base_idx);
    while(true) {
      var next_idx_440435 = dommy.template.next_css_index.call(null, str_440434, 1);
      var frag_440436 = next_idx_440435 >= 0 ? str_440434.substring(0, next_idx_440435) : str_440434;
      var G__440433_440437 = frag_440436.charAt(0);
      if(cljs.core._EQ_.call(null, "#", G__440433_440437)) {
        node.setAttribute("id", frag_440436.substring(1))
      }else {
        if(cljs.core._EQ_.call(null, ".", G__440433_440437)) {
          dommy.attrs.add_class_BANG_.call(null, node, frag_440436.substring(1))
        }else {
          if("\ufdd0:else") {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(frag_440436.charAt(0))].join(""));
          }else {
          }
        }
      }
      if(next_idx_440435 >= 0) {
        var G__440438 = str_440434.substring(next_idx_440435);
        str_440434 = G__440438;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return node
};
dommy.template.throw_unable_to_make_node = function throw_unable_to_make_node(node_data) {
  throw[cljs.core.str("Don't know how to make node from: "), cljs.core.str(cljs.core.pr_str.call(null, node_data))].join("");
};
dommy.template.__GT_document_fragment = function() {
  var __GT_document_fragment = null;
  var __GT_document_fragment__1 = function(data) {
    return __GT_document_fragment.call(null, document.createDocumentFragment(), data)
  };
  var __GT_document_fragment__2 = function(result_frag, data) {
    if(function() {
      var G__440444 = data;
      if(G__440444) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__440444.dommy$template$PElement$
          }
        }())) {
          return true
        }else {
          if(!G__440444.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__440444)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__440444)
      }
    }()) {
      result_frag.appendChild(dommy.template._elem.call(null, data));
      return result_frag
    }else {
      if(cljs.core.seq_QMARK_.call(null, data)) {
        var seq__440445_440449 = cljs.core.seq.call(null, data);
        var chunk__440446_440450 = null;
        var count__440447_440451 = 0;
        var i__440448_440452 = 0;
        while(true) {
          if(i__440448_440452 < count__440447_440451) {
            var child_440453 = cljs.core._nth.call(null, chunk__440446_440450, i__440448_440452);
            __GT_document_fragment.call(null, result_frag, child_440453);
            var G__440454 = seq__440445_440449;
            var G__440455 = chunk__440446_440450;
            var G__440456 = count__440447_440451;
            var G__440457 = i__440448_440452 + 1;
            seq__440445_440449 = G__440454;
            chunk__440446_440450 = G__440455;
            count__440447_440451 = G__440456;
            i__440448_440452 = G__440457;
            continue
          }else {
            var temp__4092__auto___440458 = cljs.core.seq.call(null, seq__440445_440449);
            if(temp__4092__auto___440458) {
              var seq__440445_440459__$1 = temp__4092__auto___440458;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__440445_440459__$1)) {
                var c__3259__auto___440460 = cljs.core.chunk_first.call(null, seq__440445_440459__$1);
                var G__440461 = cljs.core.chunk_rest.call(null, seq__440445_440459__$1);
                var G__440462 = c__3259__auto___440460;
                var G__440463 = cljs.core.count.call(null, c__3259__auto___440460);
                var G__440464 = 0;
                seq__440445_440449 = G__440461;
                chunk__440446_440450 = G__440462;
                count__440447_440451 = G__440463;
                i__440448_440452 = G__440464;
                continue
              }else {
                var child_440465 = cljs.core.first.call(null, seq__440445_440459__$1);
                __GT_document_fragment.call(null, result_frag, child_440465);
                var G__440466 = cljs.core.next.call(null, seq__440445_440459__$1);
                var G__440467 = null;
                var G__440468 = 0;
                var G__440469 = 0;
                seq__440445_440449 = G__440466;
                chunk__440446_440450 = G__440467;
                count__440447_440451 = G__440468;
                i__440448_440452 = G__440469;
                continue
              }
            }else {
            }
          }
          break
        }
        return result_frag
      }else {
        if(data == null) {
          return result_frag
        }else {
          if("\ufdd0:else") {
            return dommy.template.throw_unable_to_make_node.call(null, data)
          }else {
            return null
          }
        }
      }
    }
  };
  __GT_document_fragment = function(result_frag, data) {
    switch(arguments.length) {
      case 1:
        return __GT_document_fragment__1.call(this, result_frag);
      case 2:
        return __GT_document_fragment__2.call(this, result_frag, data)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$1 = __GT_document_fragment__1;
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$2 = __GT_document_fragment__2;
  return __GT_document_fragment
}();
dommy.template.__GT_node_like = function __GT_node_like(data) {
  if(function() {
    var G__440471 = data;
    if(G__440471) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__440471.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__440471.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__440471)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__440471)
    }
  }()) {
    return dommy.template._elem.call(null, data)
  }else {
    return dommy.template.__GT_document_fragment.call(null, data)
  }
};
dommy.template.compound_element = function compound_element(p__440472) {
  var vec__440491 = p__440472;
  var tag_name = cljs.core.nth.call(null, vec__440491, 0, null);
  var maybe_attrs = cljs.core.nth.call(null, vec__440491, 1, null);
  var children = cljs.core.nthnext.call(null, vec__440491, 2);
  var n = dommy.template.base_element.call(null, tag_name);
  var attrs = function() {
    var and__3941__auto__ = cljs.core.map_QMARK_.call(null, maybe_attrs);
    if(and__3941__auto__) {
      return!function() {
        var G__440492 = maybe_attrs;
        if(G__440492) {
          if(cljs.core.truth_(function() {
            var or__3943__auto__ = null;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return G__440492.dommy$template$PElement$
            }
          }())) {
            return true
          }else {
            if(!G__440492.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__440492)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__440492)
        }
      }()
    }else {
      return and__3941__auto__
    }
  }() ? maybe_attrs : null;
  var children__$1 = cljs.core.truth_(attrs) ? children : cljs.core.cons.call(null, maybe_attrs, children);
  var seq__440493_440509 = cljs.core.seq.call(null, attrs);
  var chunk__440494_440510 = null;
  var count__440495_440511 = 0;
  var i__440496_440512 = 0;
  while(true) {
    if(i__440496_440512 < count__440495_440511) {
      var vec__440497_440513 = cljs.core._nth.call(null, chunk__440494_440510, i__440496_440512);
      var k_440514 = cljs.core.nth.call(null, vec__440497_440513, 0, null);
      var v_440515 = cljs.core.nth.call(null, vec__440497_440513, 1, null);
      var G__440498_440516 = k_440514;
      if(cljs.core._EQ_.call(null, "\ufdd0:classes", G__440498_440516)) {
        var seq__440499_440517 = cljs.core.seq.call(null, v_440515);
        var chunk__440500_440518 = null;
        var count__440501_440519 = 0;
        var i__440502_440520 = 0;
        while(true) {
          if(i__440502_440520 < count__440501_440519) {
            var c_440521 = cljs.core._nth.call(null, chunk__440500_440518, i__440502_440520);
            dommy.attrs.add_class_BANG_.call(null, n, c_440521);
            var G__440522 = seq__440499_440517;
            var G__440523 = chunk__440500_440518;
            var G__440524 = count__440501_440519;
            var G__440525 = i__440502_440520 + 1;
            seq__440499_440517 = G__440522;
            chunk__440500_440518 = G__440523;
            count__440501_440519 = G__440524;
            i__440502_440520 = G__440525;
            continue
          }else {
            var temp__4092__auto___440526 = cljs.core.seq.call(null, seq__440499_440517);
            if(temp__4092__auto___440526) {
              var seq__440499_440527__$1 = temp__4092__auto___440526;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__440499_440527__$1)) {
                var c__3259__auto___440528 = cljs.core.chunk_first.call(null, seq__440499_440527__$1);
                var G__440529 = cljs.core.chunk_rest.call(null, seq__440499_440527__$1);
                var G__440530 = c__3259__auto___440528;
                var G__440531 = cljs.core.count.call(null, c__3259__auto___440528);
                var G__440532 = 0;
                seq__440499_440517 = G__440529;
                chunk__440500_440518 = G__440530;
                count__440501_440519 = G__440531;
                i__440502_440520 = G__440532;
                continue
              }else {
                var c_440533 = cljs.core.first.call(null, seq__440499_440527__$1);
                dommy.attrs.add_class_BANG_.call(null, n, c_440533);
                var G__440534 = cljs.core.next.call(null, seq__440499_440527__$1);
                var G__440535 = null;
                var G__440536 = 0;
                var G__440537 = 0;
                seq__440499_440517 = G__440534;
                chunk__440500_440518 = G__440535;
                count__440501_440519 = G__440536;
                i__440502_440520 = G__440537;
                continue
              }
            }else {
            }
          }
          break
        }
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0:class", G__440498_440516)) {
          dommy.attrs.add_class_BANG_.call(null, n, v_440515)
        }else {
          if("\ufdd0:else") {
            dommy.attrs.set_attr_BANG_.call(null, n, k_440514, v_440515)
          }else {
          }
        }
      }
      var G__440538 = seq__440493_440509;
      var G__440539 = chunk__440494_440510;
      var G__440540 = count__440495_440511;
      var G__440541 = i__440496_440512 + 1;
      seq__440493_440509 = G__440538;
      chunk__440494_440510 = G__440539;
      count__440495_440511 = G__440540;
      i__440496_440512 = G__440541;
      continue
    }else {
      var temp__4092__auto___440542 = cljs.core.seq.call(null, seq__440493_440509);
      if(temp__4092__auto___440542) {
        var seq__440493_440543__$1 = temp__4092__auto___440542;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__440493_440543__$1)) {
          var c__3259__auto___440544 = cljs.core.chunk_first.call(null, seq__440493_440543__$1);
          var G__440545 = cljs.core.chunk_rest.call(null, seq__440493_440543__$1);
          var G__440546 = c__3259__auto___440544;
          var G__440547 = cljs.core.count.call(null, c__3259__auto___440544);
          var G__440548 = 0;
          seq__440493_440509 = G__440545;
          chunk__440494_440510 = G__440546;
          count__440495_440511 = G__440547;
          i__440496_440512 = G__440548;
          continue
        }else {
          var vec__440503_440549 = cljs.core.first.call(null, seq__440493_440543__$1);
          var k_440550 = cljs.core.nth.call(null, vec__440503_440549, 0, null);
          var v_440551 = cljs.core.nth.call(null, vec__440503_440549, 1, null);
          var G__440504_440552 = k_440550;
          if(cljs.core._EQ_.call(null, "\ufdd0:classes", G__440504_440552)) {
            var seq__440505_440553 = cljs.core.seq.call(null, v_440551);
            var chunk__440506_440554 = null;
            var count__440507_440555 = 0;
            var i__440508_440556 = 0;
            while(true) {
              if(i__440508_440556 < count__440507_440555) {
                var c_440557 = cljs.core._nth.call(null, chunk__440506_440554, i__440508_440556);
                dommy.attrs.add_class_BANG_.call(null, n, c_440557);
                var G__440558 = seq__440505_440553;
                var G__440559 = chunk__440506_440554;
                var G__440560 = count__440507_440555;
                var G__440561 = i__440508_440556 + 1;
                seq__440505_440553 = G__440558;
                chunk__440506_440554 = G__440559;
                count__440507_440555 = G__440560;
                i__440508_440556 = G__440561;
                continue
              }else {
                var temp__4092__auto___440562__$1 = cljs.core.seq.call(null, seq__440505_440553);
                if(temp__4092__auto___440562__$1) {
                  var seq__440505_440563__$1 = temp__4092__auto___440562__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__440505_440563__$1)) {
                    var c__3259__auto___440564 = cljs.core.chunk_first.call(null, seq__440505_440563__$1);
                    var G__440565 = cljs.core.chunk_rest.call(null, seq__440505_440563__$1);
                    var G__440566 = c__3259__auto___440564;
                    var G__440567 = cljs.core.count.call(null, c__3259__auto___440564);
                    var G__440568 = 0;
                    seq__440505_440553 = G__440565;
                    chunk__440506_440554 = G__440566;
                    count__440507_440555 = G__440567;
                    i__440508_440556 = G__440568;
                    continue
                  }else {
                    var c_440569 = cljs.core.first.call(null, seq__440505_440563__$1);
                    dommy.attrs.add_class_BANG_.call(null, n, c_440569);
                    var G__440570 = cljs.core.next.call(null, seq__440505_440563__$1);
                    var G__440571 = null;
                    var G__440572 = 0;
                    var G__440573 = 0;
                    seq__440505_440553 = G__440570;
                    chunk__440506_440554 = G__440571;
                    count__440507_440555 = G__440572;
                    i__440508_440556 = G__440573;
                    continue
                  }
                }else {
                }
              }
              break
            }
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0:class", G__440504_440552)) {
              dommy.attrs.add_class_BANG_.call(null, n, v_440551)
            }else {
              if("\ufdd0:else") {
                dommy.attrs.set_attr_BANG_.call(null, n, k_440550, v_440551)
              }else {
              }
            }
          }
          var G__440574 = cljs.core.next.call(null, seq__440493_440543__$1);
          var G__440575 = null;
          var G__440576 = 0;
          var G__440577 = 0;
          seq__440493_440509 = G__440574;
          chunk__440494_440510 = G__440575;
          count__440495_440511 = G__440576;
          i__440496_440512 = G__440577;
          continue
        }
      }else {
      }
    }
    break
  }
  n.appendChild(dommy.template.__GT_node_like.call(null, children__$1));
  return n
};
dommy.template.PElement["string"] = true;
dommy.template._elem["string"] = function(this$) {
  if(cljs.core.keyword_QMARK_.call(null, this$)) {
    return dommy.template.base_element.call(null, this$)
  }else {
    return document.createTextNode([cljs.core.str(this$)].join(""))
  }
};
dommy.template.PElement["number"] = true;
dommy.template._elem["number"] = function(this$) {
  return document.createTextNode([cljs.core.str(this$)].join(""))
};
cljs.core.PersistentVector.prototype.dommy$template$PElement$ = true;
cljs.core.PersistentVector.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return dommy.template.compound_element.call(null, this$)
};
Document.prototype.dommy$template$PElement$ = true;
Document.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
Text.prototype.dommy$template$PElement$ = true;
Text.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
DocumentFragment.prototype.dommy$template$PElement$ = true;
DocumentFragment.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
HTMLElement.prototype.dommy$template$PElement$ = true;
HTMLElement.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
try {
  Window.prototype.dommy$template$PElement$ = true;
  Window.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
    return this$
  }
}catch(e440578) {
  if(e440578 instanceof ReferenceError) {
    var __440579 = e440578;
    console.log("PElement: js/Window not defined by browser, skipping it... (running on phantomjs?)")
  }else {
    if("\ufdd0:else") {
      throw e440578;
    }else {
    }
  }
}
dommy.template.node = function node(data) {
  if(function() {
    var G__440581 = data;
    if(G__440581) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__440581.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__440581.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__440581)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__440581)
    }
  }()) {
    return dommy.template._elem.call(null, data)
  }else {
    return dommy.template.throw_unable_to_make_node.call(null, data)
  }
};
dommy.template.html__GT_nodes = function html__GT_nodes(html) {
  var parent = document.createElement("div");
  parent.insertAdjacentHTML("beforeend", html);
  return cljs.core.seq.call(null, Array.prototype.slice.call(parent.childNodes))
};
goog.provide("dommy.utils");
goog.require("cljs.core");
dommy.utils.dissoc_in = function dissoc_in(m, p__440429) {
  var vec__440431 = p__440429;
  var k = cljs.core.nth.call(null, vec__440431, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__440431, 1);
  if(cljs.core.truth_(m)) {
    var temp__4090__auto__ = function() {
      var and__3941__auto__ = ks;
      if(cljs.core.truth_(and__3941__auto__)) {
        return dissoc_in.call(null, m.call(null, k), ks)
      }else {
        return and__3941__auto__
      }
    }();
    if(cljs.core.truth_(temp__4090__auto__)) {
      var res = temp__4090__auto__;
      return cljs.core.assoc.call(null, m, k, res)
    }else {
      var res = cljs.core.dissoc.call(null, m, k);
      if(cljs.core.empty_QMARK_.call(null, res)) {
        return null
      }else {
        return res
      }
    }
  }else {
    return null
  }
};
dommy.utils.__GT_Array = function __GT_Array(array_like) {
  return Array.prototype.slice.call(array_like)
};
goog.provide("dommy.core");
goog.require("cljs.core");
goog.require("dommy.template");
goog.require("dommy.attrs");
goog.require("dommy.utils");
goog.require("clojure.string");
dommy.core.has_class_QMARK_ = dommy.attrs.has_class_QMARK_;
dommy.core.add_class_BANG_ = dommy.attrs.add_class_BANG_;
dommy.core.remove_class_BANG_ = dommy.attrs.remove_class_BANG_;
dommy.core.toggle_class_BANG_ = dommy.attrs.toggle_class_BANG_;
dommy.core.set_attr_BANG_ = dommy.attrs.set_attr_BANG_;
dommy.core.set_style_BANG_ = dommy.attrs.set_style_BANG_;
dommy.core.set_px_BANG_ = dommy.attrs.set_px_BANG_;
dommy.core.px = dommy.attrs.px;
dommy.core.style_str = dommy.attrs.style_str;
dommy.core.style = dommy.attrs.style;
dommy.core.remove_attr_BANG_ = dommy.attrs.remove_attr_BANG_;
dommy.core.attr = dommy.attrs.attr;
dommy.core.hidden_QMARK_ = dommy.attrs.hidden_QMARK_;
dommy.core.toggle_BANG_ = dommy.attrs.toggle_BANG_;
dommy.core.hide_BANG_ = dommy.attrs.hide_BANG_;
dommy.core.show_BANG_ = dommy.attrs.show_BANG_;
dommy.core.bounding_client_rect = dommy.attrs.bounding_client_rect;
dommy.core.dissoc_in = dommy.utils.dissoc_in;
dommy.core.__GT_Array = dommy.utils.__GT_Array;
dommy.core.set_html_BANG_ = function set_html_BANG_(elem, html) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.innerHTML = html;
  return elem__$1
};
dommy.core.html = function html(elem) {
  return dommy.template.__GT_node_like.call(null, elem).innerHTML
};
dommy.core.set_text_BANG_ = function set_text_BANG_(elem, text) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var prop = cljs.core.truth_(elem__$1.textContent) ? "textContent" : "innerText";
  elem__$1[prop] = text;
  return elem__$1
};
dommy.core.text = function text(elem) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var or__3943__auto__ = elem__$1.textContent;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return elem__$1.innerText
  }
};
dommy.core.value = function value(elem) {
  return dommy.template.__GT_node_like.call(null, elem).value
};
dommy.core.set_value_BANG_ = function set_value_BANG_(elem, value) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.value = value;
  return elem__$1
};
dommy.core.append_BANG_ = function() {
  var append_BANG_ = null;
  var append_BANG___2 = function(parent, child) {
    var G__440047 = dommy.template.__GT_node_like.call(null, parent);
    G__440047.appendChild(dommy.template.__GT_node_like.call(null, child));
    return G__440047
  };
  var append_BANG___3 = function() {
    var G__440052__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__440048_440053 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__440049_440054 = null;
      var count__440050_440055 = 0;
      var i__440051_440056 = 0;
      while(true) {
        if(i__440051_440056 < count__440050_440055) {
          var c_440057 = cljs.core._nth.call(null, chunk__440049_440054, i__440051_440056);
          append_BANG_.call(null, parent__$1, c_440057);
          var G__440058 = seq__440048_440053;
          var G__440059 = chunk__440049_440054;
          var G__440060 = count__440050_440055;
          var G__440061 = i__440051_440056 + 1;
          seq__440048_440053 = G__440058;
          chunk__440049_440054 = G__440059;
          count__440050_440055 = G__440060;
          i__440051_440056 = G__440061;
          continue
        }else {
          var temp__4092__auto___440062 = cljs.core.seq.call(null, seq__440048_440053);
          if(temp__4092__auto___440062) {
            var seq__440048_440063__$1 = temp__4092__auto___440062;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__440048_440063__$1)) {
              var c__3259__auto___440064 = cljs.core.chunk_first.call(null, seq__440048_440063__$1);
              var G__440065 = cljs.core.chunk_rest.call(null, seq__440048_440063__$1);
              var G__440066 = c__3259__auto___440064;
              var G__440067 = cljs.core.count.call(null, c__3259__auto___440064);
              var G__440068 = 0;
              seq__440048_440053 = G__440065;
              chunk__440049_440054 = G__440066;
              count__440050_440055 = G__440067;
              i__440051_440056 = G__440068;
              continue
            }else {
              var c_440069 = cljs.core.first.call(null, seq__440048_440063__$1);
              append_BANG_.call(null, parent__$1, c_440069);
              var G__440070 = cljs.core.next.call(null, seq__440048_440063__$1);
              var G__440071 = null;
              var G__440072 = 0;
              var G__440073 = 0;
              seq__440048_440053 = G__440070;
              chunk__440049_440054 = G__440071;
              count__440050_440055 = G__440072;
              i__440051_440056 = G__440073;
              continue
            }
          }else {
          }
        }
        break
      }
      return parent__$1
    };
    var G__440052 = function(parent, child, var_args) {
      var more_children = null;
      if(arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__440052__delegate.call(this, parent, child, more_children)
    };
    G__440052.cljs$lang$maxFixedArity = 2;
    G__440052.cljs$lang$applyTo = function(arglist__440074) {
      var parent = cljs.core.first(arglist__440074);
      arglist__440074 = cljs.core.next(arglist__440074);
      var child = cljs.core.first(arglist__440074);
      var more_children = cljs.core.rest(arglist__440074);
      return G__440052__delegate(parent, child, more_children)
    };
    G__440052.cljs$core$IFn$_invoke$arity$variadic = G__440052__delegate;
    return G__440052
  }();
  append_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return append_BANG___2.call(this, parent, child);
      default:
        return append_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  append_BANG_.cljs$lang$maxFixedArity = 2;
  append_BANG_.cljs$lang$applyTo = append_BANG___3.cljs$lang$applyTo;
  append_BANG_.cljs$core$IFn$_invoke$arity$2 = append_BANG___2;
  append_BANG_.cljs$core$IFn$_invoke$arity$variadic = append_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return append_BANG_
}();
dommy.core.prepend_BANG_ = function() {
  var prepend_BANG_ = null;
  var prepend_BANG___2 = function(parent, child) {
    var G__440080 = dommy.template.__GT_node_like.call(null, parent);
    G__440080.insertBefore(dommy.template.__GT_node_like.call(null, child), parent.firstChild);
    return G__440080
  };
  var prepend_BANG___3 = function() {
    var G__440085__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__440081_440086 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__440082_440087 = null;
      var count__440083_440088 = 0;
      var i__440084_440089 = 0;
      while(true) {
        if(i__440084_440089 < count__440083_440088) {
          var c_440090 = cljs.core._nth.call(null, chunk__440082_440087, i__440084_440089);
          prepend_BANG_.call(null, parent__$1, c_440090);
          var G__440091 = seq__440081_440086;
          var G__440092 = chunk__440082_440087;
          var G__440093 = count__440083_440088;
          var G__440094 = i__440084_440089 + 1;
          seq__440081_440086 = G__440091;
          chunk__440082_440087 = G__440092;
          count__440083_440088 = G__440093;
          i__440084_440089 = G__440094;
          continue
        }else {
          var temp__4092__auto___440095 = cljs.core.seq.call(null, seq__440081_440086);
          if(temp__4092__auto___440095) {
            var seq__440081_440096__$1 = temp__4092__auto___440095;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__440081_440096__$1)) {
              var c__3259__auto___440097 = cljs.core.chunk_first.call(null, seq__440081_440096__$1);
              var G__440098 = cljs.core.chunk_rest.call(null, seq__440081_440096__$1);
              var G__440099 = c__3259__auto___440097;
              var G__440100 = cljs.core.count.call(null, c__3259__auto___440097);
              var G__440101 = 0;
              seq__440081_440086 = G__440098;
              chunk__440082_440087 = G__440099;
              count__440083_440088 = G__440100;
              i__440084_440089 = G__440101;
              continue
            }else {
              var c_440102 = cljs.core.first.call(null, seq__440081_440096__$1);
              prepend_BANG_.call(null, parent__$1, c_440102);
              var G__440103 = cljs.core.next.call(null, seq__440081_440096__$1);
              var G__440104 = null;
              var G__440105 = 0;
              var G__440106 = 0;
              seq__440081_440086 = G__440103;
              chunk__440082_440087 = G__440104;
              count__440083_440088 = G__440105;
              i__440084_440089 = G__440106;
              continue
            }
          }else {
          }
        }
        break
      }
      return parent__$1
    };
    var G__440085 = function(parent, child, var_args) {
      var more_children = null;
      if(arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__440085__delegate.call(this, parent, child, more_children)
    };
    G__440085.cljs$lang$maxFixedArity = 2;
    G__440085.cljs$lang$applyTo = function(arglist__440107) {
      var parent = cljs.core.first(arglist__440107);
      arglist__440107 = cljs.core.next(arglist__440107);
      var child = cljs.core.first(arglist__440107);
      var more_children = cljs.core.rest(arglist__440107);
      return G__440085__delegate(parent, child, more_children)
    };
    G__440085.cljs$core$IFn$_invoke$arity$variadic = G__440085__delegate;
    return G__440085
  }();
  prepend_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return prepend_BANG___2.call(this, parent, child);
      default:
        return prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prepend_BANG_.cljs$lang$maxFixedArity = 2;
  prepend_BANG_.cljs$lang$applyTo = prepend_BANG___3.cljs$lang$applyTo;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$2 = prepend_BANG___2;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$variadic = prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return prepend_BANG_
}();
dommy.core.insert_before_BANG_ = function insert_before_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  if(cljs.core.truth_(other__$1.parentNode)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "other", "other", -1534461751, null))))].join(""));
  }
  other__$1.parentNode.insertBefore(actual_node, other__$1);
  return actual_node
};
dommy.core.insert_after_BANG_ = function insert_after_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  var parent = other__$1.parentNode;
  var temp__4090__auto___440108 = other__$1.nextSibling;
  if(cljs.core.truth_(temp__4090__auto___440108)) {
    var next_440109 = temp__4090__auto___440108;
    parent.insertBefore(actual_node, next_440109)
  }else {
    parent.appendChild(actual_node)
  }
  return actual_node
};
dommy.core.replace_BANG_ = function replace_BANG_(elem, new$) {
  var new$__$1 = dommy.template.__GT_node_like.call(null, new$);
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  if(cljs.core.truth_(elem__$1.parentNode)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "elem", "elem", -1637415608, null))))].join(""));
  }
  elem__$1.parentNode.replaceChild(new$__$1, elem__$1);
  return new$__$1
};
dommy.core.replace_contents_BANG_ = function replace_contents_BANG_(parent, node_like) {
  var G__440111 = dommy.template.__GT_node_like.call(null, parent);
  G__440111.innerHTML = "";
  dommy.core.append_BANG_.call(null, G__440111, node_like);
  return G__440111
};
dommy.core.remove_BANG_ = function remove_BANG_(elem) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var G__440113 = elem__$1.parentNode;
  G__440113.removeChild(elem__$1);
  return G__440113
};
dommy.core.selector = function selector(data) {
  if(cljs.core.coll_QMARK_.call(null, data)) {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, selector, data))
  }else {
    if(function() {
      var or__3943__auto__ = cljs.core.string_QMARK_.call(null, data);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return cljs.core.keyword_QMARK_.call(null, data)
      }
    }()) {
      return cljs.core.name.call(null, data)
    }else {
      return null
    }
  }
};
dommy.core.ancestor_nodes = function ancestor_nodes(elem) {
  return cljs.core.take_while.call(null, cljs.core.identity, cljs.core.iterate.call(null, function(p1__440114_SHARP_) {
    return p1__440114_SHARP_.parentNode
  }, dommy.template.__GT_node_like.call(null, elem)))
};
dommy.core.matches_pred = function() {
  var matches_pred = null;
  var matches_pred__1 = function(selector) {
    return matches_pred.call(null, document, selector)
  };
  var matches_pred__2 = function(base, selector) {
    var matches = dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, dommy.template.__GT_node_like.call(null, base)).querySelectorAll(dommy.core.selector.call(null, selector)));
    return function(elem) {
      return matches.indexOf(elem) >= 0
    }
  };
  matches_pred = function(base, selector) {
    switch(arguments.length) {
      case 1:
        return matches_pred__1.call(this, base);
      case 2:
        return matches_pred__2.call(this, base, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  matches_pred.cljs$core$IFn$_invoke$arity$1 = matches_pred__1;
  matches_pred.cljs$core$IFn$_invoke$arity$2 = matches_pred__2;
  return matches_pred
}();
dommy.core.closest = function() {
  var closest = null;
  var closest__2 = function(elem, selector) {
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, selector), dommy.core.ancestor_nodes.call(null, dommy.template.__GT_node_like.call(null, elem))))
  };
  var closest__3 = function(base, elem, selector) {
    var base__$1 = dommy.template.__GT_node_like.call(null, base);
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, base__$1, selector), cljs.core.take_while.call(null, function(p1__440115_SHARP_) {
      return!(p1__440115_SHARP_ === base__$1)
    }, dommy.core.ancestor_nodes.call(null, elem__$1))))
  };
  closest = function(base, elem, selector) {
    switch(arguments.length) {
      case 2:
        return closest__2.call(this, base, elem);
      case 3:
        return closest__3.call(this, base, elem, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  closest.cljs$core$IFn$_invoke$arity$2 = closest__2;
  closest.cljs$core$IFn$_invoke$arity$3 = closest__3;
  return closest
}();
dommy.core.descendant_QMARK_ = function descendant_QMARK_(descendant, ancestor) {
  var descendant__$1 = dommy.template.__GT_node_like.call(null, descendant);
  var ancestor__$1 = dommy.template.__GT_node_like.call(null, ancestor);
  if(cljs.core.truth_(ancestor__$1.contains)) {
    return ancestor__$1.contains(descendant__$1)
  }else {
    if(cljs.core.truth_(ancestor__$1.compareDocumentPosition)) {
      return(ancestor__$1.compareDocumentPosition(descendant__$1) & 1 << 4) != 0
    }else {
      return null
    }
  }
};
dommy.core.special_listener_makers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__440116) {
  var vec__440117 = p__440116;
  var special_mouse_event = cljs.core.nth.call(null, vec__440117, 0, null);
  var real_mouse_event = cljs.core.nth.call(null, vec__440117, 1, null);
  return cljs.core.PersistentVector.fromArray([special_mouse_event, cljs.core.PersistentArrayMap.fromArray([real_mouse_event, function(f) {
    return function(event) {
      var related_target = event.relatedTarget;
      var listener_target = function() {
        var or__3943__auto__ = event.selectedTarget;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return event.currentTarget
        }
      }();
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = related_target;
        if(cljs.core.truth_(and__3941__auto__)) {
          return dommy.core.descendant_QMARK_.call(null, related_target, listener_target)
        }else {
          return and__3941__auto__
        }
      }())) {
        return null
      }else {
        return f.call(null, event)
      }
    }
  }], true)], true)
}, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:mouseenter", "\ufdd0:mouseover", "\ufdd0:mouseleave", "\ufdd0:mouseout"], true)));
dommy.core.live_listener = function live_listener(elem, selector, f) {
  return function(event) {
    var temp__4092__auto__ = dommy.core.closest.call(null, dommy.template.__GT_node_like.call(null, elem), event.target, selector);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var selected_target = temp__4092__auto__;
      event.selectedTarget = selected_target;
      return f.call(null, event)
    }else {
      return null
    }
  }
};
dommy.core.event_listeners = function event_listeners(elem) {
  var or__3943__auto__ = dommy.template.__GT_node_like.call(null, elem).dommyEventListeners;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return cljs.core.PersistentArrayMap.EMPTY
  }
};
dommy.core.update_event_listeners_BANG_ = function() {
  var update_event_listeners_BANG___delegate = function(elem, f, args) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return elem__$1.dommyEventListeners = cljs.core.apply.call(null, f, dommy.core.event_listeners.call(null, elem__$1), args)
  };
  var update_event_listeners_BANG_ = function(elem, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return update_event_listeners_BANG___delegate.call(this, elem, f, args)
  };
  update_event_listeners_BANG_.cljs$lang$maxFixedArity = 2;
  update_event_listeners_BANG_.cljs$lang$applyTo = function(arglist__440119) {
    var elem = cljs.core.first(arglist__440119);
    arglist__440119 = cljs.core.next(arglist__440119);
    var f = cljs.core.first(arglist__440119);
    var args = cljs.core.rest(arglist__440119);
    return update_event_listeners_BANG___delegate(elem, f, args)
  };
  update_event_listeners_BANG_.cljs$core$IFn$_invoke$arity$variadic = update_event_listeners_BANG___delegate;
  return update_event_listeners_BANG_
}();
dommy.core.elem_and_selector = function elem_and_selector(elem_sel) {
  if(cljs.core.sequential_QMARK_.call(null, elem_sel)) {
    return cljs.core.juxt.call(null, function(p1__440118_SHARP_) {
      return dommy.template.__GT_node_like.call(null, cljs.core.first.call(null, p1__440118_SHARP_))
    }, cljs.core.rest).call(null, elem_sel)
  }else {
    return cljs.core.PersistentVector.fromArray([dommy.template.__GT_node_like.call(null, elem_sel), null], true)
  }
};
dommy.core.listen_BANG_ = function() {
  var listen_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__440143_440166 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_440167 = cljs.core.nth.call(null, vec__440143_440166, 0, null);
    var selector_440168 = cljs.core.nth.call(null, vec__440143_440166, 1, null);
    var seq__440144_440169 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__440151_440170 = null;
    var count__440152_440171 = 0;
    var i__440153_440172 = 0;
    while(true) {
      if(i__440153_440172 < count__440152_440171) {
        var vec__440160_440173 = cljs.core._nth.call(null, chunk__440151_440170, i__440153_440172);
        var orig_type_440174 = cljs.core.nth.call(null, vec__440160_440173, 0, null);
        var f_440175 = cljs.core.nth.call(null, vec__440160_440173, 1, null);
        var seq__440154_440176 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_440174, cljs.core.PersistentArrayMap.fromArray([orig_type_440174, cljs.core.identity], true)));
        var chunk__440156_440177 = null;
        var count__440157_440178 = 0;
        var i__440158_440179 = 0;
        while(true) {
          if(i__440158_440179 < count__440157_440178) {
            var vec__440161_440180 = cljs.core._nth.call(null, chunk__440156_440177, i__440158_440179);
            var actual_type_440181 = cljs.core.nth.call(null, vec__440161_440180, 0, null);
            var factory_440182 = cljs.core.nth.call(null, vec__440161_440180, 1, null);
            var canonical_f_440183 = (cljs.core.truth_(selector_440168) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_440167, selector_440168) : cljs.core.identity).call(null, factory_440182.call(null, f_440175));
            dommy.core.update_event_listeners_BANG_.call(null, elem_440167, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_440168, actual_type_440181, f_440175], true), canonical_f_440183);
            if(cljs.core.truth_(elem_440167.addEventListener)) {
              elem_440167.addEventListener(cljs.core.name.call(null, actual_type_440181), canonical_f_440183)
            }else {
              elem_440167.attachEvent(cljs.core.name.call(null, actual_type_440181), canonical_f_440183)
            }
            var G__440184 = seq__440154_440176;
            var G__440185 = chunk__440156_440177;
            var G__440186 = count__440157_440178;
            var G__440187 = i__440158_440179 + 1;
            seq__440154_440176 = G__440184;
            chunk__440156_440177 = G__440185;
            count__440157_440178 = G__440186;
            i__440158_440179 = G__440187;
            continue
          }else {
            var temp__4092__auto___440188 = cljs.core.seq.call(null, seq__440154_440176);
            if(temp__4092__auto___440188) {
              var seq__440154_440189__$1 = temp__4092__auto___440188;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__440154_440189__$1)) {
                var c__3259__auto___440190 = cljs.core.chunk_first.call(null, seq__440154_440189__$1);
                var G__440191 = cljs.core.chunk_rest.call(null, seq__440154_440189__$1);
                var G__440192 = c__3259__auto___440190;
                var G__440193 = cljs.core.count.call(null, c__3259__auto___440190);
                var G__440194 = 0;
                seq__440154_440176 = G__440191;
                chunk__440156_440177 = G__440192;
                count__440157_440178 = G__440193;
                i__440158_440179 = G__440194;
                continue
              }else {
                var vec__440162_440195 = cljs.core.first.call(null, seq__440154_440189__$1);
                var actual_type_440196 = cljs.core.nth.call(null, vec__440162_440195, 0, null);
                var factory_440197 = cljs.core.nth.call(null, vec__440162_440195, 1, null);
                var canonical_f_440198 = (cljs.core.truth_(selector_440168) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_440167, selector_440168) : cljs.core.identity).call(null, factory_440197.call(null, f_440175));
                dommy.core.update_event_listeners_BANG_.call(null, elem_440167, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_440168, actual_type_440196, f_440175], true), canonical_f_440198);
                if(cljs.core.truth_(elem_440167.addEventListener)) {
                  elem_440167.addEventListener(cljs.core.name.call(null, actual_type_440196), canonical_f_440198)
                }else {
                  elem_440167.attachEvent(cljs.core.name.call(null, actual_type_440196), canonical_f_440198)
                }
                var G__440199 = cljs.core.next.call(null, seq__440154_440189__$1);
                var G__440200 = null;
                var G__440201 = 0;
                var G__440202 = 0;
                seq__440154_440176 = G__440199;
                chunk__440156_440177 = G__440200;
                count__440157_440178 = G__440201;
                i__440158_440179 = G__440202;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__440203 = seq__440144_440169;
        var G__440204 = chunk__440151_440170;
        var G__440205 = count__440152_440171;
        var G__440206 = i__440153_440172 + 1;
        seq__440144_440169 = G__440203;
        chunk__440151_440170 = G__440204;
        count__440152_440171 = G__440205;
        i__440153_440172 = G__440206;
        continue
      }else {
        var temp__4092__auto___440207 = cljs.core.seq.call(null, seq__440144_440169);
        if(temp__4092__auto___440207) {
          var seq__440144_440208__$1 = temp__4092__auto___440207;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__440144_440208__$1)) {
            var c__3259__auto___440209 = cljs.core.chunk_first.call(null, seq__440144_440208__$1);
            var G__440210 = cljs.core.chunk_rest.call(null, seq__440144_440208__$1);
            var G__440211 = c__3259__auto___440209;
            var G__440212 = cljs.core.count.call(null, c__3259__auto___440209);
            var G__440213 = 0;
            seq__440144_440169 = G__440210;
            chunk__440151_440170 = G__440211;
            count__440152_440171 = G__440212;
            i__440153_440172 = G__440213;
            continue
          }else {
            var vec__440163_440214 = cljs.core.first.call(null, seq__440144_440208__$1);
            var orig_type_440215 = cljs.core.nth.call(null, vec__440163_440214, 0, null);
            var f_440216 = cljs.core.nth.call(null, vec__440163_440214, 1, null);
            var seq__440145_440217 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_440215, cljs.core.PersistentArrayMap.fromArray([orig_type_440215, cljs.core.identity], true)));
            var chunk__440147_440218 = null;
            var count__440148_440219 = 0;
            var i__440149_440220 = 0;
            while(true) {
              if(i__440149_440220 < count__440148_440219) {
                var vec__440164_440221 = cljs.core._nth.call(null, chunk__440147_440218, i__440149_440220);
                var actual_type_440222 = cljs.core.nth.call(null, vec__440164_440221, 0, null);
                var factory_440223 = cljs.core.nth.call(null, vec__440164_440221, 1, null);
                var canonical_f_440224 = (cljs.core.truth_(selector_440168) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_440167, selector_440168) : cljs.core.identity).call(null, factory_440223.call(null, f_440216));
                dommy.core.update_event_listeners_BANG_.call(null, elem_440167, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_440168, actual_type_440222, f_440216], true), canonical_f_440224);
                if(cljs.core.truth_(elem_440167.addEventListener)) {
                  elem_440167.addEventListener(cljs.core.name.call(null, actual_type_440222), canonical_f_440224)
                }else {
                  elem_440167.attachEvent(cljs.core.name.call(null, actual_type_440222), canonical_f_440224)
                }
                var G__440225 = seq__440145_440217;
                var G__440226 = chunk__440147_440218;
                var G__440227 = count__440148_440219;
                var G__440228 = i__440149_440220 + 1;
                seq__440145_440217 = G__440225;
                chunk__440147_440218 = G__440226;
                count__440148_440219 = G__440227;
                i__440149_440220 = G__440228;
                continue
              }else {
                var temp__4092__auto___440229__$1 = cljs.core.seq.call(null, seq__440145_440217);
                if(temp__4092__auto___440229__$1) {
                  var seq__440145_440230__$1 = temp__4092__auto___440229__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__440145_440230__$1)) {
                    var c__3259__auto___440231 = cljs.core.chunk_first.call(null, seq__440145_440230__$1);
                    var G__440232 = cljs.core.chunk_rest.call(null, seq__440145_440230__$1);
                    var G__440233 = c__3259__auto___440231;
                    var G__440234 = cljs.core.count.call(null, c__3259__auto___440231);
                    var G__440235 = 0;
                    seq__440145_440217 = G__440232;
                    chunk__440147_440218 = G__440233;
                    count__440148_440219 = G__440234;
                    i__440149_440220 = G__440235;
                    continue
                  }else {
                    var vec__440165_440236 = cljs.core.first.call(null, seq__440145_440230__$1);
                    var actual_type_440237 = cljs.core.nth.call(null, vec__440165_440236, 0, null);
                    var factory_440238 = cljs.core.nth.call(null, vec__440165_440236, 1, null);
                    var canonical_f_440239 = (cljs.core.truth_(selector_440168) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_440167, selector_440168) : cljs.core.identity).call(null, factory_440238.call(null, f_440216));
                    dommy.core.update_event_listeners_BANG_.call(null, elem_440167, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_440168, actual_type_440237, f_440216], true), canonical_f_440239);
                    if(cljs.core.truth_(elem_440167.addEventListener)) {
                      elem_440167.addEventListener(cljs.core.name.call(null, actual_type_440237), canonical_f_440239)
                    }else {
                      elem_440167.attachEvent(cljs.core.name.call(null, actual_type_440237), canonical_f_440239)
                    }
                    var G__440240 = cljs.core.next.call(null, seq__440145_440230__$1);
                    var G__440241 = null;
                    var G__440242 = 0;
                    var G__440243 = 0;
                    seq__440145_440217 = G__440240;
                    chunk__440147_440218 = G__440241;
                    count__440148_440219 = G__440242;
                    i__440149_440220 = G__440243;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__440244 = cljs.core.next.call(null, seq__440144_440208__$1);
            var G__440245 = null;
            var G__440246 = 0;
            var G__440247 = 0;
            seq__440144_440169 = G__440244;
            chunk__440151_440170 = G__440245;
            count__440152_440171 = G__440246;
            i__440153_440172 = G__440247;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var listen_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return listen_BANG___delegate.call(this, elem_sel, type_fs)
  };
  listen_BANG_.cljs$lang$maxFixedArity = 1;
  listen_BANG_.cljs$lang$applyTo = function(arglist__440248) {
    var elem_sel = cljs.core.first(arglist__440248);
    var type_fs = cljs.core.rest(arglist__440248);
    return listen_BANG___delegate(elem_sel, type_fs)
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_BANG___delegate;
  return listen_BANG_
}();
dommy.core.unlisten_BANG_ = function() {
  var unlisten_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__440272_440295 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_440296 = cljs.core.nth.call(null, vec__440272_440295, 0, null);
    var selector_440297 = cljs.core.nth.call(null, vec__440272_440295, 1, null);
    var seq__440273_440298 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__440280_440299 = null;
    var count__440281_440300 = 0;
    var i__440282_440301 = 0;
    while(true) {
      if(i__440282_440301 < count__440281_440300) {
        var vec__440289_440302 = cljs.core._nth.call(null, chunk__440280_440299, i__440282_440301);
        var orig_type_440303 = cljs.core.nth.call(null, vec__440289_440302, 0, null);
        var f_440304 = cljs.core.nth.call(null, vec__440289_440302, 1, null);
        var seq__440283_440305 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_440303, cljs.core.PersistentArrayMap.fromArray([orig_type_440303, cljs.core.identity], true)));
        var chunk__440285_440306 = null;
        var count__440286_440307 = 0;
        var i__440287_440308 = 0;
        while(true) {
          if(i__440287_440308 < count__440286_440307) {
            var vec__440290_440309 = cljs.core._nth.call(null, chunk__440285_440306, i__440287_440308);
            var actual_type_440310 = cljs.core.nth.call(null, vec__440290_440309, 0, null);
            var __440311 = cljs.core.nth.call(null, vec__440290_440309, 1, null);
            var keys_440312 = cljs.core.PersistentVector.fromArray([selector_440297, actual_type_440310, f_440304], true);
            var canonical_f_440313 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_440296), keys_440312);
            dommy.core.update_event_listeners_BANG_.call(null, elem_440296, dommy.utils.dissoc_in, keys_440312);
            if(cljs.core.truth_(elem_440296.removeEventListener)) {
              elem_440296.removeEventListener(cljs.core.name.call(null, actual_type_440310), canonical_f_440313)
            }else {
              elem_440296.detachEvent(cljs.core.name.call(null, actual_type_440310), canonical_f_440313)
            }
            var G__440314 = seq__440283_440305;
            var G__440315 = chunk__440285_440306;
            var G__440316 = count__440286_440307;
            var G__440317 = i__440287_440308 + 1;
            seq__440283_440305 = G__440314;
            chunk__440285_440306 = G__440315;
            count__440286_440307 = G__440316;
            i__440287_440308 = G__440317;
            continue
          }else {
            var temp__4092__auto___440318 = cljs.core.seq.call(null, seq__440283_440305);
            if(temp__4092__auto___440318) {
              var seq__440283_440319__$1 = temp__4092__auto___440318;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__440283_440319__$1)) {
                var c__3259__auto___440320 = cljs.core.chunk_first.call(null, seq__440283_440319__$1);
                var G__440321 = cljs.core.chunk_rest.call(null, seq__440283_440319__$1);
                var G__440322 = c__3259__auto___440320;
                var G__440323 = cljs.core.count.call(null, c__3259__auto___440320);
                var G__440324 = 0;
                seq__440283_440305 = G__440321;
                chunk__440285_440306 = G__440322;
                count__440286_440307 = G__440323;
                i__440287_440308 = G__440324;
                continue
              }else {
                var vec__440291_440325 = cljs.core.first.call(null, seq__440283_440319__$1);
                var actual_type_440326 = cljs.core.nth.call(null, vec__440291_440325, 0, null);
                var __440327 = cljs.core.nth.call(null, vec__440291_440325, 1, null);
                var keys_440328 = cljs.core.PersistentVector.fromArray([selector_440297, actual_type_440326, f_440304], true);
                var canonical_f_440329 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_440296), keys_440328);
                dommy.core.update_event_listeners_BANG_.call(null, elem_440296, dommy.utils.dissoc_in, keys_440328);
                if(cljs.core.truth_(elem_440296.removeEventListener)) {
                  elem_440296.removeEventListener(cljs.core.name.call(null, actual_type_440326), canonical_f_440329)
                }else {
                  elem_440296.detachEvent(cljs.core.name.call(null, actual_type_440326), canonical_f_440329)
                }
                var G__440330 = cljs.core.next.call(null, seq__440283_440319__$1);
                var G__440331 = null;
                var G__440332 = 0;
                var G__440333 = 0;
                seq__440283_440305 = G__440330;
                chunk__440285_440306 = G__440331;
                count__440286_440307 = G__440332;
                i__440287_440308 = G__440333;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__440334 = seq__440273_440298;
        var G__440335 = chunk__440280_440299;
        var G__440336 = count__440281_440300;
        var G__440337 = i__440282_440301 + 1;
        seq__440273_440298 = G__440334;
        chunk__440280_440299 = G__440335;
        count__440281_440300 = G__440336;
        i__440282_440301 = G__440337;
        continue
      }else {
        var temp__4092__auto___440338 = cljs.core.seq.call(null, seq__440273_440298);
        if(temp__4092__auto___440338) {
          var seq__440273_440339__$1 = temp__4092__auto___440338;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__440273_440339__$1)) {
            var c__3259__auto___440340 = cljs.core.chunk_first.call(null, seq__440273_440339__$1);
            var G__440341 = cljs.core.chunk_rest.call(null, seq__440273_440339__$1);
            var G__440342 = c__3259__auto___440340;
            var G__440343 = cljs.core.count.call(null, c__3259__auto___440340);
            var G__440344 = 0;
            seq__440273_440298 = G__440341;
            chunk__440280_440299 = G__440342;
            count__440281_440300 = G__440343;
            i__440282_440301 = G__440344;
            continue
          }else {
            var vec__440292_440345 = cljs.core.first.call(null, seq__440273_440339__$1);
            var orig_type_440346 = cljs.core.nth.call(null, vec__440292_440345, 0, null);
            var f_440347 = cljs.core.nth.call(null, vec__440292_440345, 1, null);
            var seq__440274_440348 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_440346, cljs.core.PersistentArrayMap.fromArray([orig_type_440346, cljs.core.identity], true)));
            var chunk__440276_440349 = null;
            var count__440277_440350 = 0;
            var i__440278_440351 = 0;
            while(true) {
              if(i__440278_440351 < count__440277_440350) {
                var vec__440293_440352 = cljs.core._nth.call(null, chunk__440276_440349, i__440278_440351);
                var actual_type_440353 = cljs.core.nth.call(null, vec__440293_440352, 0, null);
                var __440354 = cljs.core.nth.call(null, vec__440293_440352, 1, null);
                var keys_440355 = cljs.core.PersistentVector.fromArray([selector_440297, actual_type_440353, f_440347], true);
                var canonical_f_440356 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_440296), keys_440355);
                dommy.core.update_event_listeners_BANG_.call(null, elem_440296, dommy.utils.dissoc_in, keys_440355);
                if(cljs.core.truth_(elem_440296.removeEventListener)) {
                  elem_440296.removeEventListener(cljs.core.name.call(null, actual_type_440353), canonical_f_440356)
                }else {
                  elem_440296.detachEvent(cljs.core.name.call(null, actual_type_440353), canonical_f_440356)
                }
                var G__440357 = seq__440274_440348;
                var G__440358 = chunk__440276_440349;
                var G__440359 = count__440277_440350;
                var G__440360 = i__440278_440351 + 1;
                seq__440274_440348 = G__440357;
                chunk__440276_440349 = G__440358;
                count__440277_440350 = G__440359;
                i__440278_440351 = G__440360;
                continue
              }else {
                var temp__4092__auto___440361__$1 = cljs.core.seq.call(null, seq__440274_440348);
                if(temp__4092__auto___440361__$1) {
                  var seq__440274_440362__$1 = temp__4092__auto___440361__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__440274_440362__$1)) {
                    var c__3259__auto___440363 = cljs.core.chunk_first.call(null, seq__440274_440362__$1);
                    var G__440364 = cljs.core.chunk_rest.call(null, seq__440274_440362__$1);
                    var G__440365 = c__3259__auto___440363;
                    var G__440366 = cljs.core.count.call(null, c__3259__auto___440363);
                    var G__440367 = 0;
                    seq__440274_440348 = G__440364;
                    chunk__440276_440349 = G__440365;
                    count__440277_440350 = G__440366;
                    i__440278_440351 = G__440367;
                    continue
                  }else {
                    var vec__440294_440368 = cljs.core.first.call(null, seq__440274_440362__$1);
                    var actual_type_440369 = cljs.core.nth.call(null, vec__440294_440368, 0, null);
                    var __440370 = cljs.core.nth.call(null, vec__440294_440368, 1, null);
                    var keys_440371 = cljs.core.PersistentVector.fromArray([selector_440297, actual_type_440369, f_440347], true);
                    var canonical_f_440372 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_440296), keys_440371);
                    dommy.core.update_event_listeners_BANG_.call(null, elem_440296, dommy.utils.dissoc_in, keys_440371);
                    if(cljs.core.truth_(elem_440296.removeEventListener)) {
                      elem_440296.removeEventListener(cljs.core.name.call(null, actual_type_440369), canonical_f_440372)
                    }else {
                      elem_440296.detachEvent(cljs.core.name.call(null, actual_type_440369), canonical_f_440372)
                    }
                    var G__440373 = cljs.core.next.call(null, seq__440274_440362__$1);
                    var G__440374 = null;
                    var G__440375 = 0;
                    var G__440376 = 0;
                    seq__440274_440348 = G__440373;
                    chunk__440276_440349 = G__440374;
                    count__440277_440350 = G__440375;
                    i__440278_440351 = G__440376;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__440377 = cljs.core.next.call(null, seq__440273_440339__$1);
            var G__440378 = null;
            var G__440379 = 0;
            var G__440380 = 0;
            seq__440273_440298 = G__440377;
            chunk__440280_440299 = G__440378;
            count__440281_440300 = G__440379;
            i__440282_440301 = G__440380;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var unlisten_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return unlisten_BANG___delegate.call(this, elem_sel, type_fs)
  };
  unlisten_BANG_.cljs$lang$maxFixedArity = 1;
  unlisten_BANG_.cljs$lang$applyTo = function(arglist__440381) {
    var elem_sel = cljs.core.first(arglist__440381);
    var type_fs = cljs.core.rest(arglist__440381);
    return unlisten_BANG___delegate(elem_sel, type_fs)
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$variadic = unlisten_BANG___delegate;
  return unlisten_BANG_
}();
dommy.core.listen_once_BANG_ = function() {
  var listen_once_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__440389_440396 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_440397 = cljs.core.nth.call(null, vec__440389_440396, 0, null);
    var selector_440398 = cljs.core.nth.call(null, vec__440389_440396, 1, null);
    var seq__440390_440399 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__440391_440400 = null;
    var count__440392_440401 = 0;
    var i__440393_440402 = 0;
    while(true) {
      if(i__440393_440402 < count__440392_440401) {
        var vec__440394_440403 = cljs.core._nth.call(null, chunk__440391_440400, i__440393_440402);
        var type_440404 = cljs.core.nth.call(null, vec__440394_440403, 0, null);
        var f_440405 = cljs.core.nth.call(null, vec__440394_440403, 1, null);
        dommy.core.listen_BANG_.call(null, elem_sel, type_440404, function(seq__440390_440399, chunk__440391_440400, count__440392_440401, i__440393_440402, vec__440394_440403, type_440404, f_440405) {
          return function this_fn(e) {
            dommy.core.unlisten_BANG_.call(null, elem_sel, type_440404, this_fn);
            return f_440405.call(null, e)
          }
        }(seq__440390_440399, chunk__440391_440400, count__440392_440401, i__440393_440402, vec__440394_440403, type_440404, f_440405));
        var G__440406 = seq__440390_440399;
        var G__440407 = chunk__440391_440400;
        var G__440408 = count__440392_440401;
        var G__440409 = i__440393_440402 + 1;
        seq__440390_440399 = G__440406;
        chunk__440391_440400 = G__440407;
        count__440392_440401 = G__440408;
        i__440393_440402 = G__440409;
        continue
      }else {
        var temp__4092__auto___440410 = cljs.core.seq.call(null, seq__440390_440399);
        if(temp__4092__auto___440410) {
          var seq__440390_440411__$1 = temp__4092__auto___440410;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__440390_440411__$1)) {
            var c__3259__auto___440412 = cljs.core.chunk_first.call(null, seq__440390_440411__$1);
            var G__440413 = cljs.core.chunk_rest.call(null, seq__440390_440411__$1);
            var G__440414 = c__3259__auto___440412;
            var G__440415 = cljs.core.count.call(null, c__3259__auto___440412);
            var G__440416 = 0;
            seq__440390_440399 = G__440413;
            chunk__440391_440400 = G__440414;
            count__440392_440401 = G__440415;
            i__440393_440402 = G__440416;
            continue
          }else {
            var vec__440395_440417 = cljs.core.first.call(null, seq__440390_440411__$1);
            var type_440418 = cljs.core.nth.call(null, vec__440395_440417, 0, null);
            var f_440419 = cljs.core.nth.call(null, vec__440395_440417, 1, null);
            dommy.core.listen_BANG_.call(null, elem_sel, type_440418, function(seq__440390_440399, chunk__440391_440400, count__440392_440401, i__440393_440402, vec__440395_440417, type_440418, f_440419, seq__440390_440411__$1, temp__4092__auto___440410) {
              return function this_fn(e) {
                dommy.core.unlisten_BANG_.call(null, elem_sel, type_440418, this_fn);
                return f_440419.call(null, e)
              }
            }(seq__440390_440399, chunk__440391_440400, count__440392_440401, i__440393_440402, vec__440395_440417, type_440418, f_440419, seq__440390_440411__$1, temp__4092__auto___440410));
            var G__440420 = cljs.core.next.call(null, seq__440390_440411__$1);
            var G__440421 = null;
            var G__440422 = 0;
            var G__440423 = 0;
            seq__440390_440399 = G__440420;
            chunk__440391_440400 = G__440421;
            count__440392_440401 = G__440422;
            i__440393_440402 = G__440423;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var listen_once_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return listen_once_BANG___delegate.call(this, elem_sel, type_fs)
  };
  listen_once_BANG_.cljs$lang$maxFixedArity = 1;
  listen_once_BANG_.cljs$lang$applyTo = function(arglist__440424) {
    var elem_sel = cljs.core.first(arglist__440424);
    var type_fs = cljs.core.rest(arglist__440424);
    return listen_once_BANG___delegate(elem_sel, type_fs)
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_once_BANG___delegate;
  return listen_once_BANG_
}();
dommy.core.fire_BANG_ = function() {
  var fire_BANG___delegate = function(node, event_type, p__440425) {
    var vec__440427 = p__440425;
    var update_event_BANG_ = cljs.core.nth.call(null, vec__440427, 0, null);
    if(dommy.core.descendant_QMARK_.call(null, node, document.documentElement)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "descendant?", "descendant?", -1886221157, null), new cljs.core.Symbol(null, "node", "node", -1637144645, null), new cljs.core.Symbol("js", "document.documentElement", "js/document.documentElement", -1449696112, null))))].join(""));
    }
    var update_event_BANG___$1 = function() {
      var or__3943__auto__ = update_event_BANG_;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.identity
      }
    }();
    if(cljs.core.truth_(document.createEvent)) {
      var event = document.createEvent("Event");
      event.initEvent(cljs.core.name.call(null, event_type), true, true);
      return node.dispatchEvent(update_event_BANG___$1.call(null, event))
    }else {
      return node.fireEvent([cljs.core.str("on"), cljs.core.str(cljs.core.name.call(null, event_type))].join(""), update_event_BANG___$1.call(null, document.createEventObject()))
    }
  };
  var fire_BANG_ = function(node, event_type, var_args) {
    var p__440425 = null;
    if(arguments.length > 2) {
      p__440425 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return fire_BANG___delegate.call(this, node, event_type, p__440425)
  };
  fire_BANG_.cljs$lang$maxFixedArity = 2;
  fire_BANG_.cljs$lang$applyTo = function(arglist__440428) {
    var node = cljs.core.first(arglist__440428);
    arglist__440428 = cljs.core.next(arglist__440428);
    var event_type = cljs.core.first(arglist__440428);
    var p__440425 = cljs.core.rest(arglist__440428);
    return fire_BANG___delegate(node, event_type, p__440425)
  };
  fire_BANG_.cljs$core$IFn$_invoke$arity$variadic = fire_BANG___delegate;
  return fire_BANG_
}();
goog.provide("orchard.util.core");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("goog.i18n.DateTimeFormat");
goog.require("dommy.core");
goog.require("clojure.browser.repl");
goog.require("orchard.util.log");
orchard.util.core.url = node_require("url");
orchard.util.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__438285 = options;
    var map__438285__$1 = cljs.core.seq_QMARK_.call(null, map__438285) ? cljs.core.apply.call(null, cljs.core.hash_map, map__438285) : map__438285;
    var force_obj = cljs.core.get.call(null, map__438285__$1, "\ufdd0:force-obj");
    var keywordize_keys = cljs.core.get.call(null, map__438285__$1, "\ufdd0:keywordize-keys");
    var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
    var f = function(map__438285, map__438285__$1, force_obj, keywordize_keys, keyfn) {
      return function thisfn(x__$1) {
        if(cljs.core.seq_QMARK_.call(null, x__$1)) {
          return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
        }else {
          if(cljs.core.coll_QMARK_.call(null, x__$1)) {
            return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
          }else {
            if(cljs.core.truth_(goog.isArray(x__$1))) {
              return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, cljs.core.array_seq.call(null, x__$1)))
            }else {
              if(cljs.core.truth_(function() {
                var or__3943__auto__ = force_obj;
                if(cljs.core.truth_(or__3943__auto__)) {
                  return or__3943__auto__
                }else {
                  var or__3943__auto____$1 = cljs.core.type.call(null, x__$1) === Object;
                  if(or__3943__auto____$1) {
                    return or__3943__auto____$1
                  }else {
                    return cljs.core.type.call(null, x__$1) === global.Object
                  }
                }
              }())) {
                return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__3228__auto__ = function(map__438285, map__438285__$1, force_obj, keywordize_keys, keyfn) {
                    return function iter__438290(s__438291) {
                      return new cljs.core.LazySeq(null, false, function(map__438285, map__438285__$1, force_obj, keywordize_keys, keyfn) {
                        return function() {
                          var s__438291__$1 = s__438291;
                          while(true) {
                            var temp__4092__auto__ = cljs.core.seq.call(null, s__438291__$1);
                            if(temp__4092__auto__) {
                              var s__438291__$2 = temp__4092__auto__;
                              if(cljs.core.chunked_seq_QMARK_.call(null, s__438291__$2)) {
                                var c__3226__auto__ = cljs.core.chunk_first.call(null, s__438291__$2);
                                var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
                                var b__438293 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
                                if(function() {
                                  var i__438292 = 0;
                                  while(true) {
                                    if(i__438292 < size__3227__auto__) {
                                      var k = cljs.core._nth.call(null, c__3226__auto__, i__438292);
                                      cljs.core.chunk_append.call(null, b__438293, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true));
                                      var G__438294 = i__438292 + 1;
                                      i__438292 = G__438294;
                                      continue
                                    }else {
                                      return true
                                    }
                                    break
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__438293), iter__438290.call(null, cljs.core.chunk_rest.call(null, s__438291__$2)))
                                }else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__438293), null)
                                }
                              }else {
                                var k = cljs.core.first.call(null, s__438291__$2);
                                return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true), iter__438290.call(null, cljs.core.rest.call(null, s__438291__$2)))
                              }
                            }else {
                              return null
                            }
                            break
                          }
                        }
                      }(map__438285, map__438285__$1, force_obj, keywordize_keys, keyfn), null)
                    }
                  }(map__438285, map__438285__$1, force_obj, keywordize_keys, keyfn);
                  return iter__3228__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                }())
              }else {
                if("\ufdd0:else") {
                  return x__$1
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }(map__438285, map__438285__$1, force_obj, keywordize_keys, keyfn);
    return f.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(arguments.length > 1) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__438295) {
    var x = cljs.core.first(arglist__438295);
    var options = cljs.core.rest(arglist__438295);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
orchard.util.core.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.reduce.call(null, function(m, p__438298) {
          var vec__438299 = p__438298;
          var k = cljs.core.nth.call(null, vec__438299, 0, null);
          var v = cljs.core.nth.call(null, vec__438299, 1, null);
          return cljs.core.assoc.call(null, m, clj__GT_js.call(null, k), clj__GT_js.call(null, v))
        }, cljs.core.PersistentArrayMap.EMPTY, x).strobj
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0:else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
orchard.util.core.clj__GT_json = function clj__GT_json(data) {
  return[cljs.core.str(JSON.stringify.call(null, orchard.util.core.clj__GT_js.call(null, data))), cljs.core.str("\n")].join("")
};
orchard.util.core.json__GT_clj = function json__GT_clj(line) {
  return orchard.util.core.js__GT_clj.call(null, JSON.parse.call(null, line))
};
global["defonce-instances"] = orchard.util.core.clj__GT_js.call(null, cljs.core.PersistentArrayMap.EMPTY);
orchard.util.core.parse_url = function parse_url(url_str) {
  var raw = orchard.util.core.js__GT_clj.call(null, orchard.util.core.url.parse(url_str));
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:protocol", cljs.core.get.call(null, raw, "protocol").substr(0, cljs.core.get.call(null, raw, "protocol").length() - 1), "\ufdd0:host", cljs.core.get.call(null, raw, "hostname"), "\ufdd0:port", parseInt(cljs.core.get.call(null, raw, "port")), "\ufdd0:path", cljs.core.get.call(null, raw, "pathname")], true)
};
orchard.util.core.DATE_FORMATS = function() {
  var f = goog.i18n.DateTimeFormat.Format;
  return cljs.core.PersistentHashMap.fromArrays(["\ufdd0:medium-time", "\ufdd0:short-datetime", "\ufdd0:full-date", "\ufdd0:long-datetime", "\ufdd0:full-datetime", "\ufdd0:short-date", "\ufdd0:long-date", "\ufdd0:medium-date", "\ufdd0:medium-datetime", "\ufdd0:full-time", "\ufdd0:long-time", "\ufdd0:short-time"], [f.MEDIUM_TIME, f.SHORT_DATETIME, f.FULL_DATE, f.LONG_DATETIME, f.FULL_DATETIME, f.SHORT_DATE, f.LONG_DATE, f.MEDIUM_DATE, f.MEDIUM_DATETIME, f.FULL_TIME, f.LONG_TIME, f.SHORT_TIME])
}();
orchard.util.core.format_date = function format_date(date, fmt) {
  return(new goog.i18n.DateTimeFormat(function() {
    var or__3943__auto__ = cljs.core.get.call(null, orchard.util.core.DATE_FORMATS, fmt);
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return fmt
    }
  }())).format(new Date(date))
};
orchard.util.core.date_str = function date_str() {
  return orchard.util.core.format_date.call(null, new Date, "\ufdd0:long-date")
};
orchard.util.core.date_json = function date_json() {
  return orchard.util.core.clj__GT_json.call(null, new Date)
};
orchard.util.core.uuid = function uuid() {
  var r = cljs.core.repeatedly.call(null, 30, function() {
    return cljs.core.rand_int.call(null, 16).toString(16)
  });
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.concat.call(null, cljs.core.take.call(null, 8, r), cljs.core.PersistentVector.fromArray(["-"], true), cljs.core.take.call(null, 4, cljs.core.drop.call(null, 8, r)), cljs.core.PersistentVector.fromArray(["-4"], true), cljs.core.take.call(null, 3, cljs.core.drop.call(null, 12, r)), cljs.core.PersistentVector.fromArray(["-"], true), cljs.core.PersistentVector.fromArray([(8 | 3 & cljs.core.rand_int.call(null, 15)).toString(16)], true), cljs.core.take.call(null, 
  3, cljs.core.drop.call(null, 15, r)), cljs.core.PersistentVector.fromArray(["-"], true), cljs.core.take.call(null, 12, cljs.core.drop.call(null, 18, r))))
};
orchard.util.core.clipboard = function clipboard() {
  return Clipboard.get()
};
orchard.util.core.read_clipboard = function read_clipboard() {
  return orchard.util.core.clipboard.call(null).get()
};
orchard.util.core.refresh_window = function refresh_window() {
  return window.location.reload(true)
};
orchard.util.core.itemized_seq = function() {
  var itemized_seq = null;
  var itemized_seq__1 = function(l) {
    return itemized_seq.call(null, l, 0)
  };
  var itemized_seq__2 = function(l, n) {
    if(n < l.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, l.item(n), itemized_seq.call(null, l, n + 1))
      }, null)
    }else {
      return null
    }
  };
  itemized_seq = function(l, n) {
    switch(arguments.length) {
      case 1:
        return itemized_seq__1.call(this, l);
      case 2:
        return itemized_seq__2.call(this, l, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  itemized_seq.cljs$core$IFn$_invoke$arity$1 = itemized_seq__1;
  itemized_seq.cljs$core$IFn$_invoke$arity$2 = itemized_seq__2;
  return itemized_seq
}();
orchard.util.core.file_drop = function file_drop(elem, handler) {
  window.ondragover = function(e) {
    e.preventDefault();
    return false
  };
  window.ondrop = function(e) {
    e.preventDefault();
    return false
  };
  var elem__$1 = document.querySelector(dommy.core.selector.call(null, elem));
  elem__$1.ondragover = function() {
    var spot_438301 = this;
    spot_438301.className = "hover";
    return false
  };
  elem__$1.ondragend = function() {
    var spot = this;
    return spot.className = ""
  };
  return elem__$1.ondrop = function(e) {
    e.preventDefault();
    var fl_438302 = e.dataTransfer.files;
    var file_list_438303 = cljs.core.map.call(null, function(fl_438302) {
      return function(p1__438300_SHARP_) {
        return fl_438302.item(p1__438300_SHARP_)
      }
    }(fl_438302), cljs.core.range.call(null, fl_438302.length));
    if(cljs.core.truth_(handler)) {
      handler.call(null, cljs.core.doall.call(null, file_list_438303))
    }else {
    }
    return false
  }
};
orchard.util.core.handle_file_select = function handle_file_select(evt) {
  evt.stopPropagation();
  evt.preventDefault();
  var files = evt.dataTransfer.files;
  var n__3306__auto__ = files.length;
  var i = 0;
  while(true) {
    if(i < n__3306__auto__) {
      var rdr_438304 = new FileReader;
      var the_file_438305 = files[i];
      orchard.util.log.log.call(null, "File path: ", the_file_438305.path);
      rdr_438304.readAsText(the_file_438305);
      var G__438306 = i + 1;
      i = G__438306;
      continue
    }else {
      return null
    }
    break
  }
};
orchard.util.core.handle_drag_over = function handle_drag_over(evt) {
  evt.stopPropagation();
  evt.preventDefault();
  return evt.dataTransfer.dropEffect = "copy"
};
orchard.util.core.setup_drop_zone = function setup_drop_zone(id) {
  var dz = cljs.core.first.call(null, dommy.utils.__GT_Array.call(null, document.querySelectorAll(dommy.core.selector.call(null, id))));
  dommy.core.listen_BANG_.call(null, dz, "\ufdd0:dragover", orchard.util.core.handle_drag_over);
  return dommy.core.listen_BANG_.call(null, dz, "\ufdd0:drop", orchard.util.core.handle_file_select)
};
orchard.util.core.open_window = function() {
  var open_window__delegate = function(url, p__438307) {
    var map__438309 = p__438307;
    var map__438309__$1 = cljs.core.seq_QMARK_.call(null, map__438309) ? cljs.core.apply.call(null, cljs.core.hash_map, map__438309) : map__438309;
    var options = map__438309__$1;
    var o = cljs.core.merge.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", 0, "\ufdd0:y", 0, "\ufdd0:width", 400, "\ufdd0:height", 600], true), options);
    var opt_str = [cljs.core.str("screenX="), cljs.core.str((new cljs.core.Keyword("\ufdd0:x")).call(null, o)), cljs.core.str(",screenY="), cljs.core.str((new cljs.core.Keyword("\ufdd0:y")).call(null, o)), cljs.core.str(",width="), cljs.core.str((new cljs.core.Keyword("\ufdd0:width")).call(null, o)), cljs.core.str(",height="), cljs.core.str((new cljs.core.Keyword("\ufdd0:height")).call(null, o))].join("");
    return window.open(url, null, opt_str)
  };
  var open_window = function(url, var_args) {
    var p__438307 = null;
    if(arguments.length > 1) {
      p__438307 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return open_window__delegate.call(this, url, p__438307)
  };
  open_window.cljs$lang$maxFixedArity = 1;
  open_window.cljs$lang$applyTo = function(arglist__438310) {
    var url = cljs.core.first(arglist__438310);
    var p__438307 = cljs.core.rest(arglist__438310);
    return open_window__delegate(url, p__438307)
  };
  open_window.cljs$core$IFn$_invoke$arity$variadic = open_window__delegate;
  return open_window
}();
orchard.util.core.data = function() {
  var data = null;
  var data__2 = function(elem, attr) {
    return elem.getAttribute(attr)
  };
  var data__3 = function(elem, attr, value) {
    return elem.setAttribute(attr, value)
  };
  data = function(elem, attr, value) {
    switch(arguments.length) {
      case 2:
        return data__2.call(this, elem, attr);
      case 3:
        return data__3.call(this, elem, attr, value)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  data.cljs$core$IFn$_invoke$arity$2 = data__2;
  data.cljs$core$IFn$_invoke$arity$3 = data__3;
  return data
}();
orchard.util.core.itemized_seq = function() {
  var itemized_seq = null;
  var itemized_seq__1 = function(l) {
    return itemized_seq.call(null, l, 0)
  };
  var itemized_seq__2 = function(l, n) {
    if(n < l.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, l.item(n), itemized_seq.call(null, l, n + 1))
      }, null)
    }else {
      return null
    }
  };
  itemized_seq = function(l, n) {
    switch(arguments.length) {
      case 1:
        return itemized_seq__1.call(this, l);
      case 2:
        return itemized_seq__2.call(this, l, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  itemized_seq.cljs$core$IFn$_invoke$arity$1 = itemized_seq__1;
  itemized_seq.cljs$core$IFn$_invoke$arity$2 = itemized_seq__2;
  return itemized_seq
}();
FileList.prototype.cljs$core$IIndexed$ = true;
FileList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  return this$.item(n)
};
FileList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var or__3943__auto__ = this$.item(n);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return not_found
  }
};
FileList.prototype.cljs$core$ICounted$ = true;
FileList.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.length
};
FileList.prototype.cljs$core$ISeqable$ = true;
FileList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  return orchard.util.core.itemized_seq.call(null, this$)
};
orchard.util.core.refresh = function refresh() {
  return window.location.reload(true)
};
orchard.util.core.clipboard = function clipboard() {
  return Clipboard.get()
};
orchard.util.core.read_clipboard = function read_clipboard() {
  return orchard.util.core.clipboard.call(null).get()
};
orchard.util.core.open_window = function() {
  var open_window__delegate = function(url, p__438311) {
    var map__438313 = p__438311;
    var map__438313__$1 = cljs.core.seq_QMARK_.call(null, map__438313) ? cljs.core.apply.call(null, cljs.core.hash_map, map__438313) : map__438313;
    var options = map__438313__$1;
    var o = cljs.core.merge.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", 0, "\ufdd0:y", 0, "\ufdd0:width", 400, "\ufdd0:height", 600], true), options);
    var opt_str = [cljs.core.str("screenX="), cljs.core.str((new cljs.core.Keyword("\ufdd0:x")).call(null, o)), cljs.core.str(",screenY="), cljs.core.str((new cljs.core.Keyword("\ufdd0:y")).call(null, o)), cljs.core.str(",width="), cljs.core.str((new cljs.core.Keyword("\ufdd0:width")).call(null, o)), cljs.core.str(",height="), cljs.core.str((new cljs.core.Keyword("\ufdd0:height")).call(null, o))].join("");
    return window.open(url, null, opt_str)
  };
  var open_window = function(url, var_args) {
    var p__438311 = null;
    if(arguments.length > 1) {
      p__438311 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return open_window__delegate.call(this, url, p__438311)
  };
  open_window.cljs$lang$maxFixedArity = 1;
  open_window.cljs$lang$applyTo = function(arglist__438314) {
    var url = cljs.core.first(arglist__438314);
    var p__438311 = cljs.core.rest(arglist__438314);
    return open_window__delegate(url, p__438311)
  };
  open_window.cljs$core$IFn$_invoke$arity$variadic = open_window__delegate;
  return open_window
}();
orchard.util.core.editor_window = function editor_window() {
  return util.open_window.call(null, "editor.html")
};
orchard.util.core.load_js = function load_js(file_name) {
  return dommy.core.append_BANG_.call(null, cljs.core.first.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByTagName("head"))), dt.node.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:script", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:src", file_name], true)], true)))
};
orchard.util.core.start_repl_server = function start_repl_server() {
  return clojure.browser.repl.connect.call(null, "http://127.0.0.1:9000/repl")
};
goog.exportSymbol("orchard.util.core.start_repl_server", orchard.util.core.start_repl_server);
orchard.util.core.bound_do = function bound_do(a_STAR_, handler) {
  return cljs.core.add_watch.call(null, a_STAR_, "\ufdd0:mode-toggle-watch", function(k, elem_STAR_, ov, nv) {
    return handler.call(null, nv)
  })
};
orchard.util.core.mixin = function mixin(obj, obj2) {
  var mix = mixin;
  return mix.call(null, obj, orchard.util.core.clj__GT_js.call(null, obj2))
};
orchard.util.core.insert_at = function insert_at(coll, pos, item) {
  var vec = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, coll);
  return cljs.core.apply.call(null, cljs.core.merge, cljs.core.subvec.call(null, vec, 0, pos), item, cljs.core.subvec.call(null, vec, pos))
};
orchard.util.core.indexed = function indexed(s) {
  return cljs.core.map.call(null, cljs.core.vector, cljs.core.iterate.call(null, cljs.core.inc, 0), s)
};
orchard.util.core.positions = function positions(pred, coll) {
  var iter__3228__auto__ = function iter__438323(s__438324) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__438324__$1 = s__438324;
      while(true) {
        var temp__4092__auto__ = cljs.core.seq.call(null, s__438324__$1);
        if(temp__4092__auto__) {
          var s__438324__$2 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, s__438324__$2)) {
            var c__3226__auto__ = cljs.core.chunk_first.call(null, s__438324__$2);
            var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
            var b__438326 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
            if(function() {
              var i__438325 = 0;
              while(true) {
                if(i__438325 < size__3227__auto__) {
                  var vec__438329 = cljs.core._nth.call(null, c__3226__auto__, i__438325);
                  var idx = cljs.core.nth.call(null, vec__438329, 0, null);
                  var elt = cljs.core.nth.call(null, vec__438329, 1, null);
                  if(cljs.core.truth_(pred.call(null, elt))) {
                    cljs.core.chunk_append.call(null, b__438326, idx);
                    var G__438331 = i__438325 + 1;
                    i__438325 = G__438331;
                    continue
                  }else {
                    var G__438332 = i__438325 + 1;
                    i__438325 = G__438332;
                    continue
                  }
                }else {
                  return true
                }
                break
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__438326), iter__438323.call(null, cljs.core.chunk_rest.call(null, s__438324__$2)))
            }else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__438326), null)
            }
          }else {
            var vec__438330 = cljs.core.first.call(null, s__438324__$2);
            var idx = cljs.core.nth.call(null, vec__438330, 0, null);
            var elt = cljs.core.nth.call(null, vec__438330, 1, null);
            if(cljs.core.truth_(pred.call(null, elt))) {
              return cljs.core.cons.call(null, idx, iter__438323.call(null, cljs.core.rest.call(null, s__438324__$2)))
            }else {
              var G__438333 = cljs.core.rest.call(null, s__438324__$2);
              s__438324__$1 = G__438333;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }, null)
  };
  return iter__3228__auto__.call(null, orchard.util.core.indexed.call(null, coll))
};
orchard.util.core.index_of = function index_of(v, coll) {
  return cljs.core.first.call(null, orchard.util.core.positions.call(null, cljs.core.PersistentHashSet.fromArray([v, null], true), coll))
};
orchard.util.core.aget_in = function aget_in(obj, ks) {
  return cljs.core.reduce.call(null, function(o, k) {
    return o[cljs.core.name.call(null, k)]
  }, obj, ks)
};
orchard.util.core.aset_in = function aset_in(obj, ks, v) {
  return obj[cljs.core.name.call(null, cljs.core.first.call(null, ks))] = orchard.util.core.clj__GT_js.call(null, cljs.core.reduce.call(null, function(m, k) {
    return cljs.core.PersistentArrayMap.fromArray([k, m], true)
  }, cljs.core.PersistentArrayMap.fromArray([cljs.core.last.call(null, ks), v], true), cljs.core.butlast.call(null, cljs.core.rest.call(null, ks))))
};
orchard.util.core.by_id = function() {
  var by_id = null;
  var by_id__1 = function(id) {
    return by_id.call(null, document, id)
  };
  var by_id__2 = function(document, id) {
    return document.getElementById(cljs.core.name.call(null, id))
  };
  by_id = function(document, id) {
    switch(arguments.length) {
      case 1:
        return by_id__1.call(this, document);
      case 2:
        return by_id__2.call(this, document, id)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  by_id.cljs$core$IFn$_invoke$arity$1 = by_id__1;
  by_id.cljs$core$IFn$_invoke$arity$2 = by_id__2;
  return by_id
}();
orchard.util.core.parse_int = function parse_int(str_int) {
  return global.parseInt(str_int)
};
orchard.util.core.computed_style = function computed_style(elem) {
  return window.getComputedStyle(elem)
};
orchard.util.core.has_QMARK_ = function has_QMARK_(coll, k) {
  return!(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([k, null], true), coll) == null)
};
orchard.util.core.node__GT_tag = function node__GT_tag(node) {
  return[cljs.core.str(clojure.string.lower_case.call(null, node["tagName"])), cljs.core.str(cljs.core.count.call(null, node.id) > 0 ? [cljs.core.str("#"), cljs.core.str(node.id)].join("") : null), cljs.core.str(cljs.core.count.call(null, node.className) > 0 ? function() {
    var classes = cljs.core.filter.call(null, function(p1__438334_SHARP_) {
      return cljs.core.not_EQ_.call(null, ":", cljs.core.first.call(null, p1__438334_SHARP_))
    }, clojure.string.split.call(null, node.className, / /));
    return cljs.core.apply.call(null, cljs.core.str, ".", cljs.core.interpose.call(null, ".", classes))
  }() : null)].join("")
};
orchard.util.core.js_style_name = function js_style_name(attr_name) {
  var start = cljs.core.re_seq.call(null, /^[A-Za-z0-9]+/, attr_name);
  var end = cljs.core.re_seq.call(null, /\-[A-Za-z][a-z0-9]*/, attr_name);
  var cleaned = cljs.core.map.call(null, function(start, end) {
    return function(p1__438335_SHARP_) {
      return clojure.string.capitalize.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.rest.call(null, p1__438335_SHARP_)))
    }
  }(start, end), end);
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.flatten.call(null, cljs.core.merge.call(null, cleaned, start)))
};
orchard.util.core.clj_style_name = function clj_style_name(attr_name) {
  var start = cljs.core.re_seq.call(null, /^[a-z0-9]+/, attr_name);
  var end = cljs.core.re_seq.call(null, /[A-Z][a-z0-9]*/, attr_name);
  var cleaned = cljs.core.map.call(null, function(start, end) {
    return function(p1__438336_SHARP_) {
      return[cljs.core.str("-"), cljs.core.str(clojure.string.lower_case.call(null, p1__438336_SHARP_))].join("")
    }
  }(start, end), end);
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.flatten.call(null, cljs.core.merge.call(null, cleaned, start)))
};
goog.provide("orchard.observe");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("orchard.util.core");
goog.require("orchard.util.dom");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("orchard.util.core");
goog.require("orchard.util.dom");
orchard.observe.observer = function observer(handler) {
  return new WebKitMutationObserver(handler)
};
orchard.observe.observe = function() {
  var observe__delegate = function(elem, handler, config) {
    var obs = orchard.observe.observer.call(null, handler);
    var opts = cljs.core.clj__GT_js.call(null, cljs.core.reduce.call(null, function(obs) {
      return function(p1__461995_SHARP_, p2__461996_SHARP_) {
        return cljs.core.assoc.call(null, p1__461995_SHARP_, orchard.util.core.js_style_name.call(null, cljs.core.name.call(null, p2__461996_SHARP_)), true)
      }
    }(obs), cljs.core.PersistentArrayMap.EMPTY, config));
    obs.observe(elem, opts);
    return obs
  };
  var observe = function(elem, handler, var_args) {
    var config = null;
    if(arguments.length > 2) {
      config = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return observe__delegate.call(this, elem, handler, config)
  };
  observe.cljs$lang$maxFixedArity = 2;
  observe.cljs$lang$applyTo = function(arglist__461998) {
    var elem = cljs.core.first(arglist__461998);
    arglist__461998 = cljs.core.next(arglist__461998);
    var handler = cljs.core.first(arglist__461998);
    var config = cljs.core.rest(arglist__461998);
    return observe__delegate(elem, handler, config)
  };
  observe.cljs$core$IFn$_invoke$arity$variadic = observe__delegate;
  return observe
}();
orchard.observe.handle_node_ready = function handle_node_ready(node, chan, records) {
  var nodes = cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(mr) {
    return mr["addedNodes"]
  }, records));
  var n = cljs.core.filter.call(null, function(nodes) {
    return function(p1__461997_SHARP_) {
      return cljs.core._EQ_.call(null, node, p1__461997_SHARP_)
    }
  }(nodes), nodes);
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_462022) {
        var state_val_462023 = state_462022[1];
        if(state_val_462023 === 5) {
          var inst_462017 = state_462022[2];
          var state_462022__$1 = state_462022;
          var statearr_462024_462031 = state_462022__$1;
          statearr_462024_462031[2] = inst_462017;
          statearr_462024_462031[1] = 4;
          return"\ufdd0:recur"
        }else {
          if(state_val_462023 === 4) {
            var inst_462020 = state_462022[2];
            var state_462022__$1 = state_462022;
            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_462022__$1, inst_462020)
          }else {
            if(state_val_462023 === 3) {
              var state_462022__$1 = state_462022;
              var statearr_462025_462032 = state_462022__$1;
              statearr_462025_462032[2] = null;
              statearr_462025_462032[1] = 4;
              return"\ufdd0:recur"
            }else {
              if(state_val_462023 === 2) {
                var state_462022__$1 = state_462022;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_462022__$1, 5, chan, n)
              }else {
                if(state_val_462023 === 1) {
                  var state_462022__$1 = state_462022;
                  if(cljs.core.truth_(n)) {
                    var statearr_462026_462033 = state_462022__$1;
                    statearr_462026_462033[1] = 2
                  }else {
                    var statearr_462027_462034 = state_462022__$1;
                    statearr_462027_462034[1] = 3
                  }
                  return"\ufdd0:recur"
                }else {
                  return null
                }
              }
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_462029 = new Array(5);
            statearr_462029[0] = state_machine__4793__auto__;
            statearr_462029[1] = 1;
            return statearr_462029
          };
          var state_machine__4793__auto____1 = function(state_462022) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_462022);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_462022) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_462022)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_462030 = f__4865__auto__.call(null);
      statearr_462030[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_462030
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.observe.add_ready_observer = function add_ready_observer(obj) {
  if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0:ready")).call(null, cljs.core.deref.call(null, obj)))) {
    var node = (new cljs.core.Keyword("\ufdd0:content")).call(null, cljs.core.deref.call(null, obj));
    var ready_chan = cljs.core.async.chan.call(null);
    var observer = orchard.observe.observe.call(null, document.body, cljs.core.partial.call(null, orchard.observe.handle_node_ready, node, ready_chan), "\ufdd0:child-list", "\ufdd0:subtree");
    var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__4865__auto__ = function() {
        var switch__4792__auto__ = function(state_462055) {
          var state_val_462056 = state_462055[1];
          if(state_val_462056 === 2) {
            var inst_462049 = state_462055[2];
            var inst_462050 = observer.disconnect();
            var inst_462051 = cljs.core.deref.call(null, obj);
            var inst_462052 = (new cljs.core.Keyword("\ufdd0:ready")).call(null, inst_462051);
            var inst_462053 = inst_462052.call(null, obj);
            var state_462055__$1 = function() {
              var statearr_462057 = state_462055;
              statearr_462057[5] = inst_462050;
              statearr_462057[6] = inst_462049;
              return statearr_462057
            }();
            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_462055__$1, inst_462053)
          }else {
            if(state_val_462056 === 1) {
              var state_462055__$1 = state_462055;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_462055__$1, 2, ready_chan)
            }else {
              return null
            }
          }
        };
        return function(switch__4792__auto__) {
          return function() {
            var state_machine__4793__auto__ = null;
            var state_machine__4793__auto____0 = function() {
              var statearr_462059 = new Array(7);
              statearr_462059[0] = state_machine__4793__auto__;
              statearr_462059[1] = 1;
              return statearr_462059
            };
            var state_machine__4793__auto____1 = function(state_462055) {
              while(true) {
                var result__4794__auto__ = switch__4792__auto__.call(null, state_462055);
                if(result__4794__auto__ === "\ufdd0:recur") {
                  continue
                }else {
                  return result__4794__auto__
                }
                break
              }
            };
            state_machine__4793__auto__ = function(state_462055) {
              switch(arguments.length) {
                case 0:
                  return state_machine__4793__auto____0.call(this);
                case 1:
                  return state_machine__4793__auto____1.call(this, state_462055)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
            state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
            return state_machine__4793__auto__
          }()
        }(switch__4792__auto__)
      }();
      var state__4866__auto__ = function() {
        var statearr_462060 = f__4865__auto__.call(null);
        statearr_462060[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
        return statearr_462060
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
    });
    return c__4864__auto__
  }else {
    return null
  }
};
orchard.observe.dom_ready_chan = function dom_ready_chan(elem) {
  var ready_chan = cljs.core.async.chan.call(null);
  var observer = orchard.observe.observe.call(null, document.body, cljs.core.partial.call(null, orchard.observe.handle_node_ready, elem, ready_chan), "\ufdd0:child-list", "\ufdd0:subtree");
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_462075) {
        var state_val_462076 = state_462075[1];
        if(state_val_462076 === 2) {
          var inst_462072 = state_462075[2];
          var inst_462073 = observer.disconnect();
          var state_462075__$1 = function() {
            var statearr_462077 = state_462075;
            statearr_462077[5] = inst_462072;
            statearr_462077[6] = inst_462073;
            return statearr_462077
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_462075__$1, elem)
        }else {
          if(state_val_462076 === 1) {
            var state_462075__$1 = state_462075;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_462075__$1, 2, ready_chan)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_462079 = new Array(7);
            statearr_462079[0] = state_machine__4793__auto__;
            statearr_462079[1] = 1;
            return statearr_462079
          };
          var state_machine__4793__auto____1 = function(state_462075) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_462075);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_462075) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_462075)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_462080 = f__4865__auto__.call(null);
      statearr_462080[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_462080
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(p1__440866_SHARP_) {
    return max === p1__440866_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__440868__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets))
    };
    var G__440868 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__440868__delegate.call(this, s1, s2, sets)
    };
    G__440868.cljs$lang$maxFixedArity = 2;
    G__440868.cljs$lang$applyTo = function(arglist__440869) {
      var s1 = cljs.core.first(arglist__440869);
      arglist__440869 = cljs.core.next(arglist__440869);
      var s2 = cljs.core.first(arglist__440869);
      var sets = cljs.core.rest(arglist__440869);
      return G__440868__delegate(s1, s2, sets)
    };
    G__440868.cljs$core$IFn$_invoke$arity$variadic = G__440868__delegate;
    return G__440868
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__440870 = s2;
        var G__440871 = s1;
        s1 = G__440870;
        s2 = G__440871;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__440872__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__440867_SHARP_) {
        return-cljs.core.count.call(null, p1__440867_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets))
    };
    var G__440872 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__440872__delegate.call(this, s1, s2, sets)
    };
    G__440872.cljs$lang$maxFixedArity = 2;
    G__440872.cljs$lang$applyTo = function(arglist__440873) {
      var s1 = cljs.core.first(arglist__440873);
      arglist__440873 = cljs.core.next(arglist__440873);
      var s2 = cljs.core.first(arglist__440873);
      var sets = cljs.core.rest(arglist__440873);
      return G__440872__delegate(s1, s2, sets)
    };
    G__440872.cljs$core$IFn$_invoke$arity$variadic = G__440872__delegate;
    return G__440872
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__440874__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__440874 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__440874__delegate.call(this, s1, s2, sets)
    };
    G__440874.cljs$lang$maxFixedArity = 2;
    G__440874.cljs$lang$applyTo = function(arglist__440875) {
      var s1 = cljs.core.first(arglist__440875);
      arglist__440875 = cljs.core.next(arglist__440875);
      var s2 = cljs.core.first(arglist__440875);
      var sets = cljs.core.rest(arglist__440875);
      return G__440874__delegate(s1, s2, sets)
    };
    G__440874.cljs$core$IFn$_invoke$arity$variadic = G__440874__delegate;
    return G__440874
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__440876_SHARP_) {
    return cljs.core.select_keys.call(null, p1__440876_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__440880) {
    var vec__440881 = p__440880;
    var old = cljs.core.nth.call(null, vec__440881, 0, null);
    var new$ = cljs.core.nth.call(null, vec__440881, 1, null);
    if(function() {
      var and__3941__auto__ = cljs.core.not_EQ_.call(null, old, new$);
      if(and__3941__auto__) {
        return cljs.core.contains_QMARK_.call(null, m, old)
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, m, old)), old)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__440877_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__440877_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__440888) {
    var vec__440889 = p__440888;
    var k = cljs.core.nth.call(null, vec__440889, 0, null);
    var v = cljs.core.nth.call(null, vec__440889, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k)
  }, cljs.core.PersistentArrayMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(function() {
      var and__3941__auto__ = cljs.core.seq.call(null, xrel);
      if(and__3941__auto__) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3941__auto__
      }
    }()) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__440893 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r = cljs.core.nth.call(null, vec__440893, 0, null);
      var s = cljs.core.nth.call(null, vec__440893, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if(cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(p1__440882_SHARP_, p2__440883_SHARP_) {
            return cljs.core.conj.call(null, p1__440882_SHARP_, cljs.core.merge.call(null, p2__440883_SHARP_, x))
          }, ret, found)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__440894 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r = cljs.core.nth.call(null, vec__440894, 0, null);
    var s = cljs.core.nth.call(null, vec__440894, 1, null);
    var k = cljs.core.nth.call(null, vec__440894, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if(cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(p1__440884_SHARP_, p2__440885_SHARP_) {
          return cljs.core.conj.call(null, p1__440884_SHARP_, cljs.core.merge.call(null, p2__440885_SHARP_, x))
        }, ret, found)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3941__auto__ = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3941__auto__) {
    return cljs.core.every_QMARK_.call(null, function(p1__440890_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__440890_SHARP_)
    }, set1)
  }else {
    return and__3941__auto__
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3941__auto__ = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3941__auto__) {
    return cljs.core.every_QMARK_.call(null, function(p1__440895_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__440895_SHARP_)
    }, set2)
  }else {
    return and__3941__auto__
  }
};
goog.provide("crate.binding");
goog.require("cljs.core");
goog.require("clojure.set");
goog.provide("crate.binding.SubAtom");
crate.binding.SubAtom = function(atm, path, prevhash, watches, key) {
  this.atm = atm;
  this.path = path;
  this.prevhash = prevhash;
  this.watches = watches;
  this.key = key;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
crate.binding.SubAtom.cljs$lang$type = true;
crate.binding.SubAtom.cljs$lang$ctorStr = "crate.binding/SubAtom";
crate.binding.SubAtom.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "crate.binding/SubAtom")
};
crate.binding.SubAtom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var seq__439707 = cljs.core.seq.call(null, self__.watches);
  var chunk__439708 = null;
  var count__439709 = 0;
  var i__439710 = 0;
  while(true) {
    if(i__439710 < count__439709) {
      var vec__439711 = cljs.core._nth.call(null, chunk__439708, i__439710);
      var key__$1 = cljs.core.nth.call(null, vec__439711, 0, null);
      var f = cljs.core.nth.call(null, vec__439711, 1, null);
      f.call(null, key__$1, this$, oldval, newval);
      var G__439713 = seq__439707;
      var G__439714 = chunk__439708;
      var G__439715 = count__439709;
      var G__439716 = i__439710 + 1;
      seq__439707 = G__439713;
      chunk__439708 = G__439714;
      count__439709 = G__439715;
      i__439710 = G__439716;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__439707);
      if(temp__4092__auto__) {
        var seq__439707__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__439707__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__439707__$1);
          var G__439717 = cljs.core.chunk_rest.call(null, seq__439707__$1);
          var G__439718 = c__3259__auto__;
          var G__439719 = cljs.core.count.call(null, c__3259__auto__);
          var G__439720 = 0;
          seq__439707 = G__439717;
          chunk__439708 = G__439718;
          count__439709 = G__439719;
          i__439710 = G__439720;
          continue
        }else {
          var vec__439712 = cljs.core.first.call(null, seq__439707__$1);
          var key__$1 = cljs.core.nth.call(null, vec__439712, 0, null);
          var f = cljs.core.nth.call(null, vec__439712, 1, null);
          f.call(null, key__$1, this$, oldval, newval);
          var G__439721 = cljs.core.next.call(null, seq__439707__$1);
          var G__439722 = null;
          var G__439723 = 0;
          var G__439724 = 0;
          seq__439707 = G__439721;
          chunk__439708 = G__439722;
          count__439709 = G__439723;
          i__439710 = G__439724;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key__$1, f) {
  var self__ = this;
  if(cljs.core.truth_(f)) {
    return this$.watches = cljs.core.assoc.call(null, self__.watches, key__$1, f)
  }else {
    return null
  }
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key__$1) {
  var self__ = this;
  return this$.watches = cljs.core.dissoc.call(null, self__.watches, key__$1)
};
crate.binding.SubAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str("#<SubAtom: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.atm), self__.path))), cljs.core.str(">")].join(""))
};
crate.binding.SubAtom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.atm), self__.path)
};
crate.binding.SubAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return o === other
};
crate.binding.__GT_SubAtom = function __GT_SubAtom(atm, path, prevhash, watches, key) {
  return new crate.binding.SubAtom(atm, path, prevhash, watches, key)
};
crate.binding.subatom = function subatom(atm, path) {
  var path__$1 = cljs.core.coll_QMARK_.call(null, path) ? path : cljs.core.PersistentVector.fromArray([path], true);
  var vec__439726 = atm instanceof crate.binding.SubAtom ? cljs.core.PersistentVector.fromArray([atm.atm, cljs.core.concat.call(null, atm.path, path__$1)], true) : cljs.core.PersistentVector.fromArray([atm, path__$1], true);
  var atm__$1 = cljs.core.nth.call(null, vec__439726, 0, null);
  var path__$2 = cljs.core.nth.call(null, vec__439726, 1, null);
  var k = cljs.core.gensym.call(null, "subatom");
  var sa = new crate.binding.SubAtom(atm__$1, path__$2, cljs.core.hash.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, atm__$1), path__$2)), null, k);
  cljs.core.add_watch.call(null, atm__$1, k, function(_, ___$1, ov, nv) {
    var latest = cljs.core.get_in.call(null, nv, path__$2);
    var prev = cljs.core.get_in.call(null, ov, path__$2);
    var latest_hash = cljs.core.hash.call(null, latest);
    if(function() {
      var and__3941__auto__ = cljs.core.not_EQ_.call(null, sa.prevhash, latest_hash);
      if(and__3941__auto__) {
        return cljs.core.not_EQ_.call(null, prev, latest)
      }else {
        return and__3941__auto__
      }
    }()) {
      sa.prevhash = latest_hash;
      return cljs.core._notify_watches.call(null, sa, cljs.core.get_in.call(null, ov, path__$2), latest)
    }else {
      return null
    }
  });
  return sa
};
crate.binding.sub_reset_BANG_ = function sub_reset_BANG_(sa, new_value) {
  cljs.core.swap_BANG_.call(null, sa.atm, cljs.core.assoc_in, sa.path, new_value);
  return new_value
};
crate.binding.sub_swap_BANG_ = function() {
  var sub_swap_BANG_ = null;
  var sub_swap_BANG___2 = function(sa, f) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa)))
  };
  var sub_swap_BANG___3 = function(sa, f, x) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x))
  };
  var sub_swap_BANG___4 = function(sa, f, x, y) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x, y))
  };
  var sub_swap_BANG___5 = function(sa, f, x, y, z) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x, y, z))
  };
  var sub_swap_BANG___6 = function() {
    var G__439727__delegate = function(sa, f, x, y, z, more) {
      return crate.binding.sub_reset_BANG_.call(null, sa, cljs.core.apply.call(null, f, cljs.core.deref.call(null, sa), x, y, z, more))
    };
    var G__439727 = function(sa, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__439727__delegate.call(this, sa, f, x, y, z, more)
    };
    G__439727.cljs$lang$maxFixedArity = 5;
    G__439727.cljs$lang$applyTo = function(arglist__439728) {
      var sa = cljs.core.first(arglist__439728);
      arglist__439728 = cljs.core.next(arglist__439728);
      var f = cljs.core.first(arglist__439728);
      arglist__439728 = cljs.core.next(arglist__439728);
      var x = cljs.core.first(arglist__439728);
      arglist__439728 = cljs.core.next(arglist__439728);
      var y = cljs.core.first(arglist__439728);
      arglist__439728 = cljs.core.next(arglist__439728);
      var z = cljs.core.first(arglist__439728);
      var more = cljs.core.rest(arglist__439728);
      return G__439727__delegate(sa, f, x, y, z, more)
    };
    G__439727.cljs$core$IFn$_invoke$arity$variadic = G__439727__delegate;
    return G__439727
  }();
  sub_swap_BANG_ = function(sa, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return sub_swap_BANG___2.call(this, sa, f);
      case 3:
        return sub_swap_BANG___3.call(this, sa, f, x);
      case 4:
        return sub_swap_BANG___4.call(this, sa, f, x, y);
      case 5:
        return sub_swap_BANG___5.call(this, sa, f, x, y, z);
      default:
        return sub_swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(sa, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub_swap_BANG_.cljs$lang$maxFixedArity = 5;
  sub_swap_BANG_.cljs$lang$applyTo = sub_swap_BANG___6.cljs$lang$applyTo;
  sub_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = sub_swap_BANG___2;
  sub_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = sub_swap_BANG___3;
  sub_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = sub_swap_BANG___4;
  sub_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = sub_swap_BANG___5;
  sub_swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = sub_swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return sub_swap_BANG_
}();
crate.binding.sub_destroy_BANG_ = function sub_destroy_BANG_(sa) {
  cljs.core.remove_watch.call(null, sa.atm, sa.key);
  sa.watches = null;
  return sa.atm = null
};
crate.binding.computable = {};
crate.binding._compute = function _compute(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.crate$binding$computable$_compute$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.crate$binding$computable$_compute$arity$1(this$)
  }else {
    var x__3128__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = crate.binding._compute[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = crate.binding._compute["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "computable.-compute", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.provide("crate.binding.Computed");
crate.binding.Computed = function(atms, value, func, watches, key) {
  this.atms = atms;
  this.value = value;
  this.func = func;
  this.watches = watches;
  this.key = key;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
crate.binding.Computed.cljs$lang$type = true;
crate.binding.Computed.cljs$lang$ctorStr = "crate.binding/Computed";
crate.binding.Computed.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "crate.binding/Computed")
};
crate.binding.Computed.prototype.crate$binding$computable$ = true;
crate.binding.Computed.prototype.crate$binding$computable$_compute$arity$1 = function(this$) {
  var self__ = this;
  var old = this$.value;
  this$.value = cljs.core.apply.call(null, self__.func, cljs.core.map.call(null, cljs.core.deref, self__.atms));
  return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, old, this$.value)
};
crate.binding.Computed.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
crate.binding.Computed.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var seq__439729 = cljs.core.seq.call(null, self__.watches);
  var chunk__439730 = null;
  var count__439731 = 0;
  var i__439732 = 0;
  while(true) {
    if(i__439732 < count__439731) {
      var vec__439733 = cljs.core._nth.call(null, chunk__439730, i__439732);
      var key__$1 = cljs.core.nth.call(null, vec__439733, 0, null);
      var f = cljs.core.nth.call(null, vec__439733, 1, null);
      f.call(null, key__$1, this$, oldval, newval);
      var G__439735 = seq__439729;
      var G__439736 = chunk__439730;
      var G__439737 = count__439731;
      var G__439738 = i__439732 + 1;
      seq__439729 = G__439735;
      chunk__439730 = G__439736;
      count__439731 = G__439737;
      i__439732 = G__439738;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__439729);
      if(temp__4092__auto__) {
        var seq__439729__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__439729__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__439729__$1);
          var G__439739 = cljs.core.chunk_rest.call(null, seq__439729__$1);
          var G__439740 = c__3259__auto__;
          var G__439741 = cljs.core.count.call(null, c__3259__auto__);
          var G__439742 = 0;
          seq__439729 = G__439739;
          chunk__439730 = G__439740;
          count__439731 = G__439741;
          i__439732 = G__439742;
          continue
        }else {
          var vec__439734 = cljs.core.first.call(null, seq__439729__$1);
          var key__$1 = cljs.core.nth.call(null, vec__439734, 0, null);
          var f = cljs.core.nth.call(null, vec__439734, 1, null);
          f.call(null, key__$1, this$, oldval, newval);
          var G__439743 = cljs.core.next.call(null, seq__439729__$1);
          var G__439744 = null;
          var G__439745 = 0;
          var G__439746 = 0;
          seq__439729 = G__439743;
          chunk__439730 = G__439744;
          count__439731 = G__439745;
          i__439732 = G__439746;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
crate.binding.Computed.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key__$1, f) {
  var self__ = this;
  if(cljs.core.truth_(f)) {
    return this$.watches = cljs.core.assoc.call(null, self__.watches, key__$1, f)
  }else {
    return null
  }
};
crate.binding.Computed.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key__$1) {
  var self__ = this;
  return this$.watches = cljs.core.dissoc.call(null, self__.watches, key__$1)
};
crate.binding.Computed.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str("#<Computed: "), cljs.core.str(cljs.core.pr_str.call(null, self__.value)), cljs.core.str(">")].join(""))
};
crate.binding.Computed.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return self__.value
};
crate.binding.Computed.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return o === other
};
crate.binding.__GT_Computed = function __GT_Computed(atms, value, func, watches, key) {
  return new crate.binding.Computed(atms, value, func, watches, key)
};
crate.binding.computed = function computed(atms, func) {
  var k = cljs.core.gensym.call(null, "computed");
  var neue = new crate.binding.Computed(atms, null, func, null, k);
  crate.binding._compute.call(null, neue);
  var seq__439751_439755 = cljs.core.seq.call(null, atms);
  var chunk__439752_439756 = null;
  var count__439753_439757 = 0;
  var i__439754_439758 = 0;
  while(true) {
    if(i__439754_439758 < count__439753_439757) {
      var atm_439759 = cljs.core._nth.call(null, chunk__439752_439756, i__439754_439758);
      cljs.core.add_watch.call(null, atm_439759, k, function(seq__439751_439755, chunk__439752_439756, count__439753_439757, i__439754_439758, atm_439759) {
        return function(_, ___$1, ___$2, ___$3) {
          return crate.binding._compute.call(null, neue)
        }
      }(seq__439751_439755, chunk__439752_439756, count__439753_439757, i__439754_439758, atm_439759));
      var G__439760 = seq__439751_439755;
      var G__439761 = chunk__439752_439756;
      var G__439762 = count__439753_439757;
      var G__439763 = i__439754_439758 + 1;
      seq__439751_439755 = G__439760;
      chunk__439752_439756 = G__439761;
      count__439753_439757 = G__439762;
      i__439754_439758 = G__439763;
      continue
    }else {
      var temp__4092__auto___439764 = cljs.core.seq.call(null, seq__439751_439755);
      if(temp__4092__auto___439764) {
        var seq__439751_439765__$1 = temp__4092__auto___439764;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__439751_439765__$1)) {
          var c__3259__auto___439766 = cljs.core.chunk_first.call(null, seq__439751_439765__$1);
          var G__439767 = cljs.core.chunk_rest.call(null, seq__439751_439765__$1);
          var G__439768 = c__3259__auto___439766;
          var G__439769 = cljs.core.count.call(null, c__3259__auto___439766);
          var G__439770 = 0;
          seq__439751_439755 = G__439767;
          chunk__439752_439756 = G__439768;
          count__439753_439757 = G__439769;
          i__439754_439758 = G__439770;
          continue
        }else {
          var atm_439771 = cljs.core.first.call(null, seq__439751_439765__$1);
          cljs.core.add_watch.call(null, atm_439771, k, function(seq__439751_439755, chunk__439752_439756, count__439753_439757, i__439754_439758, atm_439771, seq__439751_439765__$1, temp__4092__auto___439764) {
            return function(_, ___$1, ___$2, ___$3) {
              return crate.binding._compute.call(null, neue)
            }
          }(seq__439751_439755, chunk__439752_439756, count__439753_439757, i__439754_439758, atm_439771, seq__439751_439765__$1, temp__4092__auto___439764));
          var G__439772 = cljs.core.next.call(null, seq__439751_439765__$1);
          var G__439773 = null;
          var G__439774 = 0;
          var G__439775 = 0;
          seq__439751_439755 = G__439772;
          chunk__439752_439756 = G__439773;
          count__439753_439757 = G__439774;
          i__439754_439758 = G__439775;
          continue
        }
      }else {
      }
    }
    break
  }
  return neue
};
crate.binding.z = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
crate.binding.y = crate.binding.computed.call(null, cljs.core.PersistentVector.fromArray([crate.binding.z], true), function(z) {
  return cljs.core.filter.call(null, cljs.core.even_QMARK_, z)
});
crate.binding.r = crate.binding.computed.call(null, cljs.core.PersistentVector.fromArray([crate.binding.y], true), function(y) {
  return cljs.core.filter.call(null, function(p1__439776_SHARP_) {
    return p1__439776_SHARP_ > 100
  }, y)
});
cljs.core.swap_BANG_.call(null, crate.binding.z, cljs.core.conj, 1340);
cljs.core.deref.call(null, crate.binding.y);
cljs.core.deref.call(null, crate.binding.r);
crate.binding.notify = function notify(w, o, v) {
  return cljs.core._notify_watches.call(null, w, o, v)
};
crate.binding.bindable_coll = {};
crate.binding.bindable = {};
crate.binding._value = function _value(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.crate$binding$bindable$_value$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.crate$binding$bindable$_value$arity$1(this$)
  }else {
    var x__3128__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = crate.binding._value[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = crate.binding._value["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "bindable.-value", this$);
        }
      }
    }().call(null, this$)
  }
};
crate.binding._on_change = function _on_change(this$, func) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.crate$binding$bindable$_on_change$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.crate$binding$bindable$_on_change$arity$2(this$, func)
  }else {
    var x__3128__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = crate.binding._on_change[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = crate.binding._on_change["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "bindable.-on-change", this$);
        }
      }
    }().call(null, this$, func)
  }
};
goog.provide("crate.binding.atom_binding");
crate.binding.atom_binding = function(atm, value_func) {
  this.atm = atm;
  this.value_func = value_func
};
crate.binding.atom_binding.cljs$lang$type = true;
crate.binding.atom_binding.cljs$lang$ctorStr = "crate.binding/atom-binding";
crate.binding.atom_binding.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "crate.binding/atom-binding")
};
crate.binding.atom_binding.prototype.crate$binding$bindable$ = true;
crate.binding.atom_binding.prototype.crate$binding$bindable$_value$arity$1 = function(this$) {
  var self__ = this;
  return self__.value_func.call(null, cljs.core.deref.call(null, self__.atm))
};
crate.binding.atom_binding.prototype.crate$binding$bindable$_on_change$arity$2 = function(this$, func) {
  var self__ = this;
  return cljs.core.add_watch.call(null, self__.atm, cljs.core.gensym.call(null, "atom-binding"), function() {
    return func.call(null, crate.binding._value.call(null, this$))
  })
};
crate.binding.__GT_atom_binding = function __GT_atom_binding(atm, value_func) {
  return new crate.binding.atom_binding(atm, value_func)
};
goog.provide("crate.binding.notifier");
crate.binding.notifier = function(watches) {
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 0;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
crate.binding.notifier.cljs$lang$type = true;
crate.binding.notifier.cljs$lang$ctorStr = "crate.binding/notifier";
crate.binding.notifier.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "crate.binding/notifier")
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var seq__439777 = cljs.core.seq.call(null, self__.watches);
  var chunk__439778 = null;
  var count__439779 = 0;
  var i__439780 = 0;
  while(true) {
    if(i__439780 < count__439779) {
      var vec__439781 = cljs.core._nth.call(null, chunk__439778, i__439780);
      var key = cljs.core.nth.call(null, vec__439781, 0, null);
      var f = cljs.core.nth.call(null, vec__439781, 1, null);
      f.call(null, key, this$, oldval, newval);
      var G__439783 = seq__439777;
      var G__439784 = chunk__439778;
      var G__439785 = count__439779;
      var G__439786 = i__439780 + 1;
      seq__439777 = G__439783;
      chunk__439778 = G__439784;
      count__439779 = G__439785;
      i__439780 = G__439786;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__439777);
      if(temp__4092__auto__) {
        var seq__439777__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__439777__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__439777__$1);
          var G__439787 = cljs.core.chunk_rest.call(null, seq__439777__$1);
          var G__439788 = c__3259__auto__;
          var G__439789 = cljs.core.count.call(null, c__3259__auto__);
          var G__439790 = 0;
          seq__439777 = G__439787;
          chunk__439778 = G__439788;
          count__439779 = G__439789;
          i__439780 = G__439790;
          continue
        }else {
          var vec__439782 = cljs.core.first.call(null, seq__439777__$1);
          var key = cljs.core.nth.call(null, vec__439782, 0, null);
          var f = cljs.core.nth.call(null, vec__439782, 1, null);
          f.call(null, key, this$, oldval, newval);
          var G__439791 = cljs.core.next.call(null, seq__439777__$1);
          var G__439792 = null;
          var G__439793 = 0;
          var G__439794 = 0;
          seq__439777 = G__439791;
          chunk__439778 = G__439792;
          count__439779 = G__439793;
          i__439780 = G__439794;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  return this$.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  return this$.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
crate.binding.__GT_notifier = function __GT_notifier(watches) {
  return new crate.binding.notifier(watches)
};
goog.provide("crate.binding.bound_collection");
crate.binding.bound_collection = function(atm, notif, opts, stuff) {
  this.atm = atm;
  this.notif = notif;
  this.opts = opts;
  this.stuff = stuff
};
crate.binding.bound_collection.cljs$lang$type = true;
crate.binding.bound_collection.cljs$lang$ctorStr = "crate.binding/bound-collection";
crate.binding.bound_collection.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "crate.binding/bound-collection")
};
crate.binding.bound_collection.prototype.crate$binding$bindable$ = true;
crate.binding.bound_collection.prototype.crate$binding$bindable$_value$arity$1 = function(this$) {
  var self__ = this;
  return cljs.core.map.call(null, "\ufdd0:elem", cljs.core.vals.call(null, this$.stuff))
};
crate.binding.bound_collection.prototype.crate$binding$bindable$_on_change$arity$2 = function(this$, func) {
  var self__ = this;
  return cljs.core.add_watch.call(null, self__.notif, cljs.core.gensym.call(null, "bound-coll"), function(_, ___$1, ___$2, p__439795) {
    var vec__439796 = p__439795;
    var event = cljs.core.nth.call(null, vec__439796, 0, null);
    var el = cljs.core.nth.call(null, vec__439796, 1, null);
    var v = cljs.core.nth.call(null, vec__439796, 2, null);
    return func.call(null, event, el, v)
  })
};
crate.binding.bound_collection.prototype.crate$binding$bindable_coll$ = true;
crate.binding.__GT_bound_collection = function __GT_bound_collection(atm, notif, opts, stuff) {
  return new crate.binding.bound_collection(atm, notif, opts, stuff)
};
crate.binding.opt = function opt(bc, k) {
  return bc.opts.call(null, k)
};
crate.binding.bc_add = function bc_add(bc, path, key) {
  var sa = crate.binding.subatom.call(null, bc.atm, path);
  var elem = crate.binding.opt.call(null, bc, "\ufdd0:as").call(null, sa);
  bc.stuff = cljs.core.assoc.call(null, bc.stuff, key, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:elem", elem, "\ufdd0:subatom", sa], true));
  return crate.binding.notify.call(null, bc.notif, null, cljs.core.PersistentVector.fromArray(["\ufdd0:add", elem, cljs.core.deref.call(null, sa)], true))
};
crate.binding.bc_remove = function bc_remove(bc, key) {
  var notif = bc.notif;
  var prev = bc.stuff.call(null, key);
  bc.stuff = cljs.core.dissoc.call(null, bc.stuff, key);
  crate.binding.notify.call(null, bc.notif, null, cljs.core.PersistentVector.fromArray(["\ufdd0:remove", (new cljs.core.Keyword("\ufdd0:elem")).call(null, prev), null], true));
  return crate.binding.sub_destroy_BANG_.call(null, (new cljs.core.Keyword("\ufdd0:subatom")).call(null, prev))
};
crate.binding.__GT_indexed = function __GT_indexed(coll) {
  if(cljs.core.map_QMARK_.call(null, coll)) {
    return cljs.core.seq.call(null, coll)
  }else {
    if(cljs.core.set_QMARK_.call(null, coll)) {
      return cljs.core.map.call(null, cljs.core.juxt.call(null, cljs.core.identity, cljs.core.identity), coll)
    }else {
      if("\ufdd0:else") {
        return cljs.core.map_indexed.call(null, cljs.core.vector, coll)
      }else {
        return null
      }
    }
  }
};
crate.binding.__GT_keyed = function __GT_keyed(coll, keyfn) {
  return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.map.call(null, keyfn, crate.binding.__GT_indexed.call(null, coll)))
};
crate.binding.__GT_path = function() {
  var __GT_path__delegate = function(bc, segs) {
    return cljs.core.concat.call(null, function() {
      var or__3943__auto__ = crate.binding.opt.call(null, bc, "\ufdd0:path");
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), segs)
  };
  var __GT_path = function(bc, var_args) {
    var segs = null;
    if(arguments.length > 1) {
      segs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return __GT_path__delegate.call(this, bc, segs)
  };
  __GT_path.cljs$lang$maxFixedArity = 1;
  __GT_path.cljs$lang$applyTo = function(arglist__439797) {
    var bc = cljs.core.first(arglist__439797);
    var segs = cljs.core.rest(arglist__439797);
    return __GT_path__delegate(bc, segs)
  };
  __GT_path.cljs$core$IFn$_invoke$arity$variadic = __GT_path__delegate;
  return __GT_path
}();
crate.binding.bc_compare = function bc_compare(bc, neue) {
  var prev = bc.stuff;
  var pset = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.keys.call(null, prev));
  var nset = crate.binding.__GT_keyed.call(null, neue, crate.binding.opt.call(null, bc, "\ufdd0:keyfn"));
  var added = cljs.core.into.call(null, cljs.core.sorted_set.call(null), clojure.set.difference.call(null, nset, pset));
  var removed = cljs.core.into.call(null, cljs.core.sorted_set.call(null), clojure.set.difference.call(null, pset, nset));
  var seq__439806_439814 = cljs.core.seq.call(null, added);
  var chunk__439807_439815 = null;
  var count__439808_439816 = 0;
  var i__439809_439817 = 0;
  while(true) {
    if(i__439809_439817 < count__439808_439816) {
      var a_439818 = cljs.core._nth.call(null, chunk__439807_439815, i__439809_439817);
      crate.binding.bc_add.call(null, bc, a_439818, a_439818);
      var G__439819 = seq__439806_439814;
      var G__439820 = chunk__439807_439815;
      var G__439821 = count__439808_439816;
      var G__439822 = i__439809_439817 + 1;
      seq__439806_439814 = G__439819;
      chunk__439807_439815 = G__439820;
      count__439808_439816 = G__439821;
      i__439809_439817 = G__439822;
      continue
    }else {
      var temp__4092__auto___439823 = cljs.core.seq.call(null, seq__439806_439814);
      if(temp__4092__auto___439823) {
        var seq__439806_439824__$1 = temp__4092__auto___439823;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__439806_439824__$1)) {
          var c__3259__auto___439825 = cljs.core.chunk_first.call(null, seq__439806_439824__$1);
          var G__439826 = cljs.core.chunk_rest.call(null, seq__439806_439824__$1);
          var G__439827 = c__3259__auto___439825;
          var G__439828 = cljs.core.count.call(null, c__3259__auto___439825);
          var G__439829 = 0;
          seq__439806_439814 = G__439826;
          chunk__439807_439815 = G__439827;
          count__439808_439816 = G__439828;
          i__439809_439817 = G__439829;
          continue
        }else {
          var a_439830 = cljs.core.first.call(null, seq__439806_439824__$1);
          crate.binding.bc_add.call(null, bc, a_439830, a_439830);
          var G__439831 = cljs.core.next.call(null, seq__439806_439824__$1);
          var G__439832 = null;
          var G__439833 = 0;
          var G__439834 = 0;
          seq__439806_439814 = G__439831;
          chunk__439807_439815 = G__439832;
          count__439808_439816 = G__439833;
          i__439809_439817 = G__439834;
          continue
        }
      }else {
      }
    }
    break
  }
  var seq__439810 = cljs.core.seq.call(null, removed);
  var chunk__439811 = null;
  var count__439812 = 0;
  var i__439813 = 0;
  while(true) {
    if(i__439813 < count__439812) {
      var r = cljs.core._nth.call(null, chunk__439811, i__439813);
      crate.binding.bc_remove.call(null, bc, r);
      var G__439835 = seq__439810;
      var G__439836 = chunk__439811;
      var G__439837 = count__439812;
      var G__439838 = i__439813 + 1;
      seq__439810 = G__439835;
      chunk__439811 = G__439836;
      count__439812 = G__439837;
      i__439813 = G__439838;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__439810);
      if(temp__4092__auto__) {
        var seq__439810__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__439810__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__439810__$1);
          var G__439839 = cljs.core.chunk_rest.call(null, seq__439810__$1);
          var G__439840 = c__3259__auto__;
          var G__439841 = cljs.core.count.call(null, c__3259__auto__);
          var G__439842 = 0;
          seq__439810 = G__439839;
          chunk__439811 = G__439840;
          count__439812 = G__439841;
          i__439813 = G__439842;
          continue
        }else {
          var r = cljs.core.first.call(null, seq__439810__$1);
          crate.binding.bc_remove.call(null, bc, r);
          var G__439843 = cljs.core.next.call(null, seq__439810__$1);
          var G__439844 = null;
          var G__439845 = 0;
          var G__439846 = 0;
          seq__439810 = G__439843;
          chunk__439811 = G__439844;
          count__439812 = G__439845;
          i__439813 = G__439846;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
crate.binding.bound_coll = function() {
  var bound_coll__delegate = function(atm, p__439847) {
    var vec__439850 = p__439847;
    var path = cljs.core.nth.call(null, vec__439850, 0, null);
    var opts = cljs.core.nth.call(null, vec__439850, 1, null);
    var vec__439851 = cljs.core.truth_(opts) ? cljs.core.PersistentVector.fromArray([path, opts], true) : cljs.core.PersistentVector.fromArray([null, path], true);
    var path__$1 = cljs.core.nth.call(null, vec__439851, 0, null);
    var opts__$1 = cljs.core.nth.call(null, vec__439851, 1, null);
    var atm__$1 = cljs.core.not.call(null, path__$1) ? atm : crate.binding.subatom.call(null, atm, path__$1);
    var opts__$2 = cljs.core.assoc.call(null, opts__$1, "\ufdd0:path", path__$1);
    var opts__$3 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0:keyfn")).call(null, opts__$2)) ? cljs.core.assoc.call(null, opts__$2, "\ufdd0:keyfn", cljs.core.first) : cljs.core.assoc.call(null, opts__$2, "\ufdd0:keyfn", cljs.core.comp.call(null, (new cljs.core.Keyword("\ufdd0:keyfn")).call(null, opts__$2), cljs.core.second));
    var bc = new crate.binding.bound_collection(atm__$1, new crate.binding.notifier(null), opts__$3, cljs.core.sorted_map.call(null));
    cljs.core.add_watch.call(null, atm__$1, cljs.core.gensym.call(null, "bound-coll"), function(_, ___$1, ___$2, neue) {
      return crate.binding.bc_compare.call(null, bc, neue)
    });
    crate.binding.bc_compare.call(null, bc, cljs.core.deref.call(null, atm__$1));
    return bc
  };
  var bound_coll = function(atm, var_args) {
    var p__439847 = null;
    if(arguments.length > 1) {
      p__439847 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return bound_coll__delegate.call(this, atm, p__439847)
  };
  bound_coll.cljs$lang$maxFixedArity = 1;
  bound_coll.cljs$lang$applyTo = function(arglist__439852) {
    var atm = cljs.core.first(arglist__439852);
    var p__439847 = cljs.core.rest(arglist__439852);
    return bound_coll__delegate(atm, p__439847)
  };
  bound_coll.cljs$core$IFn$_invoke$arity$variadic = bound_coll__delegate;
  return bound_coll
}();
crate.binding.map_bound = function() {
  var map_bound__delegate = function(as, atm, p__439853) {
    var vec__439855 = p__439853;
    var opts = cljs.core.nth.call(null, vec__439855, 0, null);
    var opts__$1 = cljs.core.assoc.call(null, opts, "\ufdd0:as", as);
    var atm__$1 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0:path")).call(null, opts__$1)) ? atm : crate.binding.subatom.call(null, atm, (new cljs.core.Keyword("\ufdd0:path")).call(null, opts__$1));
    var opts__$2 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0:keyfn")).call(null, opts__$1)) ? cljs.core.assoc.call(null, opts__$1, "\ufdd0:keyfn", cljs.core.first) : cljs.core.assoc.call(null, opts__$1, "\ufdd0:keyfn", cljs.core.comp.call(null, (new cljs.core.Keyword("\ufdd0:keyfn")).call(null, opts__$1), cljs.core.second));
    var bc = new crate.binding.bound_collection(atm__$1, new crate.binding.notifier(null), opts__$2, cljs.core.sorted_map.call(null));
    cljs.core.add_watch.call(null, atm__$1, cljs.core.gensym.call(null, "bound-coll"), function(_, ___$1, ___$2, neue) {
      return crate.binding.bc_compare.call(null, bc, neue)
    });
    crate.binding.bc_compare.call(null, bc, cljs.core.deref.call(null, atm__$1));
    return bc
  };
  var map_bound = function(as, atm, var_args) {
    var p__439853 = null;
    if(arguments.length > 2) {
      p__439853 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return map_bound__delegate.call(this, as, atm, p__439853)
  };
  map_bound.cljs$lang$maxFixedArity = 2;
  map_bound.cljs$lang$applyTo = function(arglist__439856) {
    var as = cljs.core.first(arglist__439856);
    arglist__439856 = cljs.core.next(arglist__439856);
    var atm = cljs.core.first(arglist__439856);
    var p__439853 = cljs.core.rest(arglist__439856);
    return map_bound__delegate(as, atm, p__439853)
  };
  map_bound.cljs$core$IFn$_invoke$arity$variadic = map_bound__delegate;
  return map_bound
}();
crate.binding.binding_QMARK_ = function binding_QMARK_(b) {
  var G__439858 = b;
  if(G__439858) {
    if(cljs.core.truth_(function() {
      var or__3943__auto__ = null;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return G__439858.crate$binding$bindable$
      }
    }())) {
      return true
    }else {
      if(!G__439858.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, crate.binding.bindable, G__439858)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, crate.binding.bindable, G__439858)
  }
};
crate.binding.binding_coll_QMARK_ = function binding_coll_QMARK_(b) {
  var G__439860 = b;
  if(G__439860) {
    if(cljs.core.truth_(function() {
      var or__3943__auto__ = null;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return G__439860.crate$binding$bindable_coll$
      }
    }())) {
      return true
    }else {
      if(!G__439860.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, crate.binding.bindable_coll, G__439860)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, crate.binding.bindable_coll, G__439860)
  }
};
crate.binding.deref_QMARK_ = function deref_QMARK_(atm) {
  var G__439862 = atm;
  if(G__439862) {
    if(function() {
      var or__3943__auto__ = G__439862.cljs$lang$protocol_mask$partition0$ & 32768;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__439862.cljs$core$IDeref$
      }
    }()) {
      return true
    }else {
      if(!G__439862.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IDeref, G__439862)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IDeref, G__439862)
  }
};
crate.binding.value = function value(b) {
  return crate.binding._value.call(null, b)
};
crate.binding.index = function index(sub_atom) {
  return cljs.core.last.call(null, sub_atom.path)
};
crate.binding.on_change = function on_change(b, func) {
  return crate.binding._on_change.call(null, b, func)
};
crate.binding.bound = function() {
  var bound__delegate = function(atm, p__439863) {
    var vec__439865 = p__439863;
    var func = cljs.core.nth.call(null, vec__439865, 0, null);
    var func__$1 = function() {
      var or__3943__auto__ = func;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.identity
      }
    }();
    return new crate.binding.atom_binding(atm, func__$1)
  };
  var bound = function(atm, var_args) {
    var p__439863 = null;
    if(arguments.length > 1) {
      p__439863 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return bound__delegate.call(this, atm, p__439863)
  };
  bound.cljs$lang$maxFixedArity = 1;
  bound.cljs$lang$applyTo = function(arglist__439866) {
    var atm = cljs.core.first(arglist__439866);
    var p__439863 = cljs.core.rest(arglist__439866);
    return bound__delegate(atm, p__439863)
  };
  bound.cljs$core$IFn$_invoke$arity$variadic = bound__delegate;
  return bound
}();
goog.provide("crate.util");
goog.require("cljs.core");
goog.require("clojure.string");
crate.util._STAR_base_url_STAR_ = null;
crate.util.as_str = function() {
  var as_str = null;
  var as_str__0 = function() {
    return""
  };
  var as_str__1 = function(x) {
    if(function() {
      var or__3943__auto__ = x instanceof cljs.core.Symbol;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return cljs.core.keyword_QMARK_.call(null, x)
      }
    }()) {
      return cljs.core.name.call(null, x)
    }else {
      return[cljs.core.str(x)].join("")
    }
  };
  var as_str__2 = function() {
    var G__440020__delegate = function(x, xs) {
      return function(s, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__440021 = [cljs.core.str(s), cljs.core.str(as_str.call(null, cljs.core.first.call(null, more)))].join("");
            var G__440022 = cljs.core.next.call(null, more);
            s = G__440021;
            more = G__440022;
            continue
          }else {
            return s
          }
          break
        }
      }.call(null, as_str.call(null, x), xs)
    };
    var G__440020 = function(x, var_args) {
      var xs = null;
      if(arguments.length > 1) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__440020__delegate.call(this, x, xs)
    };
    G__440020.cljs$lang$maxFixedArity = 1;
    G__440020.cljs$lang$applyTo = function(arglist__440023) {
      var x = cljs.core.first(arglist__440023);
      var xs = cljs.core.rest(arglist__440023);
      return G__440020__delegate(x, xs)
    };
    G__440020.cljs$core$IFn$_invoke$arity$variadic = G__440020__delegate;
    return G__440020
  }();
  as_str = function(x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return as_str__0.call(this);
      case 1:
        return as_str__1.call(this, x);
      default:
        return as_str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  as_str.cljs$lang$maxFixedArity = 1;
  as_str.cljs$lang$applyTo = as_str__2.cljs$lang$applyTo;
  as_str.cljs$core$IFn$_invoke$arity$0 = as_str__0;
  as_str.cljs$core$IFn$_invoke$arity$1 = as_str__1;
  as_str.cljs$core$IFn$_invoke$arity$variadic = as_str__2.cljs$core$IFn$_invoke$arity$variadic;
  return as_str
}();
crate.util.escape_html = function escape_html(text) {
  return clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, crate.util.as_str.call(null, text), "&", "&amp;"), "<", "&lt;"), ">", "&gt;"), '"', "&quot;")
};
crate.util.to_uri = function to_uri(uri) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, /^\w+:.*/, uri))) {
    return uri
  }else {
    return[cljs.core.str(crate.util._STAR_base_url_STAR_), cljs.core.str(uri)].join("")
  }
};
crate.util.url_encode_component = function url_encode_component(s) {
  return encodeURIComponent(crate.util.as_str.call(null, s))
};
crate.util.url_encode = function url_encode(params) {
  return clojure.string.join.call(null, "&", function() {
    var iter__3228__auto__ = function iter__440032(s__440033) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__440033__$1 = s__440033;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__440033__$1);
          if(temp__4092__auto__) {
            var s__440033__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__440033__$2)) {
              var c__3226__auto__ = cljs.core.chunk_first.call(null, s__440033__$2);
              var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
              var b__440035 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
              if(function() {
                var i__440034 = 0;
                while(true) {
                  if(i__440034 < size__3227__auto__) {
                    var vec__440038 = cljs.core._nth.call(null, c__3226__auto__, i__440034);
                    var k = cljs.core.nth.call(null, vec__440038, 0, null);
                    var v = cljs.core.nth.call(null, vec__440038, 1, null);
                    cljs.core.chunk_append.call(null, b__440035, [cljs.core.str(crate.util.url_encode_component.call(null, k)), cljs.core.str("="), cljs.core.str(crate.util.url_encode_component.call(null, v))].join(""));
                    var G__440040 = i__440034 + 1;
                    i__440034 = G__440040;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__440035), iter__440032.call(null, cljs.core.chunk_rest.call(null, s__440033__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__440035), null)
              }
            }else {
              var vec__440039 = cljs.core.first.call(null, s__440033__$2);
              var k = cljs.core.nth.call(null, vec__440039, 0, null);
              var v = cljs.core.nth.call(null, vec__440039, 1, null);
              return cljs.core.cons.call(null, [cljs.core.str(crate.util.url_encode_component.call(null, k)), cljs.core.str("="), cljs.core.str(crate.util.url_encode_component.call(null, v))].join(""), iter__440032.call(null, cljs.core.rest.call(null, s__440033__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3228__auto__.call(null, params)
  }())
};
crate.util.url = function() {
  var url__delegate = function(args) {
    var params = cljs.core.last.call(null, args);
    var args__$1 = cljs.core.butlast.call(null, args);
    return[cljs.core.str(crate.util.to_uri.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, args__$1)), cljs.core.str(cljs.core.map_QMARK_.call(null, params) ? [cljs.core.str("?"), cljs.core.str(crate.util.url_encode.call(null, params))].join("") : params)].join("")))].join("")
  };
  var url = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return url__delegate.call(this, args)
  };
  url.cljs$lang$maxFixedArity = 0;
  url.cljs$lang$applyTo = function(arglist__440041) {
    var args = cljs.core.seq(arglist__440041);
    return url__delegate(args)
  };
  url.cljs$core$IFn$_invoke$arity$variadic = url__delegate;
  return url
}();
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.relativePositionX = function(box, coord) {
  if(coord.x < box.left) {
    return coord.x - box.left
  }else {
    if(coord.x > box.right) {
      return coord.x - box.right
    }
  }
  return 0
};
goog.math.Box.relativePositionY = function(box, coord) {
  if(coord.y < box.top) {
    return coord.y - box.top
  }else {
    if(coord.y > box.bottom) {
      return coord.y - box.bottom
    }
  }
  return 0
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y)
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property) || ""
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node)
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.supportsGetBoundingClientRect_ = function(el) {
  if(goog.userAgent.MOBILE && goog.userAgent.WEBKIT) {
    var win = el.ownerDocument.defaultView;
    if(win != win.top) {
      return false
    }
  }
  return!!el.getBoundingClientRect
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(8)) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if(opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2
  }else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(goog.style.supportsGetBoundingClientRect_(el)) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    el = el;
    if(goog.style.supportsGetBoundingClientRect_(el)) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
    if(goog.userAgent.GECKO && !goog.userAgent.isVersion(12)) {
      pos = goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el))
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    element.innerHTML = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var property;
  if(goog.userAgent.IE) {
    property = "-ms-transform"
  }else {
    if(goog.userAgent.WEBKIT) {
      property = "-webkit-transform"
    }else {
      if(goog.userAgent.OPERA) {
        property = "-o-transform"
      }else {
        if(goog.userAgent.GECKO) {
          property = "-moz-transform"
        }
      }
    }
  }
  var transform;
  if(property) {
    transform = goog.style.getStyle_(element, property)
  }
  if(!transform) {
    transform = goog.style.getStyle_(element, "transform")
  }
  if(!transform) {
    return new goog.math.Coordinate(0, 0)
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if(!matches) {
    return new goog.math.Coordinate(0, 0)
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]))
};
goog.provide("crate.compiler");
goog.require("cljs.core");
goog.require("crate.binding");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("goog.dom");
crate.compiler.xmlns = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:xhtml", "http://www.w3.org/1999/xhtml", "\ufdd0:svg", "http://www.w3.org/2000/svg"], true);
crate.compiler.group_id = cljs.core.atom.call(null, 0);
crate.compiler.bindings = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
crate.compiler.capture_binding = function capture_binding(tag, b) {
  return cljs.core.swap_BANG_.call(null, crate.compiler.bindings, cljs.core.conj, cljs.core.PersistentVector.fromArray([tag, b], true))
};
crate.compiler.as_content = function as_content(parent, content) {
  var seq__439872 = cljs.core.seq.call(null, content);
  var chunk__439873 = null;
  var count__439874 = 0;
  var i__439875 = 0;
  while(true) {
    if(i__439875 < count__439874) {
      var c = cljs.core._nth.call(null, chunk__439873, i__439875);
      var child_439876 = c == null ? null : cljs.core.map_QMARK_.call(null, c) ? function() {
        throw"Maps cannot be used as content";
      }() : cljs.core.string_QMARK_.call(null, c) ? goog.dom.createTextNode(c) : cljs.core.vector_QMARK_.call(null, c) ? crate.compiler.elem_factory.call(null, c) : cljs.core.seq_QMARK_.call(null, c) ? as_content.call(null, parent, c) : cljs.core.truth_(crate.binding.binding_coll_QMARK_.call(null, c)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0:coll", c);
        return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c)], true))
      }() : cljs.core.truth_(crate.binding.binding_QMARK_.call(null, c)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0:text", c);
        return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c)], true))
      }() : cljs.core.truth_(c.nodeName) ? c : cljs.core.truth_(c.get) ? c.get(0) : "\ufdd0:else" ? goog.dom.createTextNode([cljs.core.str(c)].join("")) : null;
      if(cljs.core.truth_(child_439876)) {
        goog.dom.appendChild(parent, child_439876)
      }else {
      }
      var G__439877 = seq__439872;
      var G__439878 = chunk__439873;
      var G__439879 = count__439874;
      var G__439880 = i__439875 + 1;
      seq__439872 = G__439877;
      chunk__439873 = G__439878;
      count__439874 = G__439879;
      i__439875 = G__439880;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__439872);
      if(temp__4092__auto__) {
        var seq__439872__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__439872__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__439872__$1);
          var G__439881 = cljs.core.chunk_rest.call(null, seq__439872__$1);
          var G__439882 = c__3259__auto__;
          var G__439883 = cljs.core.count.call(null, c__3259__auto__);
          var G__439884 = 0;
          seq__439872 = G__439881;
          chunk__439873 = G__439882;
          count__439874 = G__439883;
          i__439875 = G__439884;
          continue
        }else {
          var c = cljs.core.first.call(null, seq__439872__$1);
          var child_439885 = c == null ? null : cljs.core.map_QMARK_.call(null, c) ? function() {
            throw"Maps cannot be used as content";
          }() : cljs.core.string_QMARK_.call(null, c) ? goog.dom.createTextNode(c) : cljs.core.vector_QMARK_.call(null, c) ? crate.compiler.elem_factory.call(null, c) : cljs.core.seq_QMARK_.call(null, c) ? as_content.call(null, parent, c) : cljs.core.truth_(crate.binding.binding_coll_QMARK_.call(null, c)) ? function() {
            crate.compiler.capture_binding.call(null, "\ufdd0:coll", c);
            return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c)], true))
          }() : cljs.core.truth_(crate.binding.binding_QMARK_.call(null, c)) ? function() {
            crate.compiler.capture_binding.call(null, "\ufdd0:text", c);
            return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c)], true))
          }() : cljs.core.truth_(c.nodeName) ? c : cljs.core.truth_(c.get) ? c.get(0) : "\ufdd0:else" ? goog.dom.createTextNode([cljs.core.str(c)].join("")) : null;
          if(cljs.core.truth_(child_439885)) {
            goog.dom.appendChild(parent, child_439885)
          }else {
          }
          var G__439886 = cljs.core.next.call(null, seq__439872__$1);
          var G__439887 = null;
          var G__439888 = 0;
          var G__439889 = 0;
          seq__439872 = G__439886;
          chunk__439873 = G__439887;
          count__439874 = G__439888;
          i__439875 = G__439889;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
crate.compiler.dom_binding = function() {
  var method_table__3316__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__3317__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__3318__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__3319__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__3320__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, "\ufdd0:hierarchy", cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("dom-binding", function(type, _, ___$1) {
    return type
  }, "\ufdd0:default", hierarchy__3320__auto__, method_table__3316__auto__, prefer_table__3317__auto__, method_cache__3318__auto__, cached_hierarchy__3319__auto__)
}();
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0:text", function(_, b, elem) {
  return crate.binding.on_change.call(null, b, function(v) {
    goog.dom.removeChildren(elem);
    return crate.compiler.as_content.call(null, elem, cljs.core.PersistentVector.fromArray([v], true))
  })
});
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0:attr", function(_, p__439890, elem) {
  var vec__439891 = p__439890;
  var k = cljs.core.nth.call(null, vec__439891, 0, null);
  var b = cljs.core.nth.call(null, vec__439891, 1, null);
  return crate.binding.on_change.call(null, b, function(v) {
    return crate.compiler.dom_attr.call(null, elem, k, v)
  })
});
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0:style", function(_, p__439892, elem) {
  var vec__439893 = p__439892;
  var k = cljs.core.nth.call(null, vec__439893, 0, null);
  var b = cljs.core.nth.call(null, vec__439893, 1, null);
  return crate.binding.on_change.call(null, b, function(v) {
    if(cljs.core.truth_(k)) {
      return crate.compiler.dom_style.call(null, elem, k, v)
    }else {
      return crate.compiler.dom_style.call(null, elem, v)
    }
  })
});
crate.compiler.dom_add = function dom_add(bc, parent, elem, v) {
  var temp__4090__auto__ = crate.binding.opt.call(null, bc, "\ufdd0:add");
  if(cljs.core.truth_(temp__4090__auto__)) {
    var adder = temp__4090__auto__;
    return adder.call(null, parent, elem, v)
  }else {
    return goog.dom.appendChild(parent, elem)
  }
};
crate.compiler.dom_remove = function dom_remove(bc, elem) {
  var temp__4090__auto__ = crate.binding.opt.call(null, bc, "\ufdd0:remove");
  if(cljs.core.truth_(temp__4090__auto__)) {
    var remover = temp__4090__auto__;
    return remover.call(null, elem)
  }else {
    return goog.dom.removeNode(elem)
  }
};
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0:coll", function(_, bc, parent) {
  return crate.binding.on_change.call(null, bc, function(type, elem, v) {
    var pred__439894 = cljs.core._EQ_;
    var expr__439895 = type;
    if(pred__439894.call(null, "\ufdd0:add", expr__439895)) {
      return crate.compiler.dom_add.call(null, bc, parent, elem, v)
    }else {
      if(pred__439894.call(null, "\ufdd0:remove", expr__439895)) {
        return crate.compiler.dom_remove.call(null, bc, elem)
      }else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__439895)].join(""));
      }
    }
  })
});
crate.compiler.handle_bindings = function handle_bindings(bs, elem) {
  var seq__439903 = cljs.core.seq.call(null, bs);
  var chunk__439904 = null;
  var count__439905 = 0;
  var i__439906 = 0;
  while(true) {
    if(i__439906 < count__439905) {
      var vec__439907 = cljs.core._nth.call(null, chunk__439904, i__439906);
      var type = cljs.core.nth.call(null, vec__439907, 0, null);
      var b = cljs.core.nth.call(null, vec__439907, 1, null);
      crate.compiler.dom_binding.call(null, type, b, elem);
      var G__439909 = seq__439903;
      var G__439910 = chunk__439904;
      var G__439911 = count__439905;
      var G__439912 = i__439906 + 1;
      seq__439903 = G__439909;
      chunk__439904 = G__439910;
      count__439905 = G__439911;
      i__439906 = G__439912;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__439903);
      if(temp__4092__auto__) {
        var seq__439903__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__439903__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__439903__$1);
          var G__439913 = cljs.core.chunk_rest.call(null, seq__439903__$1);
          var G__439914 = c__3259__auto__;
          var G__439915 = cljs.core.count.call(null, c__3259__auto__);
          var G__439916 = 0;
          seq__439903 = G__439913;
          chunk__439904 = G__439914;
          count__439905 = G__439915;
          i__439906 = G__439916;
          continue
        }else {
          var vec__439908 = cljs.core.first.call(null, seq__439903__$1);
          var type = cljs.core.nth.call(null, vec__439908, 0, null);
          var b = cljs.core.nth.call(null, vec__439908, 1, null);
          crate.compiler.dom_binding.call(null, type, b, elem);
          var G__439917 = cljs.core.next.call(null, seq__439903__$1);
          var G__439918 = null;
          var G__439919 = 0;
          var G__439920 = 0;
          seq__439903 = G__439917;
          chunk__439904 = G__439918;
          count__439905 = G__439919;
          i__439906 = G__439920;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
crate.compiler.dom_style = function() {
  var dom_style = null;
  var dom_style__2 = function(elem, v) {
    if(cljs.core.string_QMARK_.call(null, v)) {
      elem.setAttribute("style", v)
    }else {
      if(cljs.core.map_QMARK_.call(null, v)) {
        var seq__439927_439933 = cljs.core.seq.call(null, v);
        var chunk__439928_439934 = null;
        var count__439929_439935 = 0;
        var i__439930_439936 = 0;
        while(true) {
          if(i__439930_439936 < count__439929_439935) {
            var vec__439931_439937 = cljs.core._nth.call(null, chunk__439928_439934, i__439930_439936);
            var k_439938 = cljs.core.nth.call(null, vec__439931_439937, 0, null);
            var v_439939__$1 = cljs.core.nth.call(null, vec__439931_439937, 1, null);
            dom_style.call(null, elem, k_439938, v_439939__$1);
            var G__439940 = seq__439927_439933;
            var G__439941 = chunk__439928_439934;
            var G__439942 = count__439929_439935;
            var G__439943 = i__439930_439936 + 1;
            seq__439927_439933 = G__439940;
            chunk__439928_439934 = G__439941;
            count__439929_439935 = G__439942;
            i__439930_439936 = G__439943;
            continue
          }else {
            var temp__4092__auto___439944 = cljs.core.seq.call(null, seq__439927_439933);
            if(temp__4092__auto___439944) {
              var seq__439927_439945__$1 = temp__4092__auto___439944;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__439927_439945__$1)) {
                var c__3259__auto___439946 = cljs.core.chunk_first.call(null, seq__439927_439945__$1);
                var G__439947 = cljs.core.chunk_rest.call(null, seq__439927_439945__$1);
                var G__439948 = c__3259__auto___439946;
                var G__439949 = cljs.core.count.call(null, c__3259__auto___439946);
                var G__439950 = 0;
                seq__439927_439933 = G__439947;
                chunk__439928_439934 = G__439948;
                count__439929_439935 = G__439949;
                i__439930_439936 = G__439950;
                continue
              }else {
                var vec__439932_439951 = cljs.core.first.call(null, seq__439927_439945__$1);
                var k_439952 = cljs.core.nth.call(null, vec__439932_439951, 0, null);
                var v_439953__$1 = cljs.core.nth.call(null, vec__439932_439951, 1, null);
                dom_style.call(null, elem, k_439952, v_439953__$1);
                var G__439954 = cljs.core.next.call(null, seq__439927_439945__$1);
                var G__439955 = null;
                var G__439956 = 0;
                var G__439957 = 0;
                seq__439927_439933 = G__439954;
                chunk__439928_439934 = G__439955;
                count__439929_439935 = G__439956;
                i__439930_439936 = G__439957;
                continue
              }
            }else {
            }
          }
          break
        }
      }else {
        if(cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v))) {
          crate.compiler.capture_binding.call(null, "\ufdd0:style", cljs.core.PersistentVector.fromArray([null, v], true));
          dom_style.call(null, elem, crate.binding.value.call(null, v))
        }else {
        }
      }
    }
    return elem
  };
  var dom_style__3 = function(elem, k, v) {
    var v__$1 = cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v)) ? function() {
      crate.compiler.capture_binding.call(null, "\ufdd0:style", cljs.core.PersistentVector.fromArray([k, v], true));
      return crate.binding.value.call(null, v)
    }() : v;
    return goog.style.setStyle(elem, cljs.core.name.call(null, k), v__$1)
  };
  dom_style = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return dom_style__2.call(this, elem, k);
      case 3:
        return dom_style__3.call(this, elem, k, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dom_style.cljs$core$IFn$_invoke$arity$2 = dom_style__2;
  dom_style.cljs$core$IFn$_invoke$arity$3 = dom_style__3;
  return dom_style
}();
crate.compiler.dom_attr = function() {
  var dom_attr = null;
  var dom_attr__2 = function(elem, attrs) {
    if(cljs.core.truth_(elem)) {
      if(!cljs.core.map_QMARK_.call(null, attrs)) {
        return elem.getAttribute(cljs.core.name.call(null, attrs))
      }else {
        var seq__439964_439970 = cljs.core.seq.call(null, attrs);
        var chunk__439965_439971 = null;
        var count__439966_439972 = 0;
        var i__439967_439973 = 0;
        while(true) {
          if(i__439967_439973 < count__439966_439972) {
            var vec__439968_439974 = cljs.core._nth.call(null, chunk__439965_439971, i__439967_439973);
            var k_439975 = cljs.core.nth.call(null, vec__439968_439974, 0, null);
            var v_439976 = cljs.core.nth.call(null, vec__439968_439974, 1, null);
            dom_attr.call(null, elem, k_439975, v_439976);
            var G__439977 = seq__439964_439970;
            var G__439978 = chunk__439965_439971;
            var G__439979 = count__439966_439972;
            var G__439980 = i__439967_439973 + 1;
            seq__439964_439970 = G__439977;
            chunk__439965_439971 = G__439978;
            count__439966_439972 = G__439979;
            i__439967_439973 = G__439980;
            continue
          }else {
            var temp__4092__auto___439981 = cljs.core.seq.call(null, seq__439964_439970);
            if(temp__4092__auto___439981) {
              var seq__439964_439982__$1 = temp__4092__auto___439981;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__439964_439982__$1)) {
                var c__3259__auto___439983 = cljs.core.chunk_first.call(null, seq__439964_439982__$1);
                var G__439984 = cljs.core.chunk_rest.call(null, seq__439964_439982__$1);
                var G__439985 = c__3259__auto___439983;
                var G__439986 = cljs.core.count.call(null, c__3259__auto___439983);
                var G__439987 = 0;
                seq__439964_439970 = G__439984;
                chunk__439965_439971 = G__439985;
                count__439966_439972 = G__439986;
                i__439967_439973 = G__439987;
                continue
              }else {
                var vec__439969_439988 = cljs.core.first.call(null, seq__439964_439982__$1);
                var k_439989 = cljs.core.nth.call(null, vec__439969_439988, 0, null);
                var v_439990 = cljs.core.nth.call(null, vec__439969_439988, 1, null);
                dom_attr.call(null, elem, k_439989, v_439990);
                var G__439991 = cljs.core.next.call(null, seq__439964_439982__$1);
                var G__439992 = null;
                var G__439993 = 0;
                var G__439994 = 0;
                seq__439964_439970 = G__439991;
                chunk__439965_439971 = G__439992;
                count__439966_439972 = G__439993;
                i__439967_439973 = G__439994;
                continue
              }
            }else {
            }
          }
          break
        }
        return elem
      }
    }else {
      return null
    }
  };
  var dom_attr__3 = function(elem, k, v) {
    if(cljs.core._EQ_.call(null, k, "\ufdd0:style")) {
      crate.compiler.dom_style.call(null, elem, v)
    }else {
      var v_439995__$1 = cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0:attr", cljs.core.PersistentVector.fromArray([k, v], true));
        return crate.binding.value.call(null, v)
      }() : v;
      elem.setAttribute(cljs.core.name.call(null, k), v_439995__$1)
    }
    return elem
  };
  dom_attr = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return dom_attr__2.call(this, elem, k);
      case 3:
        return dom_attr__3.call(this, elem, k, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dom_attr.cljs$core$IFn$_invoke$arity$2 = dom_attr__2;
  dom_attr.cljs$core$IFn$_invoke$arity$3 = dom_attr__3;
  return dom_attr
}();
crate.compiler.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
crate.compiler.normalize_map_attrs = function normalize_map_attrs(map_attrs) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__439999) {
    var vec__440000 = p__439999;
    var n = cljs.core.nth.call(null, vec__440000, 0, null);
    var v = cljs.core.nth.call(null, vec__440000, 1, null);
    if(v === true) {
      return cljs.core.PersistentVector.fromArray([n, cljs.core.name.call(null, n)], true)
    }else {
      return cljs.core.PersistentVector.fromArray([n, v], true)
    }
  }, cljs.core.filter.call(null, cljs.core.comp.call(null, cljs.core.boolean$, cljs.core.second), map_attrs)))
};
crate.compiler.normalize_element = function normalize_element(p__440001) {
  var vec__440006 = p__440001;
  var tag = cljs.core.nth.call(null, vec__440006, 0, null);
  var content = cljs.core.nthnext.call(null, vec__440006, 1);
  if(!function() {
    var or__3943__auto__ = cljs.core.keyword_QMARK_.call(null, tag);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = tag instanceof cljs.core.Symbol;
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        return cljs.core.string_QMARK_.call(null, tag)
      }
    }
  }()) {
    throw[cljs.core.str(tag), cljs.core.str(" is not a valid tag name.")].join("");
  }else {
  }
  var vec__440007 = cljs.core.re_matches.call(null, crate.compiler.re_tag, cljs.core.name.call(null, tag));
  var _ = cljs.core.nth.call(null, vec__440007, 0, null);
  var tag__$1 = cljs.core.nth.call(null, vec__440007, 1, null);
  var id = cljs.core.nth.call(null, vec__440007, 2, null);
  var class$ = cljs.core.nth.call(null, vec__440007, 3, null);
  var vec__440008 = function() {
    var vec__440009 = clojure.string.split.call(null, tag__$1, /:/);
    var nsp = cljs.core.nth.call(null, vec__440009, 0, null);
    var t = cljs.core.nth.call(null, vec__440009, 1, null);
    var ns_xmlns = crate.compiler.xmlns.call(null, cljs.core.keyword.call(null, nsp));
    if(cljs.core.truth_(t)) {
      return cljs.core.PersistentVector.fromArray([function() {
        var or__3943__auto__ = ns_xmlns;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return nsp
        }
      }(), t], true)
    }else {
      return cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword("\ufdd0:xhtml")).call(null, crate.compiler.xmlns), nsp], true)
    }
  }();
  var nsp = cljs.core.nth.call(null, vec__440008, 0, null);
  var tag__$2 = cljs.core.nth.call(null, vec__440008, 1, null);
  var tag_attrs = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(vec__440007, _, tag__$1, id, class$, vec__440008, nsp, tag__$2) {
    return function(p1__439996_SHARP_) {
      return!(cljs.core.second.call(null, p1__439996_SHARP_) == null)
    }
  }(vec__440007, _, tag__$1, id, class$, vec__440008, nsp, tag__$2), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", function() {
    var or__3943__auto__ = id;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return null
    }
  }(), "\ufdd0:class", cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, /\./, " ") : null], true)));
  var map_attrs = cljs.core.first.call(null, content);
  if(cljs.core.map_QMARK_.call(null, map_attrs)) {
    return cljs.core.PersistentVector.fromArray([nsp, tag__$2, cljs.core.merge.call(null, tag_attrs, crate.compiler.normalize_map_attrs.call(null, map_attrs)), cljs.core.next.call(null, content)], true)
  }else {
    return cljs.core.PersistentVector.fromArray([nsp, tag__$2, tag_attrs, content], true)
  }
};
crate.compiler.parse_content = function parse_content(elem, content) {
  var attrs = cljs.core.first.call(null, content);
  if(cljs.core.map_QMARK_.call(null, attrs)) {
    crate.compiler.dom_attr.call(null, elem, attrs);
    return cljs.core.rest.call(null, content)
  }else {
    return content
  }
};
crate.compiler.create_elem = cljs.core.truth_(document.createElementNS) ? function(nsp, tag) {
  return document.createElementNS(nsp, tag)
} : function(_, tag) {
  return document.createElement(tag)
};
crate.compiler.elem_factory = function elem_factory(tag_def) {
  var bindings440013 = crate.compiler.bindings;
  try {
    crate.compiler.bindings = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
    var vec__440015 = crate.compiler.normalize_element.call(null, tag_def);
    var nsp = cljs.core.nth.call(null, vec__440015, 0, null);
    var tag = cljs.core.nth.call(null, vec__440015, 1, null);
    var attrs = cljs.core.nth.call(null, vec__440015, 2, null);
    var content = cljs.core.nth.call(null, vec__440015, 3, null);
    var elem = crate.compiler.create_elem.call(null, nsp, tag);
    crate.compiler.dom_attr.call(null, elem, attrs);
    crate.compiler.as_content.call(null, elem, content);
    crate.compiler.handle_bindings.call(null, cljs.core.deref.call(null, crate.compiler.bindings), elem);
    return elem
  }finally {
    crate.compiler.bindings = bindings440013
  }
};
crate.compiler.add_optional_attrs = function add_optional_attrs(func) {
  return function() {
    var G__440018__delegate = function(args) {
      if(cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__440017 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag = cljs.core.nth.call(null, vec__440017, 0, null);
        var body = cljs.core.nthnext.call(null, vec__440017, 1);
        if(cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body))
        }else {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.first.call(null, args), body)
        }
      }else {
        return cljs.core.apply.call(null, func, args)
      }
    };
    var G__440018 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__440018__delegate.call(this, args)
    };
    G__440018.cljs$lang$maxFixedArity = 0;
    G__440018.cljs$lang$applyTo = function(arglist__440019) {
      var args = cljs.core.seq(arglist__440019);
      return G__440018__delegate(args)
    };
    G__440018.cljs$core$IFn$_invoke$arity$variadic = G__440018__delegate;
    return G__440018
  }()
};
goog.provide("crate.core");
goog.require("cljs.core");
goog.require("crate.util");
goog.require("crate.compiler");
goog.require("goog.dom");
crate.core.group_id = cljs.core.atom.call(null, 0);
crate.core.raw = function raw(html_str) {
  return goog.dom.htmlToDocumentFragment(html_str)
};
crate.core.html = function() {
  var html__delegate = function(tags) {
    var res = cljs.core.map.call(null, crate.compiler.elem_factory, tags);
    if(cljs.core.truth_(cljs.core.second.call(null, res))) {
      return res
    }else {
      return cljs.core.first.call(null, res)
    }
  };
  var html = function(var_args) {
    var tags = null;
    if(arguments.length > 0) {
      tags = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return html__delegate.call(this, tags)
  };
  html.cljs$lang$maxFixedArity = 0;
  html.cljs$lang$applyTo = function(arglist__439867) {
    var tags = cljs.core.seq(arglist__439867);
    return html__delegate(tags)
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html
}();
crate.core.h = crate.util.escape_html;
goog.provide("orchard.object");
goog.require("cljs.core");
goog.require("orchard.util.dom");
goog.require("orchard.util.log");
goog.require("orchard.observe");
goog.require("cljs.core.async");
goog.require("crate.binding");
goog.require("crate.binding");
goog.require("orchard.util.dom");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("orchard.observe");
goog.require("clojure.set");
goog.require("crate.core");
orchard.object.id_counter = cljs.core.atom.call(null, 0);
orchard.object.instances = cljs.core.atom.call(null, cljs.core.sorted_map.call(null));
orchard.object.behaviors = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
orchard.object.object_defs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
orchard.object.tags = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
orchard.object.add = function add(obj) {
  return cljs.core.swap_BANG_.call(null, orchard.object.object_defs, cljs.core.assoc, (new cljs.core.Keyword("\ufdd0:type")).call(null, obj), obj)
};
orchard.object.add_b = function add_b(obj) {
  return cljs.core.swap_BANG_.call(null, orchard.object.behaviors, cljs.core.assoc, (new cljs.core.Keyword("\ufdd0:name")).call(null, obj), obj)
};
orchard.object.__GT_triggers = function __GT_triggers(obj, behs) {
  var listeners = cljs.core.reduce.call(null, function(res, be) {
    return cljs.core.merge_with.call(null, cljs.core.concat, res, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
      var iter__3228__auto__ = function iter__434204(s__434205) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__434205__$1 = s__434205;
          while(true) {
            var temp__4092__auto__ = cljs.core.seq.call(null, s__434205__$1);
            if(temp__4092__auto__) {
              var s__434205__$2 = temp__4092__auto__;
              if(cljs.core.chunked_seq_QMARK_.call(null, s__434205__$2)) {
                var c__3226__auto__ = cljs.core.chunk_first.call(null, s__434205__$2);
                var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
                var b__434207 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
                if(function() {
                  var i__434206 = 0;
                  while(true) {
                    if(i__434206 < size__3227__auto__) {
                      var t = cljs.core._nth.call(null, c__3226__auto__, i__434206);
                      cljs.core.chunk_append.call(null, b__434207, cljs.core.PersistentVector.fromArray([t, cljs.core.PersistentVector.fromArray([be], true)], true));
                      var G__434208 = i__434206 + 1;
                      i__434206 = G__434208;
                      continue
                    }else {
                      return true
                    }
                    break
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__434207), iter__434204.call(null, cljs.core.chunk_rest.call(null, s__434205__$2)))
                }else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__434207), null)
                }
              }else {
                var t = cljs.core.first.call(null, s__434205__$2);
                return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([t, cljs.core.PersistentVector.fromArray([be], true)], true), iter__434204.call(null, cljs.core.rest.call(null, s__434205__$2)))
              }
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__3228__auto__.call(null, (new cljs.core.Keyword("\ufdd0:triggers")).call(null, cljs.core.deref.call(null, orchard.object.behaviors).call(null, be)))
    }()))
  }, cljs.core.PersistentArrayMap.EMPTY, behs);
  return listeners
};
orchard.object.__GT_id = function __GT_id(obj) {
  if(cljs.core.truth_(crate.binding.deref_QMARK_.call(null, obj))) {
    return(new cljs.core.Keyword("\ufdd0:orchard.object/id")).call(null, cljs.core.deref.call(null, obj))
  }else {
    return(new cljs.core.Keyword("\ufdd0:orchard.object/id")).call(null, obj)
  }
};
orchard.object.merge_BANG_ = function() {
  var merge_BANG___delegate = function(obj, m) {
    return cljs.core.swap_BANG_.call(null, obj, function(p1__434209_SHARP_) {
      return cljs.core.apply.call(null, cljs.core.merge, p1__434209_SHARP_, m)
    })
  };
  var merge_BANG_ = function(obj, var_args) {
    var m = null;
    if(arguments.length > 1) {
      m = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_BANG___delegate.call(this, obj, m)
  };
  merge_BANG_.cljs$lang$maxFixedArity = 1;
  merge_BANG_.cljs$lang$applyTo = function(arglist__434211) {
    var obj = cljs.core.first(arglist__434211);
    var m = cljs.core.rest(arglist__434211);
    return merge_BANG___delegate(obj, m)
  };
  merge_BANG_.cljs$core$IFn$_invoke$arity$variadic = merge_BANG___delegate;
  return merge_BANG_
}();
orchard.object.instances_by_type = function instances_by_type(type) {
  return cljs.core.filter.call(null, function(p1__434210_SHARP_) {
    return cljs.core._EQ_.call(null, type, (new cljs.core.Keyword("\ufdd0:type")).call(null, cljs.core.deref.call(null, p1__434210_SHARP_)))
  }, cljs.core.vals.call(null, cljs.core.deref.call(null, orchard.object.instances)))
};
orchard.object.by_type = function by_type(type) {
  return orchard.object.instances_by_type.call(null, type)
};
orchard.object.tags__GT_behaviors = function tags__GT_behaviors(ts) {
  return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, cljs.core.deref.call(null, orchard.object.tags), ts))
};
orchard.object.raise = function() {
  var raise__delegate = function(obj, k, args) {
    var reactions = cljs.core.map.call(null, function(p1__434212_SHARP_) {
      return(new cljs.core.Keyword("\ufdd0:reaction")).call(null, p1__434212_SHARP_.call(null, cljs.core.deref.call(null, orchard.object.behaviors)))
    }, k.call(null, (new cljs.core.Keyword("\ufdd0:listeners")).call(null, cljs.core.deref.call(null, obj))));
    var seq__434219 = cljs.core.seq.call(null, reactions);
    var chunk__434221 = null;
    var count__434222 = 0;
    var i__434223 = 0;
    while(true) {
      if(i__434223 < count__434222) {
        var r = cljs.core._nth.call(null, chunk__434221, i__434223);
        if(cljs.core.truth_(r)) {
          cljs.core.apply.call(null, r, obj, args);
          var G__434225 = seq__434219;
          var G__434226 = chunk__434221;
          var G__434227 = count__434222;
          var G__434228 = i__434223 + 1;
          seq__434219 = G__434225;
          chunk__434221 = G__434226;
          count__434222 = G__434227;
          i__434223 = G__434228;
          continue
        }else {
          var G__434229 = seq__434219;
          var G__434230 = chunk__434221;
          var G__434231 = count__434222;
          var G__434232 = i__434223 + 1;
          seq__434219 = G__434229;
          chunk__434221 = G__434230;
          count__434222 = G__434231;
          i__434223 = G__434232;
          continue
        }
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__434219);
        if(temp__4092__auto__) {
          var seq__434219__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__434219__$1)) {
            var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__434219__$1);
            var G__434233 = cljs.core.chunk_rest.call(null, seq__434219__$1);
            var G__434234 = c__3259__auto__;
            var G__434235 = cljs.core.count.call(null, c__3259__auto__);
            var G__434236 = 0;
            seq__434219 = G__434233;
            chunk__434221 = G__434234;
            count__434222 = G__434235;
            i__434223 = G__434236;
            continue
          }else {
            var r = cljs.core.first.call(null, seq__434219__$1);
            if(cljs.core.truth_(r)) {
              cljs.core.apply.call(null, r, obj, args);
              var G__434237 = cljs.core.next.call(null, seq__434219__$1);
              var G__434238 = null;
              var G__434239 = 0;
              var G__434240 = 0;
              seq__434219 = G__434237;
              chunk__434221 = G__434238;
              count__434222 = G__434239;
              i__434223 = G__434240;
              continue
            }else {
              var G__434241 = cljs.core.next.call(null, seq__434219__$1);
              var G__434242 = null;
              var G__434243 = 0;
              var G__434244 = 0;
              seq__434219 = G__434241;
              chunk__434221 = G__434242;
              count__434222 = G__434243;
              i__434223 = G__434244;
              continue
            }
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var raise = function(obj, k, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return raise__delegate.call(this, obj, k, args)
  };
  raise.cljs$lang$maxFixedArity = 2;
  raise.cljs$lang$applyTo = function(arglist__434245) {
    var obj = cljs.core.first(arglist__434245);
    arglist__434245 = cljs.core.next(arglist__434245);
    var k = cljs.core.first(arglist__434245);
    var args = cljs.core.rest(arglist__434245);
    return raise__delegate(obj, k, args)
  };
  raise.cljs$core$IFn$_invoke$arity$variadic = raise__delegate;
  return raise
}();
orchard.object.update_listeners = function update_listeners(obj) {
  var behs = cljs.core.set.call(null, cljs.core.concat.call(null, (new cljs.core.Keyword("\ufdd0:behaviors")).call(null, obj), orchard.object.tags__GT_behaviors.call(null, (new cljs.core.Keyword("\ufdd0:tags")).call(null, obj))));
  return cljs.core.assoc.call(null, obj, "\ufdd0:listeners", orchard.object.__GT_triggers.call(null, obj, behs))
};
orchard.object.make_object_STAR_ = function() {
  var make_object_STAR___delegate = function(name, r) {
    var obj = cljs.core.merge.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:behaviors", cljs.core.PersistentHashSet.EMPTY, "\ufdd0:tags", cljs.core.PersistentHashSet.EMPTY, "\ufdd0:triggers", cljs.core.PersistentVector.EMPTY, "\ufdd0:listeners", cljs.core.PersistentArrayMap.EMPTY, "\ufdd0:type", name, "\ufdd0:children", cljs.core.PersistentArrayMap.EMPTY], true), cljs.core.apply.call(null, cljs.core.hash_map, r));
    return obj
  };
  var make_object_STAR_ = function(name, var_args) {
    var r = null;
    if(arguments.length > 1) {
      r = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return make_object_STAR___delegate.call(this, name, r)
  };
  make_object_STAR_.cljs$lang$maxFixedArity = 1;
  make_object_STAR_.cljs$lang$applyTo = function(arglist__434246) {
    var name = cljs.core.first(arglist__434246);
    var r = cljs.core.rest(arglist__434246);
    return make_object_STAR___delegate(name, r)
  };
  make_object_STAR_.cljs$core$IFn$_invoke$arity$variadic = make_object_STAR___delegate;
  return make_object_STAR_
}();
orchard.object.store_object_STAR_ = function store_object_STAR_(obj) {
  orchard.object.add.call(null, obj);
  return obj
};
orchard.object.handle_redef = function handle_redef(odef) {
  var id = (new cljs.core.Keyword("\ufdd0:type")).call(null, odef);
  var seq__434253_434259 = cljs.core.seq.call(null, orchard.object.instances_by_type.call(null, id));
  var chunk__434255_434260 = null;
  var count__434256_434261 = 0;
  var i__434257_434262 = 0;
  while(true) {
    if(i__434257_434262 < count__434256_434261) {
      var o_434263 = cljs.core._nth.call(null, chunk__434255_434260, i__434257_434262);
      var o_434264__$1 = cljs.core.deref.call(null, o_434263);
      var args_434265 = (new cljs.core.Keyword("\ufdd0:args")).call(null, o_434264__$1);
      var old_434266 = (new cljs.core.Keyword("\ufdd0:content")).call(null, o_434264__$1);
      var behs_434267 = cljs.core.set.call(null, (new cljs.core.Keyword("\ufdd0:behaviors")).call(null, o_434264__$1));
      var inst_434268 = cljs.core.deref.call(null, orchard.object.instances).call(null, orchard.object.__GT_id.call(null, o_434264__$1));
      var neue_434269 = cljs.core.truth_((new cljs.core.Keyword("\ufdd0:init")).call(null, odef)) ? cljs.core.apply.call(null, (new cljs.core.Keyword("\ufdd0:init")).call(null, odef), inst_434268, args_434265) : null;
      var neue_434270__$1 = cljs.core.vector_QMARK_.call(null, neue_434269) ? crate.core.html.call(null, neue_434269) : neue_434269;
      orchard.object.merge_BANG_.call(null, inst_434268, orchard.object.update_listeners.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:tags", clojure.set.union.call(null, (new cljs.core.Keyword("\ufdd0:tags")).call(null, o_434264__$1), (new cljs.core.Keyword("\ufdd0:tags")).call(null, odef)), "\ufdd0:behaviors", clojure.set.union.call(null, behs_434267, cljs.core.set.call(null, (new cljs.core.Keyword("\ufdd0:behaviors")).call(null, odef))), "\ufdd0:content", neue_434270__$1], true)));
      if(cljs.core.truth_(neue_434270__$1)) {
        orchard.util.dom.replace_with.call(null, old_434266, neue_434270__$1)
      }else {
      }
      orchard.object.raise.call(null, inst_434268, "\ufdd0:redef");
      var G__434271 = seq__434253_434259;
      var G__434272 = chunk__434255_434260;
      var G__434273 = count__434256_434261;
      var G__434274 = i__434257_434262 + 1;
      seq__434253_434259 = G__434271;
      chunk__434255_434260 = G__434272;
      count__434256_434261 = G__434273;
      i__434257_434262 = G__434274;
      continue
    }else {
      var temp__4092__auto___434275 = cljs.core.seq.call(null, seq__434253_434259);
      if(temp__4092__auto___434275) {
        var seq__434253_434276__$1 = temp__4092__auto___434275;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__434253_434276__$1)) {
          var c__3259__auto___434277 = cljs.core.chunk_first.call(null, seq__434253_434276__$1);
          var G__434278 = cljs.core.chunk_rest.call(null, seq__434253_434276__$1);
          var G__434279 = c__3259__auto___434277;
          var G__434280 = cljs.core.count.call(null, c__3259__auto___434277);
          var G__434281 = 0;
          seq__434253_434259 = G__434278;
          chunk__434255_434260 = G__434279;
          count__434256_434261 = G__434280;
          i__434257_434262 = G__434281;
          continue
        }else {
          var o_434282 = cljs.core.first.call(null, seq__434253_434276__$1);
          var o_434283__$1 = cljs.core.deref.call(null, o_434282);
          var args_434284 = (new cljs.core.Keyword("\ufdd0:args")).call(null, o_434283__$1);
          var old_434285 = (new cljs.core.Keyword("\ufdd0:content")).call(null, o_434283__$1);
          var behs_434286 = cljs.core.set.call(null, (new cljs.core.Keyword("\ufdd0:behaviors")).call(null, o_434283__$1));
          var inst_434287 = cljs.core.deref.call(null, orchard.object.instances).call(null, orchard.object.__GT_id.call(null, o_434283__$1));
          var neue_434288 = cljs.core.truth_((new cljs.core.Keyword("\ufdd0:init")).call(null, odef)) ? cljs.core.apply.call(null, (new cljs.core.Keyword("\ufdd0:init")).call(null, odef), inst_434287, args_434284) : null;
          var neue_434289__$1 = cljs.core.vector_QMARK_.call(null, neue_434288) ? crate.core.html.call(null, neue_434288) : neue_434288;
          orchard.object.merge_BANG_.call(null, inst_434287, orchard.object.update_listeners.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:tags", clojure.set.union.call(null, (new cljs.core.Keyword("\ufdd0:tags")).call(null, o_434283__$1), (new cljs.core.Keyword("\ufdd0:tags")).call(null, odef)), "\ufdd0:behaviors", clojure.set.union.call(null, behs_434286, cljs.core.set.call(null, (new cljs.core.Keyword("\ufdd0:behaviors")).call(null, odef))), "\ufdd0:content", neue_434289__$1], true)));
          if(cljs.core.truth_(neue_434289__$1)) {
            orchard.util.dom.replace_with.call(null, old_434285, neue_434289__$1)
          }else {
          }
          orchard.object.raise.call(null, inst_434287, "\ufdd0:redef");
          var G__434290 = cljs.core.next.call(null, seq__434253_434276__$1);
          var G__434291 = null;
          var G__434292 = 0;
          var G__434293 = 0;
          seq__434253_434259 = G__434290;
          chunk__434255_434260 = G__434291;
          count__434256_434261 = G__434292;
          i__434257_434262 = G__434293;
          continue
        }
      }else {
      }
    }
    break
  }
  return id
};
orchard.object.object_STAR_ = function() {
  var object_STAR___delegate = function(name, r) {
    return orchard.object.handle_redef.call(null, orchard.object.store_object_STAR_.call(null, cljs.core.apply.call(null, orchard.object.make_object_STAR_, name, r)))
  };
  var object_STAR_ = function(name, var_args) {
    var r = null;
    if(arguments.length > 1) {
      r = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return object_STAR___delegate.call(this, name, r)
  };
  object_STAR_.cljs$lang$maxFixedArity = 1;
  object_STAR_.cljs$lang$applyTo = function(arglist__434294) {
    var name = cljs.core.first(arglist__434294);
    var r = cljs.core.rest(arglist__434294);
    return object_STAR___delegate(name, r)
  };
  object_STAR_.cljs$core$IFn$_invoke$arity$variadic = object_STAR___delegate;
  return object_STAR_
}();
orchard.object.defined_QMARK_ = function defined_QMARK_(obj_name) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, orchard.object.object_defs), obj_name)
};
orchard.object.make_behavior_STAR_ = function() {
  var make_behavior_STAR___delegate = function(name, r) {
    var be = cljs.core.merge.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:name", name], true), cljs.core.apply.call(null, cljs.core.hash_map, r));
    return be
  };
  var make_behavior_STAR_ = function(name, var_args) {
    var r = null;
    if(arguments.length > 1) {
      r = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return make_behavior_STAR___delegate.call(this, name, r)
  };
  make_behavior_STAR_.cljs$lang$maxFixedArity = 1;
  make_behavior_STAR_.cljs$lang$applyTo = function(arglist__434295) {
    var name = cljs.core.first(arglist__434295);
    var r = cljs.core.rest(arglist__434295);
    return make_behavior_STAR___delegate(name, r)
  };
  make_behavior_STAR_.cljs$core$IFn$_invoke$arity$variadic = make_behavior_STAR___delegate;
  return make_behavior_STAR_
}();
orchard.object.store_behavior_STAR_ = function store_behavior_STAR_(beh) {
  orchard.object.add_b.call(null, beh);
  return(new cljs.core.Keyword("\ufdd0:name")).call(null, beh)
};
orchard.object.behavior_STAR_ = function() {
  var behavior_STAR___delegate = function(name, r) {
    return orchard.object.store_behavior_STAR_.call(null, cljs.core.apply.call(null, orchard.object.make_behavior_STAR_, name, r))
  };
  var behavior_STAR_ = function(name, var_args) {
    var r = null;
    if(arguments.length > 1) {
      r = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return behavior_STAR___delegate.call(this, name, r)
  };
  behavior_STAR_.cljs$lang$maxFixedArity = 1;
  behavior_STAR_.cljs$lang$applyTo = function(arglist__434296) {
    var name = cljs.core.first(arglist__434296);
    var r = cljs.core.rest(arglist__434296);
    return behavior_STAR___delegate(name, r)
  };
  behavior_STAR_.cljs$core$IFn$_invoke$arity$variadic = behavior_STAR___delegate;
  return behavior_STAR_
}();
orchard.object.__GT_sub_objects = function __GT_sub_objects(parent, obj_map) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__3228__auto__ = function iter__434306(s__434307) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__434307__$1 = s__434307;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__434307__$1);
          if(temp__4092__auto__) {
            var s__434307__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__434307__$2)) {
              var c__3226__auto__ = cljs.core.chunk_first.call(null, s__434307__$2);
              var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
              var b__434309 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
              if(function() {
                var i__434308 = 0;
                while(true) {
                  if(i__434308 < size__3227__auto__) {
                    var vec__434312 = cljs.core._nth.call(null, c__3226__auto__, i__434308);
                    var k = cljs.core.nth.call(null, vec__434312, 0, null);
                    var v = cljs.core.nth.call(null, vec__434312, 1, null);
                    cljs.core.chunk_append.call(null, b__434309, !cljs.core._EQ_.call(null, parent, v) ? cljs.core.PersistentVector.fromArray([k, orchard.object.create.call(null, v)], true) : function() {
                      throw new Error("Recursive sub-objects are not allowed");
                    }());
                    var G__434314 = i__434308 + 1;
                    i__434308 = G__434314;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__434309), iter__434306.call(null, cljs.core.chunk_rest.call(null, s__434307__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__434309), null)
              }
            }else {
              var vec__434313 = cljs.core.first.call(null, s__434307__$2);
              var k = cljs.core.nth.call(null, vec__434313, 0, null);
              var v = cljs.core.nth.call(null, vec__434313, 1, null);
              return cljs.core.cons.call(null, !cljs.core._EQ_.call(null, parent, v) ? cljs.core.PersistentVector.fromArray([k, orchard.object.create.call(null, v)], true) : function() {
                throw new Error("Recursive sub-objects are not allowed");
              }(), iter__434306.call(null, cljs.core.rest.call(null, s__434307__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3228__auto__.call(null, obj_map)
  }())
};
orchard.object.update_BANG_ = function() {
  var update_BANG___delegate = function(obj, r) {
    return cljs.core.swap_BANG_.call(null, obj, function(p1__434297_SHARP_) {
      return cljs.core.apply.call(null, cljs.core.update_in, p1__434297_SHARP_, r)
    })
  };
  var update_BANG_ = function(obj, var_args) {
    var r = null;
    if(arguments.length > 1) {
      r = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return update_BANG___delegate.call(this, obj, r)
  };
  update_BANG_.cljs$lang$maxFixedArity = 1;
  update_BANG_.cljs$lang$applyTo = function(arglist__434316) {
    var obj = cljs.core.first(arglist__434316);
    var r = cljs.core.rest(arglist__434316);
    return update_BANG___delegate(obj, r)
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$variadic = update_BANG___delegate;
  return update_BANG_
}();
orchard.object.assoc_BANG_ = function() {
  var assoc_BANG___delegate = function(obj, args) {
    return cljs.core.swap_BANG_.call(null, obj, function(p1__434315_SHARP_) {
      return cljs.core.apply.call(null, cljs.core.assoc, p1__434315_SHARP_, args)
    })
  };
  var assoc_BANG_ = function(obj, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return assoc_BANG___delegate.call(this, obj, args)
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 1;
  assoc_BANG_.cljs$lang$applyTo = function(arglist__434318) {
    var obj = cljs.core.first(arglist__434318);
    var args = cljs.core.rest(arglist__434318);
    return assoc_BANG___delegate(obj, args)
  };
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___delegate;
  return assoc_BANG_
}();
orchard.object.dissoc_BANG_ = function() {
  var dissoc_BANG___delegate = function(obj, args) {
    return cljs.core.swap_BANG_.call(null, obj, function(p1__434317_SHARP_) {
      return cljs.core.apply.call(null, cljs.core.dissoc, p1__434317_SHARP_, args)
    })
  };
  var dissoc_BANG_ = function(obj, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return dissoc_BANG___delegate.call(this, obj, args)
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 1;
  dissoc_BANG_.cljs$lang$applyTo = function(arglist__434319) {
    var obj = cljs.core.first(arglist__434319);
    var args = cljs.core.rest(arglist__434319);
    return dissoc_BANG___delegate(obj, args)
  };
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___delegate;
  return dissoc_BANG_
}();
orchard.object.__GT_inst = function __GT_inst(o) {
  if(cljs.core.map_QMARK_.call(null, o)) {
    return cljs.core.deref.call(null, orchard.object.instances).call(null, orchard.object.__GT_id.call(null, o))
  }else {
    if(cljs.core.truth_(crate.binding.deref_QMARK_.call(null, o))) {
      return o
    }else {
      if("\ufdd0:else") {
        return cljs.core.deref.call(null, orchard.object.instances).call(null, o)
      }else {
        return null
      }
    }
  }
};
orchard.object.destroy_BANG_ = function destroy_BANG_(obj) {
  var inst = orchard.object.__GT_inst.call(null, obj);
  orchard.object.raise.call(null, inst, "\ufdd0:destroy");
  cljs.core.swap_BANG_.call(null, orchard.object.instances, cljs.core.dissoc, orchard.object.__GT_id.call(null, inst));
  return cljs.core.reset_BANG_.call(null, obj, null)
};
orchard.object.store_inst = function store_inst(inst) {
  cljs.core.swap_BANG_.call(null, orchard.object.instances, cljs.core.assoc, (new cljs.core.Keyword("\ufdd0:orchard.object/id")).call(null, cljs.core.deref.call(null, inst)), inst);
  return inst
};
orchard.object.create = function() {
  var create__delegate = function(obj_name, args) {
    var obj = cljs.core.keyword_QMARK_.call(null, obj_name) ? cljs.core.deref.call(null, orchard.object.object_defs).call(null, obj_name) : obj_name;
    var id = function() {
      var or__3943__auto__ = (new cljs.core.Keyword("\ufdd0:orchard.object/id")).call(null, obj);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.swap_BANG_.call(null, orchard.object.id_counter, cljs.core.inc)
      }
    }();
    var obj__$1 = orchard.object.update_listeners.call(null, obj);
    var inst = cljs.core.atom.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, obj__$1, "\ufdd0:init"), "\ufdd0:orchard.object/id", id, "\ufdd0:args", args, "\ufdd0:behaviors", cljs.core.set.call(null, (new cljs.core.Keyword("\ufdd0:behaviors")).call(null, obj__$1)), "\ufdd0:tags", cljs.core.set.call(null, cljs.core.conj.call(null, (new cljs.core.Keyword("\ufdd0:tags")).call(null, obj__$1), "\ufdd0:object"))));
    var inst__$1 = orchard.object.store_inst.call(null, inst);
    var content = cljs.core.truth_((new cljs.core.Keyword("\ufdd0:init")).call(null, obj__$1)) ? cljs.core.apply.call(null, (new cljs.core.Keyword("\ufdd0:init")).call(null, obj__$1), inst__$1, args) : null;
    var content__$1 = cljs.core.vector_QMARK_.call(null, content) ? crate.core.html.call(null, content) : content;
    var final$ = orchard.object.merge_BANG_.call(null, inst__$1, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:content", content__$1, "\ufdd0:ready-chan", orchard.observe.dom_ready_chan.call(null, content__$1)], true));
    cljs.core.add_watch.call(null, inst__$1, "\ufdd0:orchard.object/change", function(_, ___$1, ___$2, ___$3) {
      return orchard.object.raise.call(null, inst__$1, "\ufdd0:object.change")
    });
    orchard.object.raise.call(null, inst__$1, "\ufdd0:init");
    return inst__$1
  };
  var create = function(obj_name, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return create__delegate.call(this, obj_name, args)
  };
  create.cljs$lang$maxFixedArity = 1;
  create.cljs$lang$applyTo = function(arglist__434320) {
    var obj_name = cljs.core.first(arglist__434320);
    var args = cljs.core.rest(arglist__434320);
    return create__delegate(obj_name, args)
  };
  create.cljs$core$IFn$_invoke$arity$variadic = create__delegate;
  return create
}();
orchard.object.refresh_BANG_ = function refresh_BANG_(obj) {
  return cljs.core.reset_BANG_.call(null, obj, orchard.object.update_listeners.call(null, cljs.core.deref.call(null, obj)))
};
orchard.object.__GT_def = function __GT_def(obj) {
  return cljs.core.deref.call(null, orchard.object.object_defs).call(null, (new cljs.core.Keyword("\ufdd0:type")).call(null, cljs.core.deref.call(null, obj)))
};
orchard.object.add_behavior_BANG_ = function add_behavior_BANG_(obj, behavior) {
  var cur = cljs.core.update_in.call(null, cljs.core.deref.call(null, obj), cljs.core.PersistentVector.fromArray(["\ufdd0:behaviors"], true), cljs.core.conj, behavior);
  return cljs.core.reset_BANG_.call(null, obj, orchard.object.update_listeners.call(null, cur))
};
orchard.object.rem_behavior_BANG_ = function rem_behavior_BANG_(obj, behavior) {
  var cur = cljs.core.update_in.call(null, cljs.core.deref.call(null, obj), cljs.core.PersistentVector.fromArray(["\ufdd0:behaviors"], true), function(p1__434321_SHARP_) {
    return cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([behavior, null], true), p1__434321_SHARP_)
  });
  return cljs.core.reset_BANG_.call(null, obj, orchard.object.update_listeners.call(null, cur))
};
orchard.object.__GT_def = function __GT_def(def_BAR_name) {
  if(cljs.core.map_QMARK_.call(null, def_BAR_name)) {
    return def_BAR_name
  }else {
    return cljs.core.deref.call(null, orchard.object.object_defs).call(null, def_BAR_name)
  }
};
orchard.object.with_behaviors = function with_behaviors(obj_name, behaviors) {
  var obj_def = orchard.object.__GT_def.call(null, obj_name);
  var cur = cljs.core.update_in.call(null, obj_def, cljs.core.PersistentVector.fromArray(["\ufdd0:behaviors"], true), function(obj_def) {
    return function(p1__434322_SHARP_) {
      return cljs.core.apply.call(null, cljs.core.conj, p1__434322_SHARP_, behaviors)
    }
  }(obj_def));
  return orchard.object.update_listeners.call(null, cur)
};
orchard.object.parent_BANG_ = function() {
  var parent_BANG___delegate = function(p, child, p__434323) {
    var vec__434325 = p__434323;
    var name = cljs.core.nth.call(null, vec__434325, 0, null);
    orchard.object.update_BANG_.call(null, p, cljs.core.PersistentVector.fromArray(["\ufdd0:children"], true), cljs.core.assoc, function() {
      var or__3943__auto__ = name;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return(new cljs.core.Keyword("\ufdd0:orchard.object/id")).call(null, cljs.core.deref.call(null, child))
      }
    }(), child);
    return orchard.object.merge_BANG_.call(null, child, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:parent", orchard.object.__GT_id.call(null, p)], true))
  };
  var parent_BANG_ = function(p, child, var_args) {
    var p__434323 = null;
    if(arguments.length > 2) {
      p__434323 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return parent_BANG___delegate.call(this, p, child, p__434323)
  };
  parent_BANG_.cljs$lang$maxFixedArity = 2;
  parent_BANG_.cljs$lang$applyTo = function(arglist__434326) {
    var p = cljs.core.first(arglist__434326);
    arglist__434326 = cljs.core.next(arglist__434326);
    var child = cljs.core.first(arglist__434326);
    var p__434323 = cljs.core.rest(arglist__434326);
    return parent_BANG___delegate(p, child, p__434323)
  };
  parent_BANG_.cljs$core$IFn$_invoke$arity$variadic = parent_BANG___delegate;
  return parent_BANG_
}();
orchard.object.parent = function parent(child) {
  return cljs.core.deref.call(null, orchard.object.instances).call(null, (new cljs.core.Keyword("\ufdd0:parent")).call(null, cljs.core.deref.call(null, child)))
};
orchard.object.child = function child(obj, k) {
  return(new cljs.core.Keyword("\ufdd0:children")).call(null, cljs.core.deref.call(null, obj)).call(null, k)
};
orchard.object.children = function children(obj) {
  return(new cljs.core.Keyword("\ufdd0:children")).call(null, cljs.core.deref.call(null, obj))
};
orchard.object.__GT_content = function __GT_content(obj) {
  return(new cljs.core.Keyword("\ufdd0:content")).call(null, cljs.core.deref.call(null, obj))
};
orchard.object.by_tag = function by_tag(tag) {
  return cljs.core.filter.call(null, function(p1__434327_SHARP_) {
    var temp__4092__auto__ = (new cljs.core.Keyword("\ufdd0:tags")).call(null, cljs.core.deref.call(null, p1__434327_SHARP_));
    if(cljs.core.truth_(temp__4092__auto__)) {
      var ts = temp__4092__auto__;
      return ts.call(null, tag)
    }else {
      return null
    }
  }, cljs.core.vals.call(null, cljs.core.deref.call(null, orchard.object.instances)))
};
orchard.object.has_tag_QMARK_ = function has_tag_QMARK_(obj, tag) {
  return(new cljs.core.Keyword("\ufdd0:tags")).call(null, cljs.core.deref.call(null, obj)).call(null, tag)
};
orchard.object.add_tags = function add_tags(obj, ts) {
  var cur = cljs.core.deref.call(null, obj);
  var cur__$1 = cljs.core.update_in.call(null, cur, cljs.core.PersistentVector.fromArray(["\ufdd0:tags"], true), function(cur) {
    return function(p1__434328_SHARP_) {
      return cljs.core.reduce.call(null, cljs.core.conj, p1__434328_SHARP_, ts)
    }
  }(cur));
  cljs.core.reset_BANG_.call(null, obj, orchard.object.update_listeners.call(null, cur__$1));
  orchard.object.raise.call(null, obj, "\ufdd0:orchard.object/tags-added", ts);
  return obj
};
orchard.object.remove_tags = function remove_tags(obj, ts) {
  var cur = cljs.core.deref.call(null, obj);
  var behs = cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, cljs.core.deref.call(null, orchard.object.tags), ts));
  var cur__$1 = cljs.core.update_in.call(null, cljs.core.update_in.call(null, cljs.core.update_in.call(null, cur, cljs.core.PersistentVector.fromArray(["\ufdd0:tags"], true), function(cur, behs) {
    return function(p1__434329_SHARP_) {
      return cljs.core.reduce.call(null, cljs.core.disj, p1__434329_SHARP_, ts)
    }
  }(cur, behs)), cljs.core.PersistentVector.fromArray(["\ufdd0:behaviors"], true), function(cur, behs) {
    return function(p1__434330_SHARP_) {
      return cljs.core.reduce.call(null, cljs.core.disj, p1__434330_SHARP_, behs)
    }
  }(cur, behs)), cljs.core.PersistentVector.fromArray(["\ufdd0:listeners"], true), function(cur, behs) {
    return function(p1__434331_SHARP_) {
      return cljs.core.apply.call(null, cljs.core.dissoc, p1__434331_SHARP_, ts)
    }
  }(cur, behs));
  cljs.core.reset_BANG_.call(null, obj, orchard.object.update_listeners.call(null, cur__$1));
  orchard.object.raise.call(null, obj, "\ufdd0:orchard.object/tags-removed", ts);
  return obj
};
orchard.object.tag_behaviors = function tag_behaviors(tag, behs) {
  cljs.core.swap_BANG_.call(null, orchard.object.tags, cljs.core.update_in, cljs.core.PersistentVector.fromArray([tag], true), function(p1__434332_SHARP_) {
    return cljs.core.reduce.call(null, cljs.core.conj, function() {
      var or__3943__auto__ = p1__434332_SHARP_;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.PersistentHashSet.EMPTY
      }
    }(), behs)
  });
  var seq__434338_434342 = cljs.core.seq.call(null, orchard.object.by_tag.call(null, tag));
  var chunk__434339_434343 = null;
  var count__434340_434344 = 0;
  var i__434341_434345 = 0;
  while(true) {
    if(i__434341_434345 < count__434340_434344) {
      var cur_434346 = cljs.core._nth.call(null, chunk__434339_434343, i__434341_434345);
      orchard.object.refresh_BANG_.call(null, cur_434346);
      var G__434347 = seq__434338_434342;
      var G__434348 = chunk__434339_434343;
      var G__434349 = count__434340_434344;
      var G__434350 = i__434341_434345 + 1;
      seq__434338_434342 = G__434347;
      chunk__434339_434343 = G__434348;
      count__434340_434344 = G__434349;
      i__434341_434345 = G__434350;
      continue
    }else {
      var temp__4092__auto___434351 = cljs.core.seq.call(null, seq__434338_434342);
      if(temp__4092__auto___434351) {
        var seq__434338_434352__$1 = temp__4092__auto___434351;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__434338_434352__$1)) {
          var c__3259__auto___434353 = cljs.core.chunk_first.call(null, seq__434338_434352__$1);
          var G__434354 = cljs.core.chunk_rest.call(null, seq__434338_434352__$1);
          var G__434355 = c__3259__auto___434353;
          var G__434356 = cljs.core.count.call(null, c__3259__auto___434353);
          var G__434357 = 0;
          seq__434338_434342 = G__434354;
          chunk__434339_434343 = G__434355;
          count__434340_434344 = G__434356;
          i__434341_434345 = G__434357;
          continue
        }else {
          var cur_434358 = cljs.core.first.call(null, seq__434338_434352__$1);
          orchard.object.refresh_BANG_.call(null, cur_434358);
          var G__434359 = cljs.core.next.call(null, seq__434338_434352__$1);
          var G__434360 = null;
          var G__434361 = 0;
          var G__434362 = 0;
          seq__434338_434342 = G__434359;
          chunk__434339_434343 = G__434360;
          count__434340_434344 = G__434361;
          i__434341_434345 = G__434362;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core.deref.call(null, orchard.object.tags).call(null, tag)
};
orchard.object.remove_tag_behaviors = function remove_tag_behaviors(tag, behs) {
  cljs.core.swap_BANG_.call(null, orchard.object.tags, cljs.core.update_in, cljs.core.PersistentVector.fromArray([tag], true), function(p1__434333_SHARP_) {
    return cljs.core.reduce.call(null, cljs.core.disj, function() {
      var or__3943__auto__ = p1__434333_SHARP_;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.PersistentHashSet.EMPTY
      }
    }(), behs)
  });
  var seq__434375 = cljs.core.seq.call(null, orchard.object.by_tag.call(null, tag));
  var chunk__434380 = null;
  var count__434381 = 0;
  var i__434382 = 0;
  while(true) {
    if(i__434382 < count__434381) {
      var cur = cljs.core._nth.call(null, chunk__434380, i__434382);
      var seq__434383_434387 = cljs.core.seq.call(null, behs);
      var chunk__434384_434388 = null;
      var count__434385_434389 = 0;
      var i__434386_434390 = 0;
      while(true) {
        if(i__434386_434390 < count__434385_434389) {
          var b_434391 = cljs.core._nth.call(null, chunk__434384_434388, i__434386_434390);
          orchard.object.rem_behavior_BANG_.call(null, cur, b_434391);
          var G__434392 = seq__434383_434387;
          var G__434393 = chunk__434384_434388;
          var G__434394 = count__434385_434389;
          var G__434395 = i__434386_434390 + 1;
          seq__434383_434387 = G__434392;
          chunk__434384_434388 = G__434393;
          count__434385_434389 = G__434394;
          i__434386_434390 = G__434395;
          continue
        }else {
          var temp__4092__auto___434396 = cljs.core.seq.call(null, seq__434383_434387);
          if(temp__4092__auto___434396) {
            var seq__434383_434397__$1 = temp__4092__auto___434396;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__434383_434397__$1)) {
              var c__3259__auto___434398 = cljs.core.chunk_first.call(null, seq__434383_434397__$1);
              var G__434399 = cljs.core.chunk_rest.call(null, seq__434383_434397__$1);
              var G__434400 = c__3259__auto___434398;
              var G__434401 = cljs.core.count.call(null, c__3259__auto___434398);
              var G__434402 = 0;
              seq__434383_434387 = G__434399;
              chunk__434384_434388 = G__434400;
              count__434385_434389 = G__434401;
              i__434386_434390 = G__434402;
              continue
            }else {
              var b_434403 = cljs.core.first.call(null, seq__434383_434397__$1);
              orchard.object.rem_behavior_BANG_.call(null, cur, b_434403);
              var G__434404 = cljs.core.next.call(null, seq__434383_434397__$1);
              var G__434405 = null;
              var G__434406 = 0;
              var G__434407 = 0;
              seq__434383_434387 = G__434404;
              chunk__434384_434388 = G__434405;
              count__434385_434389 = G__434406;
              i__434386_434390 = G__434407;
              continue
            }
          }else {
          }
        }
        break
      }
      var G__434408 = seq__434375;
      var G__434409 = chunk__434380;
      var G__434410 = count__434381;
      var G__434411 = i__434382 + 1;
      seq__434375 = G__434408;
      chunk__434380 = G__434409;
      count__434381 = G__434410;
      i__434382 = G__434411;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__434375);
      if(temp__4092__auto__) {
        var seq__434375__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__434375__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__434375__$1);
          var G__434412 = cljs.core.chunk_rest.call(null, seq__434375__$1);
          var G__434413 = c__3259__auto__;
          var G__434414 = cljs.core.count.call(null, c__3259__auto__);
          var G__434415 = 0;
          seq__434375 = G__434412;
          chunk__434380 = G__434413;
          count__434381 = G__434414;
          i__434382 = G__434415;
          continue
        }else {
          var cur = cljs.core.first.call(null, seq__434375__$1);
          var seq__434376_434416 = cljs.core.seq.call(null, behs);
          var chunk__434377_434417 = null;
          var count__434378_434418 = 0;
          var i__434379_434419 = 0;
          while(true) {
            if(i__434379_434419 < count__434378_434418) {
              var b_434420 = cljs.core._nth.call(null, chunk__434377_434417, i__434379_434419);
              orchard.object.rem_behavior_BANG_.call(null, cur, b_434420);
              var G__434421 = seq__434376_434416;
              var G__434422 = chunk__434377_434417;
              var G__434423 = count__434378_434418;
              var G__434424 = i__434379_434419 + 1;
              seq__434376_434416 = G__434421;
              chunk__434377_434417 = G__434422;
              count__434378_434418 = G__434423;
              i__434379_434419 = G__434424;
              continue
            }else {
              var temp__4092__auto___434425__$1 = cljs.core.seq.call(null, seq__434376_434416);
              if(temp__4092__auto___434425__$1) {
                var seq__434376_434426__$1 = temp__4092__auto___434425__$1;
                if(cljs.core.chunked_seq_QMARK_.call(null, seq__434376_434426__$1)) {
                  var c__3259__auto___434427 = cljs.core.chunk_first.call(null, seq__434376_434426__$1);
                  var G__434428 = cljs.core.chunk_rest.call(null, seq__434376_434426__$1);
                  var G__434429 = c__3259__auto___434427;
                  var G__434430 = cljs.core.count.call(null, c__3259__auto___434427);
                  var G__434431 = 0;
                  seq__434376_434416 = G__434428;
                  chunk__434377_434417 = G__434429;
                  count__434378_434418 = G__434430;
                  i__434379_434419 = G__434431;
                  continue
                }else {
                  var b_434432 = cljs.core.first.call(null, seq__434376_434426__$1);
                  orchard.object.rem_behavior_BANG_.call(null, cur, b_434432);
                  var G__434433 = cljs.core.next.call(null, seq__434376_434426__$1);
                  var G__434434 = null;
                  var G__434435 = 0;
                  var G__434436 = 0;
                  seq__434376_434416 = G__434433;
                  chunk__434377_434417 = G__434434;
                  count__434378_434418 = G__434435;
                  i__434379_434419 = G__434436;
                  continue
                }
              }else {
              }
            }
            break
          }
          var G__434437 = cljs.core.next.call(null, seq__434375__$1);
          var G__434438 = null;
          var G__434439 = 0;
          var G__434440 = 0;
          seq__434375 = G__434437;
          chunk__434380 = G__434438;
          count__434381 = G__434439;
          i__434382 = G__434440;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
orchard.object.on_change = function on_change(obj, func) {
  return cljs.core.add_watch.call(null, obj, cljs.core.gensym.call(null, orchard.object.change), function(_, ___$1, ___$2, v) {
    return func.call(null, v)
  })
};
orchard.object.object_by_id = function object_by_id(id) {
  return cljs.core.last.call(null, cljs.core.first.call(null, cljs.core.filter.call(null, function(p1__434441_SHARP_) {
    return cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, cljs.core.second.call(null, p1__434441_SHARP_))), id)
  }, cljs.core.deref.call(null, orchard.object.instances))))
};
goog.provide("orchard.model");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("orchard.object");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("orchard.util.time");
goog.require("orchard.util.core");
orchard.model.ObjectStore = {};
orchard.model.save_object_BANG_ = function save_object_BANG_(this$, id, value) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.orchard$model$ObjectStore$save_object_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.orchard$model$ObjectStore$save_object_BANG_$arity$3(this$, id, value)
  }else {
    var x__3128__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = orchard.model.save_object_BANG_[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = orchard.model.save_object_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ObjectStore.save-object!", this$);
        }
      }
    }().call(null, this$, id, value)
  }
};
orchard.model.get_object = function get_object(this$, id) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.orchard$model$ObjectStore$get_object$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.orchard$model$ObjectStore$get_object$arity$2(this$, id)
  }else {
    var x__3128__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = orchard.model.get_object[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = orchard.model.get_object["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ObjectStore.get-object", this$);
        }
      }
    }().call(null, this$, id)
  }
};
orchard.model.all_objects = function all_objects(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.orchard$model$ObjectStore$all_objects$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.orchard$model$ObjectStore$all_objects$arity$1(this$)
  }else {
    var x__3128__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = orchard.model.all_objects[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = orchard.model.all_objects["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ObjectStore.all-objects", this$);
        }
      }
    }().call(null, this$)
  }
};
orchard.model.ObjectIndex = {};
orchard.model.objects_of_type = function objects_of_type(this$, obj_type) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.orchard$model$ObjectIndex$objects_of_type$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.orchard$model$ObjectIndex$objects_of_type$arity$2(this$, obj_type)
  }else {
    var x__3128__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = orchard.model.objects_of_type[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = orchard.model.objects_of_type["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ObjectIndex.objects-of-type", this$);
        }
      }
    }().call(null, this$, obj_type)
  }
};
orchard.model.load_object = function load_object(db, id) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_433764) {
        var state_val_433765 = state_433764[1];
        if(state_val_433765 === 8) {
          var inst_433759 = state_433764[2];
          var state_433764__$1 = state_433764;
          var statearr_433766_433780 = state_433764__$1;
          statearr_433766_433780[2] = inst_433759;
          statearr_433766_433780[1] = 5;
          return"\ufdd0:recur"
        }else {
          if(state_val_433765 === 7) {
            var inst_433750 = state_433764[5];
            var inst_433756 = [cljs.core.str(inst_433750)].join("");
            var inst_433757 = orchard.util.log.log.call(null, "load-object - type not found: ", inst_433756);
            var state_433764__$1 = function() {
              var statearr_433767 = state_433764;
              statearr_433767[6] = inst_433757;
              return statearr_433767
            }();
            var statearr_433768_433781 = state_433764__$1;
            statearr_433768_433781[2] = "\ufdd0:no-matching-page-type";
            statearr_433768_433781[1] = 8;
            return"\ufdd0:recur"
          }else {
            if(state_val_433765 === 6) {
              var inst_433751 = state_433764[7];
              var inst_433750 = state_433764[5];
              var inst_433754 = orchard.object.create.call(null, inst_433750, inst_433751);
              var state_433764__$1 = state_433764;
              var statearr_433769_433782 = state_433764__$1;
              statearr_433769_433782[2] = inst_433754;
              statearr_433769_433782[1] = 8;
              return"\ufdd0:recur"
            }else {
              if(state_val_433765 === 5) {
                var inst_433762 = state_433764[2];
                var state_433764__$1 = state_433764;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_433764__$1, inst_433762)
              }else {
                if(state_val_433765 === 4) {
                  var state_433764__$1 = state_433764;
                  var statearr_433770_433783 = state_433764__$1;
                  statearr_433770_433783[2] = null;
                  statearr_433770_433783[1] = 5;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_433765 === 3) {
                    var inst_433747 = state_433764[8];
                    var inst_433750 = state_433764[5];
                    var inst_433749 = (new cljs.core.Keyword("\ufdd0:type")).call(null, inst_433747);
                    var inst_433750__$1 = cljs.core.keyword.call(null, inst_433749);
                    var inst_433751 = cljs.core.assoc.call(null, inst_433747, "\ufdd0:db", db);
                    var inst_433752 = orchard.object.defined_QMARK_.call(null, inst_433750__$1);
                    var state_433764__$1 = function() {
                      var statearr_433771 = state_433764;
                      statearr_433771[7] = inst_433751;
                      statearr_433771[5] = inst_433750__$1;
                      return statearr_433771
                    }();
                    if(cljs.core.truth_(inst_433752)) {
                      var statearr_433772_433784 = state_433764__$1;
                      statearr_433772_433784[1] = 6
                    }else {
                      var statearr_433773_433785 = state_433764__$1;
                      statearr_433773_433785[1] = 7
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_433765 === 2) {
                      var inst_433747 = state_433764[8];
                      var inst_433747__$1 = state_433764[2];
                      var state_433764__$1 = function() {
                        var statearr_433774 = state_433764;
                        statearr_433774[8] = inst_433747__$1;
                        return statearr_433774
                      }();
                      if(cljs.core.truth_(inst_433747__$1)) {
                        var statearr_433775_433786 = state_433764__$1;
                        statearr_433775_433786[1] = 3
                      }else {
                        var statearr_433776_433787 = state_433764__$1;
                        statearr_433776_433787[1] = 4
                      }
                      return"\ufdd0:recur"
                    }else {
                      if(state_val_433765 === 1) {
                        var inst_433745 = orchard.model.get_object.call(null, db, id);
                        var state_433764__$1 = state_433764;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_433764__$1, 2, inst_433745)
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_433778 = new Array(9);
            statearr_433778[0] = state_machine__4793__auto__;
            statearr_433778[1] = 1;
            return statearr_433778
          };
          var state_machine__4793__auto____1 = function(state_433764) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_433764);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_433764) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_433764)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_433779 = f__4865__auto__.call(null);
      statearr_433779[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_433779
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.model.all_wiki_pages = function all_wiki_pages(db) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_433801) {
        var state_val_433802 = state_433801[1];
        if(state_val_433802 === 2) {
          var inst_433799 = state_433801[2];
          var state_433801__$1 = state_433801;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_433801__$1, inst_433799)
        }else {
          if(state_val_433802 === 1) {
            var inst_433797 = orchard.model.objects_of_type.call(null, db, "\ufdd0:wiki-page");
            var state_433801__$1 = state_433801;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_433801__$1, 2, inst_433797)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_433804 = new Array(5);
            statearr_433804[0] = state_machine__4793__auto__;
            statearr_433804[1] = 1;
            return statearr_433804
          };
          var state_machine__4793__auto____1 = function(state_433801) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_433801);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_433801) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_433801)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_433805 = f__4865__auto__.call(null);
      statearr_433805[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_433805
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.model.all_projects = function all_projects(db) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_433819) {
        var state_val_433820 = state_433819[1];
        if(state_val_433820 === 2) {
          var inst_433817 = state_433819[2];
          var state_433819__$1 = state_433819;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_433819__$1, inst_433817)
        }else {
          if(state_val_433820 === 1) {
            var inst_433815 = orchard.model.objects_of_type.call(null, db, "\ufdd0:project");
            var state_433819__$1 = state_433819;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_433819__$1, 2, inst_433815)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_433822 = new Array(5);
            statearr_433822[0] = state_machine__4793__auto__;
            statearr_433822[1] = 1;
            return statearr_433822
          };
          var state_machine__4793__auto____1 = function(state_433819) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_433819);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_433819) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_433819)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_433823 = f__4865__auto__.call(null);
      statearr_433823[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_433823
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.model.all_pages_by_title = function all_pages_by_title(db) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_433839) {
        var state_val_433840 = state_433839[1];
        if(state_val_433840 === 2) {
          var inst_433836 = state_433839[2];
          var inst_433837 = cljs.core.sort_by.call(null, "\ufdd0:title", inst_433836);
          var state_433839__$1 = state_433839;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_433839__$1, inst_433837)
        }else {
          if(state_val_433840 === 1) {
            var inst_433834 = orchard.model.all_wiki_pages.call(null, db);
            var state_433839__$1 = state_433839;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_433839__$1, 2, inst_433834)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_433842 = new Array(5);
            statearr_433842[0] = state_machine__4793__auto__;
            statearr_433842[1] = 1;
            return statearr_433842
          };
          var state_machine__4793__auto____1 = function(state_433839) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_433839);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_433839) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_433839)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_433843 = f__4865__auto__.call(null);
      statearr_433843[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_433843
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.model.module = function module(mod_type) {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", mod_type, "\ufdd0:id", orchard.util.core.uuid.call(null), "\ufdd0:created-at", orchard.util.core.date_json.call(null), "\ufdd0:updated-at", orchard.util.core.date_json.call(null)], true)
};
orchard.model.project = function project(p__433844) {
  var map__433846 = p__433844;
  var map__433846__$1 = cljs.core.seq_QMARK_.call(null, map__433846) ? cljs.core.apply.call(null, cljs.core.hash_map, map__433846) : map__433846;
  var project__$1 = map__433846__$1;
  var root = cljs.core.get.call(null, map__433846__$1, "\ufdd0:root");
  var title = cljs.core.get.call(null, map__433846__$1, "\ufdd0:title");
  return cljs.core.merge.call(null, project__$1, orchard.model.module.call(null, "\ufdd0:project"))
};
orchard.model.wiki_page = function wiki_page(p__433847) {
  var map__433849 = p__433847;
  var map__433849__$1 = cljs.core.seq_QMARK_.call(null, map__433849) ? cljs.core.apply.call(null, cljs.core.hash_map, map__433849) : map__433849;
  var page = map__433849__$1;
  var template = cljs.core.get.call(null, map__433849__$1, "\ufdd0:template");
  var title = cljs.core.get.call(null, map__433849__$1, "\ufdd0:title");
  return cljs.core.merge.call(null, page, orchard.model.module.call(null, "\ufdd0:wiki-page"))
};
orchard.model.single_column_template = function() {
  var single_column_template__delegate = function(mod_ids) {
    return cljs.core.assoc.call(null, orchard.model.module.call(null, "\ufdd0:single-column-template"), "\ufdd0:modules", mod_ids)
  };
  var single_column_template = function(var_args) {
    var mod_ids = null;
    if(arguments.length > 0) {
      mod_ids = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return single_column_template__delegate.call(this, mod_ids)
  };
  single_column_template.cljs$lang$maxFixedArity = 0;
  single_column_template.cljs$lang$applyTo = function(arglist__433850) {
    var mod_ids = cljs.core.seq(arglist__433850);
    return single_column_template__delegate(mod_ids)
  };
  single_column_template.cljs$core$IFn$_invoke$arity$variadic = single_column_template__delegate;
  return single_column_template
}();
orchard.model.index_module = function index_module() {
  return orchard.model.module.call(null, "\ufdd0:index-module")
};
orchard.model.html_module = function html_module() {
  return cljs.core.assoc.call(null, orchard.model.module.call(null, "\ufdd0:html-module"), "\ufdd0:text", "")
};
orchard.model.markdown_module = function markdown_module() {
  return cljs.core.assoc.call(null, orchard.model.module.call(null, "\ufdd0:markdown-module"), "\ufdd0:text", "")
};
orchard.model.media_module = function() {
  var media_module = null;
  var media_module__0 = function() {
    return media_module.call(null, cljs.core.PersistentArrayMap.EMPTY)
  };
  var media_module__1 = function(p__433851) {
    var map__433853 = p__433851;
    var map__433853__$1 = cljs.core.seq_QMARK_.call(null, map__433853) ? cljs.core.apply.call(null, cljs.core.hash_map, map__433853) : map__433853;
    var doc = map__433853__$1;
    var tags = cljs.core.get.call(null, map__433853__$1, "\ufdd0:tags");
    var cites = cljs.core.get.call(null, map__433853__$1, "\ufdd0:cites");
    var annotations = cljs.core.get.call(null, map__433853__$1, "\ufdd0:annotations");
    var notes = cljs.core.get.call(null, map__433853__$1, "\ufdd0:notes");
    var filename = cljs.core.get.call(null, map__433853__$1, "\ufdd0:filename");
    var path = cljs.core.get.call(null, map__433853__$1, "\ufdd0:path");
    var authors = cljs.core.get.call(null, map__433853__$1, "\ufdd0:authors");
    var title = cljs.core.get.call(null, map__433853__$1, "\ufdd0:title");
    return cljs.core.merge.call(null, doc, orchard.model.module.call(null, "\ufdd0:media-page"))
  };
  media_module = function(p__433851) {
    switch(arguments.length) {
      case 0:
        return media_module__0.call(this);
      case 1:
        return media_module__1.call(this, p__433851)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  media_module.cljs$core$IFn$_invoke$arity$0 = media_module__0;
  media_module.cljs$core$IFn$_invoke$arity$1 = media_module__1;
  return media_module
}();
goog.provide("orchard.module");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("cljs.core.async");
goog.require("dommy.core");
goog.require("orchard.model");
goog.require("crate.binding");
goog.require("orchard.util.core");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("crate.core");
goog.require("orchard.util.dom");
goog.require("orchard.object");
orchard.module.index_of_module = function index_of_module(module) {
  return orchard.util.core.index_of.call(null, (new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, module)), cljs.core.map.call(null, function(p1__433854_SHARP_) {
    return(new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, p1__433854_SHARP_))
  }, (new cljs.core.Keyword("\ufdd0:modules")).call(null, cljs.core.deref.call(null, orchard.object.parent.call(null, module)))))
};
orchard.module.default_opts = cljs.core.clj__GT_js.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:mode", "markdown", "\ufdd0:theme", "default", "\ufdd0:lineNumbers", true, "\ufdd0:tabMode", "indent", "\ufdd0:autofocus", true, "\ufdd0:linewrapping", true, "\ufdd0:matchBrackets", true, "\ufdd0:viewportMargin", Infinity], true));
orchard.module.edit_module_btn_icon = function edit_module_btn_icon(mode) {
  if(cljs.core._EQ_.call(null, mode, "\ufdd0:present")) {
    return"module-btn icon-pencil module-btn"
  }else {
    return"module-btn icon-ok module-btn"
  }
};
orchard.module.$module = function $module(this$) {
  return orchard.util.dom.$.call(null, [cljs.core.str("#module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$))), cljs.core.str(" .module-content")].join(""))
};
orchard.module.handle_delete_module = function() {
  var handle_delete_module = null;
  var handle_delete_module__1 = function(this$) {
    return handle_delete_module.call(null, this$, null)
  };
  var handle_delete_module__2 = function(this$, _) {
    var msg = "Are you sure you want to delete this module?";
    var delete_QMARK_ = confirm(msg);
    if(cljs.core.truth_(delete_QMARK_)) {
      return orchard.object.raise.call(null, orchard.object.parent.call(null, this$), "\ufdd0:remove-module", this$)
    }else {
      return null
    }
  };
  handle_delete_module = function(this$, _) {
    switch(arguments.length) {
      case 1:
        return handle_delete_module__1.call(this, this$);
      case 2:
        return handle_delete_module__2.call(this, this$, _)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  handle_delete_module.cljs$core$IFn$_invoke$arity$1 = handle_delete_module__1;
  handle_delete_module.cljs$core$IFn$_invoke$arity$2 = handle_delete_module__2;
  return handle_delete_module
}();
orchard.module.delete_btn = function delete_btn(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:i.icon-trash.module-btn"], true));
  var seq__433861_433867 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", cljs.core.partial.call(null, orchard.module.handle_delete_module, this$)], true)));
  var chunk__433862_433868 = null;
  var count__433863_433869 = 0;
  var i__433864_433870 = 0;
  while(true) {
    if(i__433864_433870 < count__433863_433869) {
      var vec__433865_433871 = cljs.core._nth.call(null, chunk__433862_433868, i__433864_433870);
      var ev__431429__auto___433872 = cljs.core.nth.call(null, vec__433865_433871, 0, null);
      var func__431430__auto___433873 = cljs.core.nth.call(null, vec__433865_433871, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___433872, func__431430__auto___433873);
      var G__433874 = seq__433861_433867;
      var G__433875 = chunk__433862_433868;
      var G__433876 = count__433863_433869;
      var G__433877 = i__433864_433870 + 1;
      seq__433861_433867 = G__433874;
      chunk__433862_433868 = G__433875;
      count__433863_433869 = G__433876;
      i__433864_433870 = G__433877;
      continue
    }else {
      var temp__4092__auto___433878 = cljs.core.seq.call(null, seq__433861_433867);
      if(temp__4092__auto___433878) {
        var seq__433861_433879__$1 = temp__4092__auto___433878;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__433861_433879__$1)) {
          var c__3259__auto___433880 = cljs.core.chunk_first.call(null, seq__433861_433879__$1);
          var G__433881 = cljs.core.chunk_rest.call(null, seq__433861_433879__$1);
          var G__433882 = c__3259__auto___433880;
          var G__433883 = cljs.core.count.call(null, c__3259__auto___433880);
          var G__433884 = 0;
          seq__433861_433867 = G__433881;
          chunk__433862_433868 = G__433882;
          count__433863_433869 = G__433883;
          i__433864_433870 = G__433884;
          continue
        }else {
          var vec__433866_433885 = cljs.core.first.call(null, seq__433861_433879__$1);
          var ev__431429__auto___433886 = cljs.core.nth.call(null, vec__433866_433885, 0, null);
          var func__431430__auto___433887 = cljs.core.nth.call(null, vec__433866_433885, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___433886, func__431430__auto___433887);
          var G__433888 = cljs.core.next.call(null, seq__433861_433879__$1);
          var G__433889 = null;
          var G__433890 = 0;
          var G__433891 = 0;
          seq__433861_433867 = G__433888;
          chunk__433862_433868 = G__433889;
          count__433863_433869 = G__433890;
          i__433864_433870 = G__433891;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.module.edit_btn = function edit_btn(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:i", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:mode"], true)), orchard.module.edit_module_btn_icon)], true)], true));
  var seq__433898_433904 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    return orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:mode", cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:mode")).call(null, cljs.core.deref.call(null, this$)), "\ufdd0:present") ? "\ufdd0:edit" : "\ufdd0:present")
  }], true)));
  var chunk__433899_433905 = null;
  var count__433900_433906 = 0;
  var i__433901_433907 = 0;
  while(true) {
    if(i__433901_433907 < count__433900_433906) {
      var vec__433902_433908 = cljs.core._nth.call(null, chunk__433899_433905, i__433901_433907);
      var ev__431429__auto___433909 = cljs.core.nth.call(null, vec__433902_433908, 0, null);
      var func__431430__auto___433910 = cljs.core.nth.call(null, vec__433902_433908, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___433909, func__431430__auto___433910);
      var G__433911 = seq__433898_433904;
      var G__433912 = chunk__433899_433905;
      var G__433913 = count__433900_433906;
      var G__433914 = i__433901_433907 + 1;
      seq__433898_433904 = G__433911;
      chunk__433899_433905 = G__433912;
      count__433900_433906 = G__433913;
      i__433901_433907 = G__433914;
      continue
    }else {
      var temp__4092__auto___433915 = cljs.core.seq.call(null, seq__433898_433904);
      if(temp__4092__auto___433915) {
        var seq__433898_433916__$1 = temp__4092__auto___433915;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__433898_433916__$1)) {
          var c__3259__auto___433917 = cljs.core.chunk_first.call(null, seq__433898_433916__$1);
          var G__433918 = cljs.core.chunk_rest.call(null, seq__433898_433916__$1);
          var G__433919 = c__3259__auto___433917;
          var G__433920 = cljs.core.count.call(null, c__3259__auto___433917);
          var G__433921 = 0;
          seq__433898_433904 = G__433918;
          chunk__433899_433905 = G__433919;
          count__433900_433906 = G__433920;
          i__433901_433907 = G__433921;
          continue
        }else {
          var vec__433903_433922 = cljs.core.first.call(null, seq__433898_433916__$1);
          var ev__431429__auto___433923 = cljs.core.nth.call(null, vec__433903_433922, 0, null);
          var func__431430__auto___433924 = cljs.core.nth.call(null, vec__433903_433922, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___433923, func__431430__auto___433924);
          var G__433925 = cljs.core.next.call(null, seq__433898_433916__$1);
          var G__433926 = null;
          var G__433927 = 0;
          var G__433928 = 0;
          seq__433898_433904 = G__433925;
          chunk__433899_433905 = G__433926;
          count__433900_433906 = G__433927;
          i__433901_433907 = G__433928;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.module/save-module", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:save", null], true), "\ufdd0:reaction", function(this$) {
  orchard.util.log.log.call(null, "Save module");
  var original_doc = cljs.core.first.call(null, (new cljs.core.Keyword("\ufdd0:args")).call(null, cljs.core.deref.call(null, this$)));
  var doc_keys = cljs.core.conj.call(null, cljs.core.keys.call(null, original_doc), "\ufdd0:id", "\ufdd0:rev");
  var new_doc = cljs.core.select_keys.call(null, cljs.core.deref.call(null, this$), doc_keys);
  var doc_id = (new cljs.core.Keyword("\ufdd0:id")).call(null, new_doc);
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_433936) {
        var state_val_433937 = state_433936[1];
        if(state_val_433937 === 2) {
          var inst_433932 = state_433936[2];
          var inst_433933 = (new cljs.core.Keyword("\ufdd0:rev")).call(null, inst_433932);
          var inst_433934 = orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:rev", inst_433933);
          var state_433936__$1 = state_433936;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_433936__$1, inst_433934)
        }else {
          if(state_val_433937 === 1) {
            var inst_433930 = orchard.model.save_object_BANG_.call(null, orchard.objects.app.db, doc_id, new_doc);
            var state_433936__$1 = state_433936;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_433936__$1, 2, inst_433930)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_433939 = new Array(5);
            statearr_433939[0] = state_machine__4793__auto__;
            statearr_433939[1] = 1;
            return statearr_433939
          };
          var state_machine__4793__auto____1 = function(state_433936) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_433936);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_433936) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_433936)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_433940 = f__4865__auto__.call(null);
      statearr_433940[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_433940
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
});
orchard.module.swap_modules = function swap_modules(parent, mod_a, mod_b) {
  if(cljs.core._EQ_.call(null, cljs.core.count.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([(new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, mod_a)), null, (new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, mod_b)), null], true), (new cljs.core.Keyword("\ufdd0:modules")).call(null, cljs.core.deref.call(null, parent)))), 2)) {
    var id_a = (new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, mod_a));
    var id_b = (new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, mod_b));
    return orchard.object.update_BANG_.call(null, parent, cljs.core.PersistentVector.fromArray(["\ufdd0:modules"], true), function(p1__433929_SHARP_) {
      return cljs.core.reduce.call(null, function(mods, mod) {
        return cljs.core.conj.call(null, mods, function() {
          var G__433942 = (new cljs.core.Keyword("\ufdd0:id")).call(null, mod);
          if(cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "id-b", "id-b", -1637305879, null), G__433942)) {
            return mod_a
          }else {
            if(cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "id-a", "id-a", -1637305880, null), G__433942)) {
              return mod_b
            }else {
              if("\ufdd0:else") {
                return mod
              }else {
                return null
              }
            }
          }
        }())
      }, p1__433929_SHARP_)
    })
  }else {
    return null
  }
};
orchard.module.replace_module = function replace_module(old_mod, new_mod) {
  var new_id = (new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, old_mod));
  var old_id = (new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, new_mod));
  var parent = orchard.object.parent.call(null, old_mod);
  var mods = cljs.core.reduce.call(null, function(new_id, old_id, parent) {
    return function(mods, mod) {
      return cljs.core.conj.call(null, mods, cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, mod)), new_id) ? new_mod : mod)
    }
  }(new_id, old_id, parent), cljs.core.PersistentVector.EMPTY, (new cljs.core.Keyword("\ufdd0:modules")).call(null, cljs.core.deref.call(null, parent)));
  orchard.object.assoc_BANG_.call(null, parent, "\ufdd0:modules", mods);
  return orchard.object.parent_BANG_.call(null, parent, new_mod)
};
orchard.module.create_module_icon = function create_module_icon(template, index, icon, create_fn) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-selector-icon", icon], true));
  var seq__433959_433975 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__4864__auto__) {
      return function() {
        var f__4865__auto__ = function() {
          var switch__4792__auto__ = function(c__4864__auto__) {
            return function(state_433968) {
              var state_val_433969 = state_433968[1];
              if(state_val_433969 === 2) {
                var inst_433965 = state_433968[2];
                var inst_433966 = orchard.object.raise.call(null, template, "\ufdd0:add-module", template, inst_433965, index);
                var state_433968__$1 = state_433968;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_433968__$1, inst_433966)
              }else {
                if(state_val_433969 === 1) {
                  var inst_433963 = create_fn.call(null);
                  var state_433968__$1 = state_433968;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_433968__$1, 2, inst_433963)
                }else {
                  return null
                }
              }
            }
          }(c__4864__auto__);
          return function(switch__4792__auto__, c__4864__auto__) {
            return function() {
              var state_machine__4793__auto__ = null;
              var state_machine__4793__auto____0 = function() {
                var statearr_433971 = new Array(5);
                statearr_433971[0] = state_machine__4793__auto__;
                statearr_433971[1] = 1;
                return statearr_433971
              };
              var state_machine__4793__auto____1 = function(state_433968) {
                while(true) {
                  var result__4794__auto__ = switch__4792__auto__.call(null, state_433968);
                  if(result__4794__auto__ === "\ufdd0:recur") {
                    continue
                  }else {
                    return result__4794__auto__
                  }
                  break
                }
              };
              state_machine__4793__auto__ = function(state_433968) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__4793__auto____0.call(this);
                  case 1:
                    return state_machine__4793__auto____1.call(this, state_433968)
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
              state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
              return state_machine__4793__auto__
            }()
          }(switch__4792__auto__, c__4864__auto__)
        }();
        var state__4866__auto__ = function() {
          var statearr_433972 = f__4865__auto__.call(null);
          statearr_433972[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
          return statearr_433972
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
      }
    }(c__4864__auto__));
    return c__4864__auto__
  }], true)));
  var chunk__433960_433976 = null;
  var count__433961_433977 = 0;
  var i__433962_433978 = 0;
  while(true) {
    if(i__433962_433978 < count__433961_433977) {
      var vec__433973_433979 = cljs.core._nth.call(null, chunk__433960_433976, i__433962_433978);
      var ev__431429__auto___433980 = cljs.core.nth.call(null, vec__433973_433979, 0, null);
      var func__431430__auto___433981 = cljs.core.nth.call(null, vec__433973_433979, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___433980, func__431430__auto___433981);
      var G__433982 = seq__433959_433975;
      var G__433983 = chunk__433960_433976;
      var G__433984 = count__433961_433977;
      var G__433985 = i__433962_433978 + 1;
      seq__433959_433975 = G__433982;
      chunk__433960_433976 = G__433983;
      count__433961_433977 = G__433984;
      i__433962_433978 = G__433985;
      continue
    }else {
      var temp__4092__auto___433986 = cljs.core.seq.call(null, seq__433959_433975);
      if(temp__4092__auto___433986) {
        var seq__433959_433987__$1 = temp__4092__auto___433986;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__433959_433987__$1)) {
          var c__3259__auto___433988 = cljs.core.chunk_first.call(null, seq__433959_433987__$1);
          var G__433989 = cljs.core.chunk_rest.call(null, seq__433959_433987__$1);
          var G__433990 = c__3259__auto___433988;
          var G__433991 = cljs.core.count.call(null, c__3259__auto___433988);
          var G__433992 = 0;
          seq__433959_433975 = G__433989;
          chunk__433960_433976 = G__433990;
          count__433961_433977 = G__433991;
          i__433962_433978 = G__433992;
          continue
        }else {
          var vec__433974_433993 = cljs.core.first.call(null, seq__433959_433987__$1);
          var ev__431429__auto___433994 = cljs.core.nth.call(null, vec__433974_433993, 0, null);
          var func__431430__auto___433995 = cljs.core.nth.call(null, vec__433974_433993, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___433994, func__431430__auto___433995);
          var G__433996 = cljs.core.next.call(null, seq__433959_433987__$1);
          var G__433997 = null;
          var G__433998 = 0;
          var G__433999 = 0;
          seq__433959_433975 = G__433996;
          chunk__433960_433976 = G__433997;
          count__433961_433977 = G__433998;
          i__433962_433978 = G__433999;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.module.module_btn_icon = function module_btn_icon(mode) {
  if(cljs.core._EQ_.call(null, mode, "\ufdd0:present")) {
    return"icon-pencil module-btn"
  }else {
    return"icon-ok module-btn"
  }
};
orchard.module.module_btn = function module_btn(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:i", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:mode"], true)), orchard.module.module_btn_icon)], true)], true));
  var seq__434006_434012 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    return orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:mode", cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:mode")).call(null, cljs.core.deref.call(null, this$)), "\ufdd0:present") ? "\ufdd0:edit" : "\ufdd0:present")
  }], true)));
  var chunk__434007_434013 = null;
  var count__434008_434014 = 0;
  var i__434009_434015 = 0;
  while(true) {
    if(i__434009_434015 < count__434008_434014) {
      var vec__434010_434016 = cljs.core._nth.call(null, chunk__434007_434013, i__434009_434015);
      var ev__431429__auto___434017 = cljs.core.nth.call(null, vec__434010_434016, 0, null);
      var func__431430__auto___434018 = cljs.core.nth.call(null, vec__434010_434016, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___434017, func__431430__auto___434018);
      var G__434019 = seq__434006_434012;
      var G__434020 = chunk__434007_434013;
      var G__434021 = count__434008_434014;
      var G__434022 = i__434009_434015 + 1;
      seq__434006_434012 = G__434019;
      chunk__434007_434013 = G__434020;
      count__434008_434014 = G__434021;
      i__434009_434015 = G__434022;
      continue
    }else {
      var temp__4092__auto___434023 = cljs.core.seq.call(null, seq__434006_434012);
      if(temp__4092__auto___434023) {
        var seq__434006_434024__$1 = temp__4092__auto___434023;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__434006_434024__$1)) {
          var c__3259__auto___434025 = cljs.core.chunk_first.call(null, seq__434006_434024__$1);
          var G__434026 = cljs.core.chunk_rest.call(null, seq__434006_434024__$1);
          var G__434027 = c__3259__auto___434025;
          var G__434028 = cljs.core.count.call(null, c__3259__auto___434025);
          var G__434029 = 0;
          seq__434006_434012 = G__434026;
          chunk__434007_434013 = G__434027;
          count__434008_434014 = G__434028;
          i__434009_434015 = G__434029;
          continue
        }else {
          var vec__434011_434030 = cljs.core.first.call(null, seq__434006_434024__$1);
          var ev__431429__auto___434031 = cljs.core.nth.call(null, vec__434011_434030, 0, null);
          var func__431430__auto___434032 = cljs.core.nth.call(null, vec__434011_434030, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___434031, func__431430__auto___434032);
          var G__434033 = cljs.core.next.call(null, seq__434006_434024__$1);
          var G__434034 = null;
          var G__434035 = 0;
          var G__434036 = 0;
          seq__434006_434012 = G__434033;
          chunk__434007_434013 = G__434034;
          count__434008_434014 = G__434035;
          i__434009_434015 = G__434036;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.module.popover = function popover(module, type) {
  var index = function() {
    var G__434043 = type;
    if(cljs.core._EQ_.call(null, "\ufdd0:content", G__434043)) {
      return orchard.module.index_of_module.call(null, module) + 1
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0:top", G__434043)) {
        return 0
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));
        }else {
          return null
        }
      }
    }
  }();
  var template = function() {
    var G__434044 = type;
    if(cljs.core._EQ_.call(null, "\ufdd0:content", G__434044)) {
      return orchard.object.parent.call(null, module)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0:top", G__434044)) {
        return module
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div.popover-container", function() {
    var iter__3228__auto__ = function iter__434045(s__434046) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__434046__$1 = s__434046;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__434046__$1);
          if(temp__4092__auto__) {
            var s__434046__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__434046__$2)) {
              var c__3226__auto__ = cljs.core.chunk_first.call(null, s__434046__$2);
              var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
              var b__434048 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
              if(function() {
                var i__434047 = 0;
                while(true) {
                  if(i__434047 < size__3227__auto__) {
                    var icon = cljs.core._nth.call(null, c__3226__auto__, i__434047);
                    cljs.core.chunk_append.call(null, b__434048, cljs.core.PersistentVector.fromArray(["\ufdd0:div.popover-icon", icon], true));
                    var G__434049 = i__434047 + 1;
                    i__434047 = G__434049;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__434048), iter__434045.call(null, cljs.core.chunk_rest.call(null, s__434046__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__434048), null)
              }
            }else {
              var icon = cljs.core.first.call(null, s__434046__$2);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.popover-icon", icon], true), iter__434045.call(null, cljs.core.rest.call(null, s__434046__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3228__auto__.call(null, cljs.core.PersistentVector.fromArray([orchard.module.create_module_icon.call(null, template, index, orchard.objects.modules.tiny_mce.icon, orchard.objects.modules.tiny_mce.create_module), orchard.module.create_module_icon.call(null, template, index, orchard.objects.modules.markdown.icon, orchard.objects.modules.markdown.create_module), orchard.module.create_module_icon.call(null, template, index, orchard.objects.modules.html.icon, orchard.objects.modules.html.create_module), 
    orchard.module.create_module_icon.call(null, template, index, orchard.objects.modules.media.icon, orchard.objects.modules.media.create_module)], true))
  }()], true)
};
orchard.module.clicked_away_STAR_ = cljs.core.atom.call(null, false);
orchard.module.is_visible_STAR_ = cljs.core.atom.call(null, false);
$(document).click(function(e) {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = cljs.core.deref.call(null, orchard.module.is_visible_STAR_);
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.core.deref.call(null, orchard.module.clicked_away_STAR_)
    }else {
      return and__3941__auto__
    }
  }())) {
    orchard.util.dom.$.call(null, ".popover-trigger").data("visible", "true");
    orchard.util.dom.$.call(null, ".popover-trigger").popover("hide");
    orchard.util.dom.$.call(null, ".spacer-nav").hide();
    return cljs.core.reset_BANG_.call(null, orchard.module.clicked_away_STAR_, cljs.core.reset_BANG_.call(null, orchard.module.is_visible_STAR_, false))
  }else {
    return cljs.core.reset_BANG_.call(null, orchard.module.clicked_away_STAR_, true)
  }
});
orchard.module.create_module_btn = function create_module_btn(module, popover_type) {
  var e__431436__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:span.badge.popover-trigger", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:data-title", "Add New Module", "\ufdd0:data-placement", "bottom", "\ufdd0:data-html", "true", "\ufdd0:data-trigger", "manual"], true), cljs.core.PersistentVector.fromArray(["\ufdd0:i.icon-plus.icon-white"], true)], true));
  var seq__434056_434062 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(this$, e) {
    var popover_html = crate.core.html.call(null, orchard.module.popover.call(null, module, popover_type));
    $(this$).data("content", popover_html);
    $(this$).popover("show");
    $(this$).data("visible", "true");
    cljs.core.reset_BANG_.call(null, orchard.module.clicked_away_STAR_, false);
    cljs.core.reset_BANG_.call(null, orchard.module.is_visible_STAR_, true);
    return e.preventDefault()
  }], true)));
  var chunk__434057_434063 = null;
  var count__434058_434064 = 0;
  var i__434059_434065 = 0;
  while(true) {
    if(i__434059_434065 < count__434058_434064) {
      var vec__434060_434066 = cljs.core._nth.call(null, chunk__434057_434063, i__434059_434065);
      var ev__431437__auto___434067 = cljs.core.nth.call(null, vec__434060_434066, 0, null);
      var func__431438__auto___434068 = cljs.core.nth.call(null, vec__434060_434066, 1, null);
      orchard.util.dom.on_event.call(null, e__431436__auto__, ev__431437__auto___434067, cljs.core.partial.call(null, func__431438__auto___434068, e__431436__auto__));
      var G__434069 = seq__434056_434062;
      var G__434070 = chunk__434057_434063;
      var G__434071 = count__434058_434064;
      var G__434072 = i__434059_434065 + 1;
      seq__434056_434062 = G__434069;
      chunk__434057_434063 = G__434070;
      count__434058_434064 = G__434071;
      i__434059_434065 = G__434072;
      continue
    }else {
      var temp__4092__auto___434073 = cljs.core.seq.call(null, seq__434056_434062);
      if(temp__4092__auto___434073) {
        var seq__434056_434074__$1 = temp__4092__auto___434073;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__434056_434074__$1)) {
          var c__3259__auto___434075 = cljs.core.chunk_first.call(null, seq__434056_434074__$1);
          var G__434076 = cljs.core.chunk_rest.call(null, seq__434056_434074__$1);
          var G__434077 = c__3259__auto___434075;
          var G__434078 = cljs.core.count.call(null, c__3259__auto___434075);
          var G__434079 = 0;
          seq__434056_434062 = G__434076;
          chunk__434057_434063 = G__434077;
          count__434058_434064 = G__434078;
          i__434059_434065 = G__434079;
          continue
        }else {
          var vec__434061_434080 = cljs.core.first.call(null, seq__434056_434074__$1);
          var ev__431437__auto___434081 = cljs.core.nth.call(null, vec__434061_434080, 0, null);
          var func__431438__auto___434082 = cljs.core.nth.call(null, vec__434061_434080, 1, null);
          orchard.util.dom.on_event.call(null, e__431436__auto__, ev__431437__auto___434081, cljs.core.partial.call(null, func__431438__auto___434082, e__431436__auto__));
          var G__434083 = cljs.core.next.call(null, seq__434056_434074__$1);
          var G__434084 = null;
          var G__434085 = 0;
          var G__434086 = 0;
          seq__434056_434062 = G__434083;
          chunk__434057_434063 = G__434084;
          count__434058_434064 = G__434085;
          i__434059_434065 = G__434086;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431436__auto__
};
orchard.module.parent_val = function parent_val(module, type, k) {
  var p = orchard.object.parent.call(null, module);
  while(true) {
    if(cljs.core.truth_(p)) {
      if(cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:type")).call(null, cljs.core.deref.call(null, p)), type)) {
        return k.call(null, cljs.core.deref.call(null, p))
      }else {
        var G__434087 = orchard.object.parent.call(null, p);
        p = G__434087;
        continue
      }
    }else {
      return null
    }
    break
  }
};
orchard.module.document_locked_QMARK_ = function document_locked_QMARK_(module) {
  return orchard.module.parent_val.call(null, module, "wiki-document", "\ufdd0:locked?")
};
orchard.module.top_spacer_nav$ = function top_spacer_nav$(template) {
  return $([cljs.core.str("#top-spacer-nav-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, template)))].join(""))
};
orchard.module.top_spacer = function top_spacer(template) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.row-fluid.spacer-tray", cljs.core.PersistentVector.fromArray(["\ufdd0:ul.spacer-nav.pagination-centered", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", [cljs.core.str("top-spacer-nav-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, template)))].join("")], true), cljs.core.PersistentVector.fromArray(["\ufdd0:li.active.spacer-item", orchard.module.create_module_btn.call(null, 
  template, "\ufdd0:top")], true)], true)], true));
  var seq__434094_434100 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:mouseover", function() {
    if(cljs.core.truth_(orchard.module.document_locked_QMARK_.call(null, template))) {
      return null
    }else {
      return orchard.module.top_spacer_nav$.call(null, template).show()
    }
  }, "\ufdd0:mouseout", function() {
    if(cljs.core.truth_(cljs.core.deref.call(null, orchard.module.is_visible_STAR_))) {
      return null
    }else {
      return orchard.module.top_spacer_nav$.call(null, template).hide()
    }
  }], true)));
  var chunk__434095_434101 = null;
  var count__434096_434102 = 0;
  var i__434097_434103 = 0;
  while(true) {
    if(i__434097_434103 < count__434096_434102) {
      var vec__434098_434104 = cljs.core._nth.call(null, chunk__434095_434101, i__434097_434103);
      var ev__431429__auto___434105 = cljs.core.nth.call(null, vec__434098_434104, 0, null);
      var func__431430__auto___434106 = cljs.core.nth.call(null, vec__434098_434104, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___434105, func__431430__auto___434106);
      var G__434107 = seq__434094_434100;
      var G__434108 = chunk__434095_434101;
      var G__434109 = count__434096_434102;
      var G__434110 = i__434097_434103 + 1;
      seq__434094_434100 = G__434107;
      chunk__434095_434101 = G__434108;
      count__434096_434102 = G__434109;
      i__434097_434103 = G__434110;
      continue
    }else {
      var temp__4092__auto___434111 = cljs.core.seq.call(null, seq__434094_434100);
      if(temp__4092__auto___434111) {
        var seq__434094_434112__$1 = temp__4092__auto___434111;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__434094_434112__$1)) {
          var c__3259__auto___434113 = cljs.core.chunk_first.call(null, seq__434094_434112__$1);
          var G__434114 = cljs.core.chunk_rest.call(null, seq__434094_434112__$1);
          var G__434115 = c__3259__auto___434113;
          var G__434116 = cljs.core.count.call(null, c__3259__auto___434113);
          var G__434117 = 0;
          seq__434094_434100 = G__434114;
          chunk__434095_434101 = G__434115;
          count__434096_434102 = G__434116;
          i__434097_434103 = G__434117;
          continue
        }else {
          var vec__434099_434118 = cljs.core.first.call(null, seq__434094_434112__$1);
          var ev__431429__auto___434119 = cljs.core.nth.call(null, vec__434099_434118, 0, null);
          var func__431430__auto___434120 = cljs.core.nth.call(null, vec__434099_434118, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___434119, func__431430__auto___434120);
          var G__434121 = cljs.core.next.call(null, seq__434094_434112__$1);
          var G__434122 = null;
          var G__434123 = 0;
          var G__434124 = 0;
          seq__434094_434100 = G__434121;
          chunk__434095_434101 = G__434122;
          count__434096_434102 = G__434123;
          i__434097_434103 = G__434124;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.module.spacer_nav$ = function spacer_nav$(module) {
  return $([cljs.core.str("#spacer-nav-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, module)))].join(""))
};
orchard.module.spacer = function spacer(module) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.row-fluid.spacer-tray", cljs.core.PersistentVector.fromArray(["\ufdd0:ul.spacer-nav.pagination-centered", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", [cljs.core.str("spacer-nav-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, module)))].join("")], true), cljs.core.PersistentVector.fromArray(["\ufdd0:li.active.spacer-item", orchard.module.create_module_btn.call(null, 
  module, "\ufdd0:content")], true)], true)], true));
  var seq__434131_434137 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:mouseover", function() {
    if(cljs.core.truth_(orchard.module.document_locked_QMARK_.call(null, module))) {
      return null
    }else {
      return orchard.module.spacer_nav$.call(null, module).show()
    }
  }, "\ufdd0:mouseout", function() {
    return orchard.module.spacer_nav$.call(null, module).hide()
  }], true)));
  var chunk__434132_434138 = null;
  var count__434133_434139 = 0;
  var i__434134_434140 = 0;
  while(true) {
    if(i__434134_434140 < count__434133_434139) {
      var vec__434135_434141 = cljs.core._nth.call(null, chunk__434132_434138, i__434134_434140);
      var ev__431429__auto___434142 = cljs.core.nth.call(null, vec__434135_434141, 0, null);
      var func__431430__auto___434143 = cljs.core.nth.call(null, vec__434135_434141, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___434142, func__431430__auto___434143);
      var G__434144 = seq__434131_434137;
      var G__434145 = chunk__434132_434138;
      var G__434146 = count__434133_434139;
      var G__434147 = i__434134_434140 + 1;
      seq__434131_434137 = G__434144;
      chunk__434132_434138 = G__434145;
      count__434133_434139 = G__434146;
      i__434134_434140 = G__434147;
      continue
    }else {
      var temp__4092__auto___434148 = cljs.core.seq.call(null, seq__434131_434137);
      if(temp__4092__auto___434148) {
        var seq__434131_434149__$1 = temp__4092__auto___434148;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__434131_434149__$1)) {
          var c__3259__auto___434150 = cljs.core.chunk_first.call(null, seq__434131_434149__$1);
          var G__434151 = cljs.core.chunk_rest.call(null, seq__434131_434149__$1);
          var G__434152 = c__3259__auto___434150;
          var G__434153 = cljs.core.count.call(null, c__3259__auto___434150);
          var G__434154 = 0;
          seq__434131_434137 = G__434151;
          chunk__434132_434138 = G__434152;
          count__434133_434139 = G__434153;
          i__434134_434140 = G__434154;
          continue
        }else {
          var vec__434136_434155 = cljs.core.first.call(null, seq__434131_434149__$1);
          var ev__431429__auto___434156 = cljs.core.nth.call(null, vec__434136_434155, 0, null);
          var func__431430__auto___434157 = cljs.core.nth.call(null, vec__434136_434155, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___434156, func__431430__auto___434157);
          var G__434158 = cljs.core.next.call(null, seq__434131_434149__$1);
          var G__434159 = null;
          var G__434160 = 0;
          var G__434161 = 0;
          seq__434131_434137 = G__434158;
          chunk__434132_434138 = G__434159;
          count__434133_434139 = G__434160;
          i__434134_434140 = G__434161;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.module.hide = function hide(module) {
  var tray = $([cljs.core.str("#module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, module))), cljs.core.str(" .module-tray")].join(""));
  var mod = $([cljs.core.str("#module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, module)))].join(""));
  tray.css("visibility", "hidden");
  return tray.css("opacity", 0)
};
orchard.module.show = function show(module) {
  var tray = $([cljs.core.str("#module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, module))), cljs.core.str(" .module-tray")].join(""));
  var mod = $([cljs.core.str("#module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, module)))].join(""));
  tray.css("visibility", "visible");
  return tray.css("opacity", 1)
};
orchard.module.module_view = function() {
  var module_view__delegate = function(module, body, handlers) {
    var e__431436__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", [cljs.core.str("span12 module "), cljs.core.str((new cljs.core.Keyword("\ufdd0:type")).call(null, cljs.core.deref.call(null, module)))].join(""), "\ufdd0:id", [cljs.core.str("module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, module)))].join("")], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-tray", 
    orchard.module.delete_btn.call(null, module), orchard.module.edit_btn.call(null, module)], true), body], true));
    var seq__434168_434174 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:mouseout", function(this$, e) {
      if(cljs.core.truth_(orchard.module.document_locked_QMARK_.call(null, module))) {
        return null
      }else {
        return orchard.module.hide.call(null, module)
      }
    }, "\ufdd0:mouseover", function(this$, e) {
      if(cljs.core.truth_(orchard.module.document_locked_QMARK_.call(null, module))) {
        return null
      }else {
        return orchard.module.show.call(null, module)
      }
    }, "\ufdd0:dragstart", function(this$, e) {
      orchard.util.log.log.call(null, "drag start");
      return e.dataTransfer.setData("Text", e.target.id)
    }, "\ufdd0:ondragover", function(this$, e) {
      orchard.util.log.log.call(null, "drag over");
      e.preventDefault();
      var id = e.dataTransfer.getData("Text");
      return orchard.util.dom.append_BANG_.call(null, e.target, orchard.util.dom.$.call(null, id))
    }, handlers], true)));
    var chunk__434169_434175 = null;
    var count__434170_434176 = 0;
    var i__434171_434177 = 0;
    while(true) {
      if(i__434171_434177 < count__434170_434176) {
        var vec__434172_434178 = cljs.core._nth.call(null, chunk__434169_434175, i__434171_434177);
        var ev__431437__auto___434179 = cljs.core.nth.call(null, vec__434172_434178, 0, null);
        var func__431438__auto___434180 = cljs.core.nth.call(null, vec__434172_434178, 1, null);
        orchard.util.dom.on_event.call(null, e__431436__auto__, ev__431437__auto___434179, cljs.core.partial.call(null, func__431438__auto___434180, e__431436__auto__));
        var G__434181 = seq__434168_434174;
        var G__434182 = chunk__434169_434175;
        var G__434183 = count__434170_434176;
        var G__434184 = i__434171_434177 + 1;
        seq__434168_434174 = G__434181;
        chunk__434169_434175 = G__434182;
        count__434170_434176 = G__434183;
        i__434171_434177 = G__434184;
        continue
      }else {
        var temp__4092__auto___434185 = cljs.core.seq.call(null, seq__434168_434174);
        if(temp__4092__auto___434185) {
          var seq__434168_434186__$1 = temp__4092__auto___434185;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__434168_434186__$1)) {
            var c__3259__auto___434187 = cljs.core.chunk_first.call(null, seq__434168_434186__$1);
            var G__434188 = cljs.core.chunk_rest.call(null, seq__434168_434186__$1);
            var G__434189 = c__3259__auto___434187;
            var G__434190 = cljs.core.count.call(null, c__3259__auto___434187);
            var G__434191 = 0;
            seq__434168_434174 = G__434188;
            chunk__434169_434175 = G__434189;
            count__434170_434176 = G__434190;
            i__434171_434177 = G__434191;
            continue
          }else {
            var vec__434173_434192 = cljs.core.first.call(null, seq__434168_434186__$1);
            var ev__431437__auto___434193 = cljs.core.nth.call(null, vec__434173_434192, 0, null);
            var func__431438__auto___434194 = cljs.core.nth.call(null, vec__434173_434192, 1, null);
            orchard.util.dom.on_event.call(null, e__431436__auto__, ev__431437__auto___434193, cljs.core.partial.call(null, func__431438__auto___434194, e__431436__auto__));
            var G__434195 = cljs.core.next.call(null, seq__434168_434186__$1);
            var G__434196 = null;
            var G__434197 = 0;
            var G__434198 = 0;
            seq__434168_434174 = G__434195;
            chunk__434169_434175 = G__434196;
            count__434170_434176 = G__434197;
            i__434171_434177 = G__434198;
            continue
          }
        }else {
        }
      }
      break
    }
    return e__431436__auto__
  };
  var module_view = function(module, body, var_args) {
    var handlers = null;
    if(arguments.length > 2) {
      handlers = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return module_view__delegate.call(this, module, body, handlers)
  };
  module_view.cljs$lang$maxFixedArity = 2;
  module_view.cljs$lang$applyTo = function(arglist__434199) {
    var module = cljs.core.first(arglist__434199);
    arglist__434199 = cljs.core.next(arglist__434199);
    var body = cljs.core.first(arglist__434199);
    var handlers = cljs.core.rest(arglist__434199);
    return module_view__delegate(module, body, handlers)
  };
  module_view.cljs$core$IFn$_invoke$arity$variadic = module_view__delegate;
  return module_view
}();
goog.provide("orchard.objects.modules.media");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.util.log");
goog.require("orchard.module");
goog.require("crate.binding");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("crate.core");
goog.require("orchard.model");
goog.require("orchard.util.core");
goog.require("orchard.util.dom");
goog.require("clojure.string");
goog.require("crate.binding");
goog.require("orchard.object");
goog.require("cljs.core.async");
goog.require("orchard.module");
orchard.objects.modules.media.gui = node_require("nw.gui");
orchard.objects.modules.media.os = node_require("os");
orchard.objects.modules.media.fs = node_require("fs");
orchard.objects.modules.media.handle_file_select = function handle_file_select(handler, evt) {
  evt.stopPropagation();
  evt.preventDefault();
  var files = evt.dataTransfer.files;
  handler.call(null, files);
  var n__3306__auto__ = files.length;
  var i = 0;
  while(true) {
    if(i < n__3306__auto__) {
      var rdr_436185 = new FileReader;
      var the_file_436186 = files[i];
      orchard.util.log.log.call(null, "File path: ", the_file_436186.path);
      var G__436187 = i + 1;
      i = G__436187;
      continue
    }else {
      return null
    }
    break
  }
};
orchard.objects.modules.media.handle_drag_over = function handle_drag_over(evt) {
  evt.stopPropagation();
  evt.preventDefault();
  return evt.dataTransfer.dropEffect = "copy"
};
orchard.objects.modules.media.setup_media_drop_zone = function setup_media_drop_zone(id) {
  var dzs = dommy.utils.__GT_Array.call(null, document.querySelectorAll(dommy.core.selector.call(null, id)));
  var seq__436192 = cljs.core.seq.call(null, dzs);
  var chunk__436193 = null;
  var count__436194 = 0;
  var i__436195 = 0;
  while(true) {
    if(i__436195 < count__436194) {
      var elem = cljs.core._nth.call(null, chunk__436193, i__436195);
      dommy.listen_BANG_.call(null, elem, "\ufdd0:dragover", orchard.objects.modules.media.handle_drag_over);
      dommy.listen_BANG_.call(null, elem, "\ufdd0:drop", orchard.objects.modules.media.handle_file_select);
      var G__436196 = seq__436192;
      var G__436197 = chunk__436193;
      var G__436198 = count__436194;
      var G__436199 = i__436195 + 1;
      seq__436192 = G__436196;
      chunk__436193 = G__436197;
      count__436194 = G__436198;
      i__436195 = G__436199;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__436192);
      if(temp__4092__auto__) {
        var seq__436192__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436192__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__436192__$1);
          var G__436200 = cljs.core.chunk_rest.call(null, seq__436192__$1);
          var G__436201 = c__3259__auto__;
          var G__436202 = cljs.core.count.call(null, c__3259__auto__);
          var G__436203 = 0;
          seq__436192 = G__436200;
          chunk__436193 = G__436201;
          count__436194 = G__436202;
          i__436195 = G__436203;
          continue
        }else {
          var elem = cljs.core.first.call(null, seq__436192__$1);
          dommy.listen_BANG_.call(null, elem, "\ufdd0:dragover", orchard.objects.modules.media.handle_drag_over);
          dommy.listen_BANG_.call(null, elem, "\ufdd0:drop", orchard.objects.modules.media.handle_file_select);
          var G__436204 = cljs.core.next.call(null, seq__436192__$1);
          var G__436205 = null;
          var G__436206 = 0;
          var G__436207 = 0;
          seq__436192 = G__436204;
          chunk__436193 = G__436205;
          count__436194 = G__436206;
          i__436195 = G__436207;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
orchard.objects.modules.media.make_dropable = function make_dropable($dropzone, handler) {
  dommy.listen_BANG_.call(null, $dropzone, "\ufdd0:dragover", orchard.objects.modules.media.handle_drag_over);
  return dommy.listen_BANG_.call(null, $dropzone, "\ufdd0:drop", cljs.core.partial.call(null, orchard.objects.modules.media.handle_file_select, handler))
};
orchard.objects.modules.media.prepare_media_canvas = function prepare_media_canvas(this$) {
  var $content = orchard.util.dom.$.call(null, [cljs.core.str("#media-content-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join(""));
  var canvas = document.createElement("canvas");
  orchard.util.dom.empty.call(null, $content);
  canvas["id"] = [cljs.core.str("#media-canvas-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join("");
  return orchard.util.dom.append.call(null, $content, canvas)
};
orchard.objects.modules.media.$media_module_content = function $media_module_content(this$) {
  return orchard.util.dom.$.call(null, [cljs.core.str("#media-module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$))), cljs.core.str(" .media-module-content")].join(""))
};
orchard.objects.modules.media.load_pdf = function load_pdf(this$, file_path) {
  orchard.util.log.log.call(null, "load media file ", (new cljs.core.Keyword("\ufdd0:path")).call(null, cljs.core.deref.call(null, this$)));
  orchard.objects.modules.media.prepare_media_canvas.call(null, this$);
  var canvas = orchard.util.dom.$.call(null, [cljs.core.str("#media-canvas-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join(""));
  if(PDFJS.workerSrc == null) {
    PDFJS.workerSrc = "js/media.js"
  }else {
  }
  return PDFJS.getDocument((new cljs.core.Keyword("\ufdd0:path")).call(null, cljs.core.deref.call(null, this$))).then(function(media) {
    orchard.util.log.log.call(null, "media loaded");
    orchard.util.log.log_obj.call(null, media);
    return media.getPage(1).then(function(page) {
      orchard.util.log.log.call(null, "page loaded");
      orchard.util.log.log_obj.call(null, page);
      var viewport = page.getViewport(0.15);
      var context = canvas.getContext("2d");
      canvas.height = viewport.height;
      canvas.width = viewport.width;
      return page.render(cljs.core.clj__GT_js.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:canvasContext", context, "\ufdd0:viewport", viewport], true)))
    })
  })
};
orchard.objects.modules.media.update_path = function update_path(this$, file_path) {
  var type = cljs.core.keyword.call(null, cljs.core.last.call(null, clojure.string.split.call(null, file_path, /\./)));
  orchard.util.log.log.call(null, "update media for file: ", type);
  return orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:path", file_path, "\ufdd0:type", function() {
    var G__436209 = type;
    if(cljs.core._EQ_.call(null, "\ufdd0:pdf", G__436209)) {
      return"\ufdd0:pdf"
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0:png", G__436209)) {
        return"\ufdd0:img"
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0:tif", G__436209)) {
          return"\ufdd0:img"
        }else {
          if(cljs.core._EQ_.call(null, "\ufdd0:gif", G__436209)) {
            return"\ufdd0:img"
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0:jpg", G__436209)) {
              return"\ufdd0:img"
            }else {
              if(cljs.core._EQ_.call(null, "\ufdd0:ogg", G__436209)) {
                return"\ufdd0:video"
              }else {
                if(cljs.core._EQ_.call(null, "\ufdd0:Ogg", G__436209)) {
                  return"\ufdd0:video"
                }else {
                  if(cljs.core._EQ_.call(null, "\ufdd0:jpeg", G__436209)) {
                    return"\ufdd0:img"
                  }else {
                    if(cljs.core._EQ_.call(null, "\ufdd0:tiff", G__436209)) {
                      return"\ufdd0:img"
                    }else {
                      if(cljs.core._EQ_.call(null, "\ufdd0:mp4", G__436209)) {
                        return"\ufdd0:video"
                      }else {
                        if(cljs.core._EQ_.call(null, "\ufdd0:MP4", G__436209)) {
                          return"\ufdd0:video"
                        }else {
                          if(cljs.core._EQ_.call(null, "\ufdd0:WebM", G__436209)) {
                            return"\ufdd0:video"
                          }else {
                            if(cljs.core._EQ_.call(null, "\ufdd0:webm", G__436209)) {
                              return"\ufdd0:video"
                            }else {
                              if("\ufdd0:else") {
                                return orchard.util.log.log.call(null, "Unsupported file type: ", type)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }())
};
orchard.objects.modules.media.load_file_button = function load_file_button(handler) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:a.btn.btn-small.view-btn-group", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:href", "#load-document"], true), "Open"], true));
  var seq__436216_436222 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    var $chooser = orchard.util.dom.$.call(null, "\ufdd0:#file-dialog");
    e.preventDefault();
    orchard.util.dom.fire_BANG_.call(null, $chooser, "\ufdd0:click");
    return dommy.listen_BANG_.call(null, $chooser, "\ufdd0:change", function($chooser) {
      return function(ev) {
        return handler.call(null, $chooser.value)
      }
    }($chooser))
  }], true)));
  var chunk__436217_436223 = null;
  var count__436218_436224 = 0;
  var i__436219_436225 = 0;
  while(true) {
    if(i__436219_436225 < count__436218_436224) {
      var vec__436220_436226 = cljs.core._nth.call(null, chunk__436217_436223, i__436219_436225);
      var ev__431429__auto___436227 = cljs.core.nth.call(null, vec__436220_436226, 0, null);
      var func__431430__auto___436228 = cljs.core.nth.call(null, vec__436220_436226, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436227, func__431430__auto___436228);
      var G__436229 = seq__436216_436222;
      var G__436230 = chunk__436217_436223;
      var G__436231 = count__436218_436224;
      var G__436232 = i__436219_436225 + 1;
      seq__436216_436222 = G__436229;
      chunk__436217_436223 = G__436230;
      count__436218_436224 = G__436231;
      i__436219_436225 = G__436232;
      continue
    }else {
      var temp__4092__auto___436233 = cljs.core.seq.call(null, seq__436216_436222);
      if(temp__4092__auto___436233) {
        var seq__436216_436234__$1 = temp__4092__auto___436233;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436216_436234__$1)) {
          var c__3259__auto___436235 = cljs.core.chunk_first.call(null, seq__436216_436234__$1);
          var G__436236 = cljs.core.chunk_rest.call(null, seq__436216_436234__$1);
          var G__436237 = c__3259__auto___436235;
          var G__436238 = cljs.core.count.call(null, c__3259__auto___436235);
          var G__436239 = 0;
          seq__436216_436222 = G__436236;
          chunk__436217_436223 = G__436237;
          count__436218_436224 = G__436238;
          i__436219_436225 = G__436239;
          continue
        }else {
          var vec__436221_436240 = cljs.core.first.call(null, seq__436216_436234__$1);
          var ev__431429__auto___436241 = cljs.core.nth.call(null, vec__436221_436240, 0, null);
          var func__431430__auto___436242 = cljs.core.nth.call(null, vec__436221_436240, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436241, func__431430__auto___436242);
          var G__436243 = cljs.core.next.call(null, seq__436216_436234__$1);
          var G__436244 = null;
          var G__436245 = 0;
          var G__436246 = 0;
          seq__436216_436222 = G__436243;
          chunk__436217_436223 = G__436244;
          count__436218_436224 = G__436245;
          i__436219_436225 = G__436246;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.modules.media.edit_toolbar = function edit_toolbar(this$) {
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div.row-fluid.button-bar", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", "main-toolbar-row"], true), orchard.objects.modules.media.load_file_button.call(null, cljs.core.partial.call(null, orchard.objects.modules.media.update_path, this$))], true)
};
orchard.objects.modules.media.render_img = function render_img(path) {
  return cljs.core.PersistentVector.fromArray(["\ufdd0:img.media-content", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:src", path], true)], true)
};
orchard.objects.modules.media.render_video = function render_video(path) {
  return cljs.core.PersistentVector.fromArray(["\ufdd0:video.media-content", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:src", path], true)], true)
};
orchard.objects.modules.media.render_pdf = function render_pdf(path) {
  return cljs.core.PersistentVector.fromArray(["\ufdd0:canvas.media-content"], true)
};
orchard.objects.modules.media.render_place_holder = function render_place_holder() {
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div.media-place-holder", cljs.core.PersistentVector.fromArray(["\ufdd0:img", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:src", "images/missing-file.jpeg"], true)], true)], true)
};
orchard.objects.modules.media.render_media = function render_media(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-content.media-module-content", function() {
    var type = (new cljs.core.Keyword("\ufdd0:type")).call(null, cljs.core.deref.call(null, this$));
    return orchard.objects.modules.media.render_place_holder.call(null)
  }()], true));
  var seq__436253_436259 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__436254_436260 = null;
  var count__436255_436261 = 0;
  var i__436256_436262 = 0;
  while(true) {
    if(i__436256_436262 < count__436255_436261) {
      var vec__436257_436263 = cljs.core._nth.call(null, chunk__436254_436260, i__436256_436262);
      var ev__431429__auto___436264 = cljs.core.nth.call(null, vec__436257_436263, 0, null);
      var func__431430__auto___436265 = cljs.core.nth.call(null, vec__436257_436263, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436264, func__431430__auto___436265);
      var G__436266 = seq__436253_436259;
      var G__436267 = chunk__436254_436260;
      var G__436268 = count__436255_436261;
      var G__436269 = i__436256_436262 + 1;
      seq__436253_436259 = G__436266;
      chunk__436254_436260 = G__436267;
      count__436255_436261 = G__436268;
      i__436256_436262 = G__436269;
      continue
    }else {
      var temp__4092__auto___436270 = cljs.core.seq.call(null, seq__436253_436259);
      if(temp__4092__auto___436270) {
        var seq__436253_436271__$1 = temp__4092__auto___436270;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436253_436271__$1)) {
          var c__3259__auto___436272 = cljs.core.chunk_first.call(null, seq__436253_436271__$1);
          var G__436273 = cljs.core.chunk_rest.call(null, seq__436253_436271__$1);
          var G__436274 = c__3259__auto___436272;
          var G__436275 = cljs.core.count.call(null, c__3259__auto___436272);
          var G__436276 = 0;
          seq__436253_436259 = G__436273;
          chunk__436254_436260 = G__436274;
          count__436255_436261 = G__436275;
          i__436256_436262 = G__436276;
          continue
        }else {
          var vec__436258_436277 = cljs.core.first.call(null, seq__436253_436271__$1);
          var ev__431429__auto___436278 = cljs.core.nth.call(null, vec__436258_436277, 0, null);
          var func__431430__auto___436279 = cljs.core.nth.call(null, vec__436258_436277, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436278, func__431430__auto___436279);
          var G__436280 = cljs.core.next.call(null, seq__436253_436271__$1);
          var G__436281 = null;
          var G__436282 = 0;
          var G__436283 = 0;
          seq__436253_436259 = G__436280;
          chunk__436254_436260 = G__436281;
          count__436255_436261 = G__436282;
          i__436256_436262 = G__436283;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.modules.media.render_edit = function render_edit(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-content.media-module-content", cljs.core.PersistentVector.fromArray(["\ufdd0:div.row-fluid", orchard.objects.modules.media.edit_toolbar.call(null, this$), cljs.core.PersistentVector.fromArray(["\ufdd0:input#file-dialog", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:style", "display:none;", "\ufdd0:type", "file"], true)], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.row-fluid", 
  cljs.core.PersistentVector.fromArray(["\ufdd0:canvas", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", [cljs.core.str("media-content-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join(""), "\ufdd0:style", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:border", "1px solid black"], true)], true)], true)], true)], true));
  var seq__436291_436297 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__436292_436298 = null;
  var count__436293_436299 = 0;
  var i__436294_436300 = 0;
  while(true) {
    if(i__436294_436300 < count__436293_436299) {
      var vec__436295_436301 = cljs.core._nth.call(null, chunk__436292_436298, i__436294_436300);
      var ev__431429__auto___436302 = cljs.core.nth.call(null, vec__436295_436301, 0, null);
      var func__431430__auto___436303 = cljs.core.nth.call(null, vec__436295_436301, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436302, func__431430__auto___436303);
      var G__436304 = seq__436291_436297;
      var G__436305 = chunk__436292_436298;
      var G__436306 = count__436293_436299;
      var G__436307 = i__436294_436300 + 1;
      seq__436291_436297 = G__436304;
      chunk__436292_436298 = G__436305;
      count__436293_436299 = G__436306;
      i__436294_436300 = G__436307;
      continue
    }else {
      var temp__4092__auto___436308 = cljs.core.seq.call(null, seq__436291_436297);
      if(temp__4092__auto___436308) {
        var seq__436291_436309__$1 = temp__4092__auto___436308;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436291_436309__$1)) {
          var c__3259__auto___436310 = cljs.core.chunk_first.call(null, seq__436291_436309__$1);
          var G__436311 = cljs.core.chunk_rest.call(null, seq__436291_436309__$1);
          var G__436312 = c__3259__auto___436310;
          var G__436313 = cljs.core.count.call(null, c__3259__auto___436310);
          var G__436314 = 0;
          seq__436291_436297 = G__436311;
          chunk__436292_436298 = G__436312;
          count__436293_436299 = G__436313;
          i__436294_436300 = G__436314;
          continue
        }else {
          var vec__436296_436315 = cljs.core.first.call(null, seq__436291_436309__$1);
          var ev__431429__auto___436316 = cljs.core.nth.call(null, vec__436296_436315, 0, null);
          var func__431430__auto___436317 = cljs.core.nth.call(null, vec__436296_436315, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436316, func__431430__auto___436317);
          var G__436318 = cljs.core.next.call(null, seq__436291_436309__$1);
          var G__436319 = null;
          var G__436320 = 0;
          var G__436321 = 0;
          seq__436291_436297 = G__436318;
          chunk__436292_436298 = G__436319;
          count__436293_436299 = G__436320;
          i__436294_436300 = G__436321;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.modules.media.render_module = function render_module(this$, mode) {
  orchard.util.dom.replace_with.call(null, orchard.util.dom.$.call(null, [cljs.core.str("#media-module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$))), cljs.core.str(" .module-content")].join("")), function() {
    var G__436324 = mode;
    if(cljs.core._EQ_.call(null, "\ufdd0:edit", G__436324)) {
      return orchard.objects.modules.media.render_edit.call(null, this$)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0:present", G__436324)) {
        return orchard.objects.modules.media.render_media.call(null, this$)
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(mode)].join(""));
        }else {
          return null
        }
      }
    }
  }());
  var G__436325 = mode;
  if(cljs.core._EQ_.call(null, "\ufdd0:edit", G__436325)) {
    return orchard.objects.modules.media.make_dropable.call(null, orchard.util.dom.$.call(null, [cljs.core.str("media-content-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join("")), function(p1__436284_SHARP_) {
      return orchard.util.log.log.call(null, p1__436284_SHARP_)
    })
  }else {
    if(cljs.core._EQ_.call(null, "\ufdd0:present", G__436325)) {
      return null
    }else {
      if("\ufdd0:else") {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(mode)].join(""));
      }else {
        return null
      }
    }
  }
};
orchard.objects.modules.media.icon = cljs.core.PersistentVector.fromArray(["\ufdd0:span.btn.btn-primary.html-icon", "media"], true);
orchard.object.object_STAR_.call(null, "\ufdd0:media-module", "\ufdd0:tags", cljs.core.PersistentHashSet.fromArray(["\ufdd0:module", null], true), "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:delete", null, "\ufdd0:save", null], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.modules/save-module", "\ufdd0:orchard.objects.modules/delete-module"], true), "\ufdd0:mode", "\ufdd0:present", "\ufdd0:editor", null, "\ufdd0:type", null, "\ufdd0:init", 
function(this$, record) {
  orchard.util.log.log.call(null, "init media module");
  orchard.util.log.log_obj.call(null, this$);
  orchard.util.log.log_obj.call(null, record);
  orchard.object.merge_BANG_.call(null, this$, record);
  orchard.util.core.bound_do.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:mode"), cljs.core.partial.call(null, orchard.objects.modules.media.render_module, this$));
  orchard.util.core.bound_do.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:path"), cljs.core.partial.call(null, orchard.objects.modules.media.update_path, this$));
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div.span12.module.media-module", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", [cljs.core.str("media-module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join("")], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-tray", orchard.module.module_btn.call(null, this$)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-element", orchard.objects.modules.media.render_media.call(null, 
  this$)], true)], true)
});
orchard.objects.modules.media.media_doc = function media_doc(db) {
  var oid = orchard.util.log.uuid.call(null);
  return orchard.model.save_object_BANG_.call(null, db, oid, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "\ufdd0:media-module", "\ufdd0:path", "", "\ufdd0:id", oid], true))
};
orchard.objects.modules.media.create_module = function create_module(app) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_436343) {
        var state_val_436344 = state_436343[1];
        if(state_val_436344 === 2) {
          var inst_436340 = state_436343[2];
          var inst_436341 = orchard.object.create.call(null, "\ufdd0:media-module", inst_436340);
          var state_436343__$1 = state_436343;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_436343__$1, inst_436341)
        }else {
          if(state_val_436344 === 1) {
            var inst_436337 = (new cljs.core.Keyword("\ufdd0:db")).call(null, app);
            var inst_436338 = orchard.objects.modules.media.media_doc.call(null, inst_436337);
            var state_436343__$1 = state_436343;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_436343__$1, 2, inst_436338)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_436346 = new Array(5);
            statearr_436346[0] = state_machine__4793__auto__;
            statearr_436346[1] = 1;
            return statearr_436346
          };
          var state_machine__4793__auto____1 = function(state_436343) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_436343);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_436343) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_436343)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_436347 = f__4865__auto__.call(null);
      statearr_436347[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_436347
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
goog.provide("orchard.kv_store");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("orchard.model");
goog.require("orchard.model");
goog.require("orchard.util.log");
orchard.kv_store.app_id = function app_id(id) {
  var id__$1 = cljs.core.truth_(cljs.core.keyword.call(null, id)) ? cljs.core.name.call(null, id) : [cljs.core.str(id)].join("");
  return[cljs.core.str("orchard/"), cljs.core.str(id__$1)].join("")
};
orchard.kv_store.local_set = function local_set(k, v) {
  var k_433670__$1 = cljs.core.keyword_QMARK_.call(null, k) ? cljs.core.name.call(null, k) : [cljs.core.str(k)].join("");
  localStorage[k_433670__$1] = JSON.stringify(cljs.core.clj__GT_js.call(null, v));
  return v
};
orchard.kv_store.local_get = function local_get(k) {
  try {
    var k__$1 = cljs.core.keyword_QMARK_.call(null, k) ? cljs.core.name.call(null, k) : [cljs.core.str(k)].join("");
    var obj_str = localStorage[k__$1];
    var obj = cljs.core.truth_(obj_str) ? cljs.core.js__GT_clj.call(null, JSON.parse(obj_str), "\ufdd0:keywordize-keys", true) : null;
    return obj
  }catch(e433672) {
    if(e433672 instanceof Error) {
      var e = e433672;
      orchard.util.log.log.call(null, "Exception in local-get: ", e);
      return orchard.util.log.log.call(null, "couldn't parse object - key = ", k)
    }else {
      if("\ufdd0:else") {
        throw e433672;
      }else {
        return null
      }
    }
  }
};
orchard.kv_store.local_remove = function local_remove(k) {
  var k__$1 = cljs.core.keyword_QMARK_.call(null, k) ? cljs.core.name.call(null, k) : [cljs.core.str(k)].join("");
  return localStorage.removeItem(k__$1)
};
orchard.kv_store.local_clear = function local_clear() {
  return localStorage.clear()
};
orchard.kv_store.local_count = function local_count() {
  return localStorage.length
};
orchard.kv_store.local_key_seq = function local_key_seq() {
  return cljs.core.map.call(null, function(p1__433673_SHARP_) {
    return localStorage.key(p1__433673_SHARP_)
  }, cljs.core.range.call(null, orchard.kv_store.local_count.call(null)))
};
orchard.kv_store.local_item_seq = function local_item_seq() {
  return cljs.core.map.call(null, function(k) {
    return cljs.core.PersistentVector.fromArray([k, orchard.kv_store.local_get.call(null, k)], true)
  }, orchard.kv_store.local_key_seq.call(null))
};
goog.provide("orchard.kv_store.LocalStore");
orchard.kv_store.LocalStore = function() {
};
orchard.kv_store.LocalStore.cljs$lang$type = true;
orchard.kv_store.LocalStore.cljs$lang$ctorStr = "orchard.kv-store/LocalStore";
orchard.kv_store.LocalStore.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "orchard.kv-store/LocalStore")
};
orchard.kv_store.LocalStore.prototype.orchard$model$ObjectIndex$ = true;
orchard.kv_store.LocalStore.prototype.orchard$model$ObjectIndex$objects_of_type$arity$2 = function(this$, obj_type) {
  var self__ = this;
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_433680) {
        var state_val_433681 = state_433680[1];
        if(state_val_433681 === 1) {
          var inst_433675 = function() {
            return function(state_val_433681) {
              return function(p__433674) {
                var vec__433682 = p__433674;
                var k = cljs.core.nth.call(null, vec__433682, 0, null);
                var v = cljs.core.nth.call(null, vec__433682, 1, null);
                return cljs.core._EQ_.call(null, cljs.core.name.call(null, obj_type), (new cljs.core.Keyword("\ufdd0:type")).call(null, v))
              }
            }(state_val_433681)
          }();
          var inst_433676 = orchard.kv_store.local_item_seq.call(null);
          var inst_433677 = cljs.core.filter.call(null, inst_433675, inst_433676);
          var inst_433678 = cljs.core.map.call(null, cljs.core.second, inst_433677);
          var state_433680__$1 = state_433680;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_433680__$1, inst_433678)
        }else {
          return null
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_433684 = new Array(5);
            statearr_433684[0] = state_machine__4793__auto__;
            statearr_433684[1] = 1;
            return statearr_433684
          };
          var state_machine__4793__auto____1 = function(state_433680) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_433680);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_433680) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_433680)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_433685 = f__4865__auto__.call(null);
      statearr_433685[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_433685
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.kv_store.LocalStore.prototype.orchard$model$ObjectStore$ = true;
orchard.kv_store.LocalStore.prototype.orchard$model$ObjectStore$save_object_BANG_$arity$3 = function(this$, id, value) {
  var self__ = this;
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_433689) {
        var state_val_433690 = state_433689[1];
        if(state_val_433690 === 1) {
          var inst_433686 = orchard.kv_store.app_id.call(null, id);
          var inst_433687 = orchard.kv_store.local_set.call(null, inst_433686, value);
          var state_433689__$1 = state_433689;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_433689__$1, inst_433687)
        }else {
          return null
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_433692 = new Array(5);
            statearr_433692[0] = state_machine__4793__auto__;
            statearr_433692[1] = 1;
            return statearr_433692
          };
          var state_machine__4793__auto____1 = function(state_433689) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_433689);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_433689) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_433689)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_433693 = f__4865__auto__.call(null);
      statearr_433693[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_433693
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.kv_store.LocalStore.prototype.orchard$model$ObjectStore$get_object$arity$2 = function(this$, id) {
  var self__ = this;
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_433697) {
        var state_val_433698 = state_433697[1];
        if(state_val_433698 === 1) {
          var inst_433694 = orchard.kv_store.app_id.call(null, id);
          var inst_433695 = orchard.kv_store.local_get.call(null, inst_433694);
          var state_433697__$1 = state_433697;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_433697__$1, inst_433695)
        }else {
          return null
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_433700 = new Array(5);
            statearr_433700[0] = state_machine__4793__auto__;
            statearr_433700[1] = 1;
            return statearr_433700
          };
          var state_machine__4793__auto____1 = function(state_433697) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_433697);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_433697) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_433697)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_433701 = f__4865__auto__.call(null);
      statearr_433701[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_433701
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.kv_store.LocalStore.prototype.orchard$model$ObjectStore$all_objects$arity$1 = function(this$) {
  var self__ = this;
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_433705) {
        var state_val_433706 = state_433705[1];
        if(state_val_433706 === 1) {
          var inst_433702 = orchard.kv_store.local_item_seq.call(null);
          var inst_433703 = cljs.core.map.call(null, cljs.core.second, inst_433702);
          var state_433705__$1 = state_433705;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_433705__$1, inst_433703)
        }else {
          return null
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_433708 = new Array(5);
            statearr_433708[0] = state_machine__4793__auto__;
            statearr_433708[1] = 1;
            return statearr_433708
          };
          var state_machine__4793__auto____1 = function(state_433705) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_433705);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_433705) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_433705)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_433709 = f__4865__auto__.call(null);
      statearr_433709[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_433709
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.kv_store.__GT_LocalStore = function __GT_LocalStore() {
  return new orchard.kv_store.LocalStore
};
orchard.kv_store.local_store = function local_store() {
  return new orchard.kv_store.LocalStore
};
goog.provide("orchard.objects.modules.visualizer");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.module");
goog.require("orchard.module");
goog.require("orchard.util.core");
goog.require("orchard.object");
goog.provide("orchard.util.events");
goog.require("cljs.core");
orchard.util.events.capture = function() {
  var capture = null;
  var capture__2 = function(ev, handler) {
    return capture.call(null, document, ev, handler)
  };
  var capture__3 = function(elem, ev, handler) {
    return elem.addEventListener(cljs.core.name.call(null, ev), handler, true)
  };
  capture = function(elem, ev, handler) {
    switch(arguments.length) {
      case 2:
        return capture__2.call(this, elem, ev);
      case 3:
        return capture__3.call(this, elem, ev, handler)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture.cljs$core$IFn$_invoke$arity$2 = capture__2;
  capture.cljs$core$IFn$_invoke$arity$3 = capture__3;
  return capture
}();
goog.provide("orchard.objects.sidebar.projects_selector");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("crate.binding");
goog.require("orchard.util.log");
goog.require("orchard.object");
orchard.objects.sidebar.projects_selector.project_item = function project_item(this$, item) {
  var e__431428__auto__ = crate.core.html.call(null, function() {
    var map__437431 = cljs.core.deref.call(null, item);
    var map__437431__$1 = cljs.core.seq_QMARK_.call(null, map__437431) ? cljs.core.apply.call(null, cljs.core.hash_map, map__437431) : map__437431;
    var label = cljs.core.get.call(null, map__437431__$1, "\ufdd0:label");
    return cljs.core.PersistentVector.fromArray(["\ufdd0:li", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", crate.binding.bound.call(null, this$, function(map__437431, map__437431__$1, label) {
      return function(p1__437423_SHARP_) {
        if(cljs.core._EQ_.call(null, item, (new cljs.core.Keyword("\ufdd0:active")).call(null, p1__437423_SHARP_))) {
          return"current"
        }else {
          return null
        }
      }
    }(map__437431, map__437431__$1, label))], true), label], true)
  }());
  var seq__437432_437438 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    return orchard.util.log.log.call(null, "click project ", (new cljs.core.Keyword("\ufdd0:label")).call(null, cljs.core.deref.call(null, item)))
  }], true)));
  var chunk__437433_437439 = null;
  var count__437434_437440 = 0;
  var i__437435_437441 = 0;
  while(true) {
    if(i__437435_437441 < count__437434_437440) {
      var vec__437436_437442 = cljs.core._nth.call(null, chunk__437433_437439, i__437435_437441);
      var ev__431429__auto___437443 = cljs.core.nth.call(null, vec__437436_437442, 0, null);
      var func__431430__auto___437444 = cljs.core.nth.call(null, vec__437436_437442, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437443, func__431430__auto___437444);
      var G__437445 = seq__437432_437438;
      var G__437446 = chunk__437433_437439;
      var G__437447 = count__437434_437440;
      var G__437448 = i__437435_437441 + 1;
      seq__437432_437438 = G__437445;
      chunk__437433_437439 = G__437446;
      count__437434_437440 = G__437447;
      i__437435_437441 = G__437448;
      continue
    }else {
      var temp__4092__auto___437449 = cljs.core.seq.call(null, seq__437432_437438);
      if(temp__4092__auto___437449) {
        var seq__437432_437450__$1 = temp__4092__auto___437449;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437432_437450__$1)) {
          var c__3259__auto___437451 = cljs.core.chunk_first.call(null, seq__437432_437450__$1);
          var G__437452 = cljs.core.chunk_rest.call(null, seq__437432_437450__$1);
          var G__437453 = c__3259__auto___437451;
          var G__437454 = cljs.core.count.call(null, c__3259__auto___437451);
          var G__437455 = 0;
          seq__437432_437438 = G__437452;
          chunk__437433_437439 = G__437453;
          count__437434_437440 = G__437454;
          i__437435_437441 = G__437455;
          continue
        }else {
          var vec__437437_437456 = cljs.core.first.call(null, seq__437432_437450__$1);
          var ev__431429__auto___437457 = cljs.core.nth.call(null, vec__437437_437456, 0, null);
          var func__431430__auto___437458 = cljs.core.nth.call(null, vec__437437_437456, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437457, func__431430__auto___437458);
          var G__437459 = cljs.core.next.call(null, seq__437432_437450__$1);
          var G__437460 = null;
          var G__437461 = 0;
          var G__437462 = 0;
          seq__437432_437438 = G__437459;
          chunk__437433_437439 = G__437460;
          count__437434_437440 = G__437461;
          i__437435_437441 = G__437462;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.sidebar.projects_selector.projects = function projects(this$, mods) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:ul#projects-sidebar", function() {
    var iter__3228__auto__ = function iter__437477(s__437478) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__437478__$1 = s__437478;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__437478__$1);
          if(temp__4092__auto__) {
            var s__437478__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__437478__$2)) {
              var c__3226__auto__ = cljs.core.chunk_first.call(null, s__437478__$2);
              var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
              var b__437480 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
              if(function() {
                var i__437479 = 0;
                while(true) {
                  if(i__437479 < size__3227__auto__) {
                    var vec__437483 = cljs.core._nth.call(null, c__3226__auto__, i__437479);
                    var _ = cljs.core.nth.call(null, vec__437483, 0, null);
                    var t = cljs.core.nth.call(null, vec__437483, 1, null);
                    cljs.core.chunk_append.call(null, b__437480, orchard.objects.sidebar.projects_selector.project_item.call(null, this$, t));
                    var G__437491 = i__437479 + 1;
                    i__437479 = G__437491;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__437480), iter__437477.call(null, cljs.core.chunk_rest.call(null, s__437478__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__437480), null)
              }
            }else {
              var vec__437484 = cljs.core.first.call(null, s__437478__$2);
              var _ = cljs.core.nth.call(null, vec__437484, 0, null);
              var t = cljs.core.nth.call(null, vec__437484, 1, null);
              return cljs.core.cons.call(null, orchard.objects.sidebar.projects_selector.project_item.call(null, this$, t), iter__437477.call(null, cljs.core.rest.call(null, s__437478__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3228__auto__.call(null, mods)
  }()], true));
  var seq__437485_437492 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__437486_437493 = null;
  var count__437487_437494 = 0;
  var i__437488_437495 = 0;
  while(true) {
    if(i__437488_437495 < count__437487_437494) {
      var vec__437489_437496 = cljs.core._nth.call(null, chunk__437486_437493, i__437488_437495);
      var ev__431429__auto___437497 = cljs.core.nth.call(null, vec__437489_437496, 0, null);
      var func__431430__auto___437498 = cljs.core.nth.call(null, vec__437489_437496, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437497, func__431430__auto___437498);
      var G__437499 = seq__437485_437492;
      var G__437500 = chunk__437486_437493;
      var G__437501 = count__437487_437494;
      var G__437502 = i__437488_437495 + 1;
      seq__437485_437492 = G__437499;
      chunk__437486_437493 = G__437500;
      count__437487_437494 = G__437501;
      i__437488_437495 = G__437502;
      continue
    }else {
      var temp__4092__auto___437503 = cljs.core.seq.call(null, seq__437485_437492);
      if(temp__4092__auto___437503) {
        var seq__437485_437504__$1 = temp__4092__auto___437503;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437485_437504__$1)) {
          var c__3259__auto___437505 = cljs.core.chunk_first.call(null, seq__437485_437504__$1);
          var G__437506 = cljs.core.chunk_rest.call(null, seq__437485_437504__$1);
          var G__437507 = c__3259__auto___437505;
          var G__437508 = cljs.core.count.call(null, c__3259__auto___437505);
          var G__437509 = 0;
          seq__437485_437492 = G__437506;
          chunk__437486_437493 = G__437507;
          count__437487_437494 = G__437508;
          i__437488_437495 = G__437509;
          continue
        }else {
          var vec__437490_437510 = cljs.core.first.call(null, seq__437485_437504__$1);
          var ev__431429__auto___437511 = cljs.core.nth.call(null, vec__437490_437510, 0, null);
          var func__431430__auto___437512 = cljs.core.nth.call(null, vec__437490_437510, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437511, func__431430__auto___437512);
          var G__437513 = cljs.core.next.call(null, seq__437485_437504__$1);
          var G__437514 = null;
          var G__437515 = 0;
          var G__437516 = 0;
          seq__437485_437492 = G__437513;
          chunk__437486_437493 = G__437514;
          count__437487_437494 = G__437515;
          i__437488_437495 = G__437516;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.sidebar.projects_selector.projects_icon = function projects_icon() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:i.icon-folder-open"], true));
  var seq__437523_437529 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__437524_437530 = null;
  var count__437525_437531 = 0;
  var i__437526_437532 = 0;
  while(true) {
    if(i__437526_437532 < count__437525_437531) {
      var vec__437527_437533 = cljs.core._nth.call(null, chunk__437524_437530, i__437526_437532);
      var ev__431429__auto___437534 = cljs.core.nth.call(null, vec__437527_437533, 0, null);
      var func__431430__auto___437535 = cljs.core.nth.call(null, vec__437527_437533, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437534, func__431430__auto___437535);
      var G__437536 = seq__437523_437529;
      var G__437537 = chunk__437524_437530;
      var G__437538 = count__437525_437531;
      var G__437539 = i__437526_437532 + 1;
      seq__437523_437529 = G__437536;
      chunk__437524_437530 = G__437537;
      count__437525_437531 = G__437538;
      i__437526_437532 = G__437539;
      continue
    }else {
      var temp__4092__auto___437540 = cljs.core.seq.call(null, seq__437523_437529);
      if(temp__4092__auto___437540) {
        var seq__437523_437541__$1 = temp__4092__auto___437540;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437523_437541__$1)) {
          var c__3259__auto___437542 = cljs.core.chunk_first.call(null, seq__437523_437541__$1);
          var G__437543 = cljs.core.chunk_rest.call(null, seq__437523_437541__$1);
          var G__437544 = c__3259__auto___437542;
          var G__437545 = cljs.core.count.call(null, c__3259__auto___437542);
          var G__437546 = 0;
          seq__437523_437529 = G__437543;
          chunk__437524_437530 = G__437544;
          count__437525_437531 = G__437545;
          i__437526_437532 = G__437546;
          continue
        }else {
          var vec__437528_437547 = cljs.core.first.call(null, seq__437523_437541__$1);
          var ev__431429__auto___437548 = cljs.core.nth.call(null, vec__437528_437547, 0, null);
          var func__431430__auto___437549 = cljs.core.nth.call(null, vec__437528_437547, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437548, func__431430__auto___437549);
          var G__437550 = cljs.core.next.call(null, seq__437523_437541__$1);
          var G__437551 = null;
          var G__437552 = 0;
          var G__437553 = 0;
          seq__437523_437529 = G__437550;
          chunk__437524_437530 = G__437551;
          count__437525_437531 = G__437552;
          i__437526_437532 = G__437553;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.object.object_STAR_.call(null, "\ufdd0:orchard.objects.sidebar.projects-selector/sidebar.projects-selector", "\ufdd0:triggers", cljs.core.PersistentHashSet.EMPTY, "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.sidebar.projects-selector/toggle"], true), "\ufdd0:label", "projects", "\ufdd0:icon", orchard.objects.sidebar.projects_selector.projects_icon.call(null), "\ufdd0:order", 1, "\ufdd0:init", function(this$) {
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div.projects-content", cljs.core.PersistentVector.fromArray(["\ufdd0:div.row-fluid.item", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:draggable", "true"], true), cljs.core.PersistentVector.fromArray(["\ufdd0:h4", "Working"], true)], true)], true)
});
orchard.objects.sidebar.projects_selector.sidebar_projects = orchard.object.create.call(null, "\ufdd0:orchard.objects.sidebar.projects-selector/sidebar.projects-selector");
orchard.objects.sidebar.projects_selector.add_item = function add_item(item) {
  return orchard.object.update_BANG_.call(null, orchard.objects.sidebar.projects_selector.sidebar_projects, cljs.core.PersistentVector.fromArray(["\ufdd0:items"], true), cljs.core.assoc, (new cljs.core.Keyword("\ufdd0:order")).call(null, cljs.core.deref.call(null, item)), item)
};
goog.provide("orchard.objects.modules.html");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("orchard.module");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("crate.core");
goog.require("orchard.model");
goog.require("orchard.util.core");
goog.require("orchard.util.dom");
goog.require("crate.binding");
goog.require("orchard.object");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("orchard.module");
orchard.objects.modules.html.render_present = function render_present(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-content.html-module-content", crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:text"), function(p1__435831_SHARP_) {
    return crate.core.raw.call(null, p1__435831_SHARP_)
  })], true));
  var seq__435838_435844 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__435839_435845 = null;
  var count__435840_435846 = 0;
  var i__435841_435847 = 0;
  while(true) {
    if(i__435841_435847 < count__435840_435846) {
      var vec__435842_435848 = cljs.core._nth.call(null, chunk__435839_435845, i__435841_435847);
      var ev__431429__auto___435849 = cljs.core.nth.call(null, vec__435842_435848, 0, null);
      var func__431430__auto___435850 = cljs.core.nth.call(null, vec__435842_435848, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___435849, func__431430__auto___435850);
      var G__435851 = seq__435838_435844;
      var G__435852 = chunk__435839_435845;
      var G__435853 = count__435840_435846;
      var G__435854 = i__435841_435847 + 1;
      seq__435838_435844 = G__435851;
      chunk__435839_435845 = G__435852;
      count__435840_435846 = G__435853;
      i__435841_435847 = G__435854;
      continue
    }else {
      var temp__4092__auto___435855 = cljs.core.seq.call(null, seq__435838_435844);
      if(temp__4092__auto___435855) {
        var seq__435838_435856__$1 = temp__4092__auto___435855;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__435838_435856__$1)) {
          var c__3259__auto___435857 = cljs.core.chunk_first.call(null, seq__435838_435856__$1);
          var G__435858 = cljs.core.chunk_rest.call(null, seq__435838_435856__$1);
          var G__435859 = c__3259__auto___435857;
          var G__435860 = cljs.core.count.call(null, c__3259__auto___435857);
          var G__435861 = 0;
          seq__435838_435844 = G__435858;
          chunk__435839_435845 = G__435859;
          count__435840_435846 = G__435860;
          i__435841_435847 = G__435861;
          continue
        }else {
          var vec__435843_435862 = cljs.core.first.call(null, seq__435838_435856__$1);
          var ev__431429__auto___435863 = cljs.core.nth.call(null, vec__435843_435862, 0, null);
          var func__431430__auto___435864 = cljs.core.nth.call(null, vec__435843_435862, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___435863, func__431430__auto___435864);
          var G__435865 = cljs.core.next.call(null, seq__435838_435856__$1);
          var G__435866 = null;
          var G__435867 = 0;
          var G__435868 = 0;
          seq__435838_435844 = G__435865;
          chunk__435839_435845 = G__435866;
          count__435840_435846 = G__435867;
          i__435841_435847 = G__435868;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.modules.html.render_edit = function render_edit() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-content.html-module-editor"], true));
  var seq__435875_435881 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__435876_435882 = null;
  var count__435877_435883 = 0;
  var i__435878_435884 = 0;
  while(true) {
    if(i__435878_435884 < count__435877_435883) {
      var vec__435879_435885 = cljs.core._nth.call(null, chunk__435876_435882, i__435878_435884);
      var ev__431429__auto___435886 = cljs.core.nth.call(null, vec__435879_435885, 0, null);
      var func__431430__auto___435887 = cljs.core.nth.call(null, vec__435879_435885, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___435886, func__431430__auto___435887);
      var G__435888 = seq__435875_435881;
      var G__435889 = chunk__435876_435882;
      var G__435890 = count__435877_435883;
      var G__435891 = i__435878_435884 + 1;
      seq__435875_435881 = G__435888;
      chunk__435876_435882 = G__435889;
      count__435877_435883 = G__435890;
      i__435878_435884 = G__435891;
      continue
    }else {
      var temp__4092__auto___435892 = cljs.core.seq.call(null, seq__435875_435881);
      if(temp__4092__auto___435892) {
        var seq__435875_435893__$1 = temp__4092__auto___435892;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__435875_435893__$1)) {
          var c__3259__auto___435894 = cljs.core.chunk_first.call(null, seq__435875_435893__$1);
          var G__435895 = cljs.core.chunk_rest.call(null, seq__435875_435893__$1);
          var G__435896 = c__3259__auto___435894;
          var G__435897 = cljs.core.count.call(null, c__3259__auto___435894);
          var G__435898 = 0;
          seq__435875_435881 = G__435895;
          chunk__435876_435882 = G__435896;
          count__435877_435883 = G__435897;
          i__435878_435884 = G__435898;
          continue
        }else {
          var vec__435880_435899 = cljs.core.first.call(null, seq__435875_435893__$1);
          var ev__431429__auto___435900 = cljs.core.nth.call(null, vec__435880_435899, 0, null);
          var func__431430__auto___435901 = cljs.core.nth.call(null, vec__435880_435899, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___435900, func__431430__auto___435901);
          var G__435902 = cljs.core.next.call(null, seq__435875_435893__$1);
          var G__435903 = null;
          var G__435904 = 0;
          var G__435905 = 0;
          seq__435875_435881 = G__435902;
          chunk__435876_435882 = G__435903;
          count__435877_435883 = G__435904;
          i__435878_435884 = G__435905;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.modules.html.icon = cljs.core.PersistentVector.fromArray(["\ufdd0:span.btn.btn-primary.html-icon", "<html>"], true);
orchard.objects.modules.html.render_module = function render_module(this$, mode) {
  orchard.util.dom.replace_with.call(null, orchard.util.dom.$.call(null, [cljs.core.str("#module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$))), cljs.core.str(" .module-content")].join("")), function() {
    var G__435907 = mode;
    if(cljs.core._EQ_.call(null, "\ufdd0:edit", G__435907)) {
      return orchard.objects.modules.html.render_edit.call(null)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0:present", G__435907)) {
        return orchard.objects.modules.html.render_present.call(null, this$)
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(mode)].join(""));
        }else {
          return null
        }
      }
    }
  }());
  if(cljs.core._EQ_.call(null, mode, "\ufdd0:edit")) {
    var cm = CodeMirror(function(elem) {
      return orchard.util.dom.append.call(null, orchard.util.dom.$.call(null, [cljs.core.str("#module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$))), cljs.core.str(" .module-content")].join("")), elem)
    }, orchard.module.default_opts);
    orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:editor", cm);
    return cm.setValue((new cljs.core.Keyword("\ufdd0:text")).call(null, cljs.core.deref.call(null, this$)))
  }else {
    return orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:text", (new cljs.core.Keyword("\ufdd0:editor")).call(null, cljs.core.deref.call(null, this$)).getValue())
  }
};
orchard.object.object_STAR_.call(null, "\ufdd0:html-module", "\ufdd0:tags", cljs.core.PersistentHashSet.fromArray(["\ufdd0:module", null], true), "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:delete", null, "\ufdd0:save", null], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.module/save-module", "\ufdd0:orchard.module/delete-module"], true), "\ufdd0:mode", "\ufdd0:present", "\ufdd0:editor", null, "\ufdd0:icon", orchard.objects.modules.html.icon, 
"\ufdd0:label", "HTML", "\ufdd0:init", function(this$, record) {
  orchard.object.merge_BANG_.call(null, this$, record);
  orchard.util.core.bound_do.call(null, crate.binding.subatom.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:mode"], true)), cljs.core.partial.call(null, orchard.objects.modules.html.render_module, this$));
  orchard.util.core.bound_do.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:text"), function(_) {
    return orchard.object.raise.call(null, this$, "\ufdd0:save")
  });
  return orchard.module.module_view.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-element", orchard.objects.modules.html.render_present.call(null, this$)], true))
});
orchard.objects.modules.html.html_doc = function html_doc(db) {
  var oid = orchard.util.core.uuid.call(null);
  return orchard.model.save_object_BANG_.call(null, db, oid, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "\ufdd0:html-module", "\ufdd0:text", "<h3>HTML here... </h3>", "\ufdd0:id", oid], true))
};
orchard.objects.modules.html.create_module = function create_module(app) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_435925) {
        var state_val_435926 = state_435925[1];
        if(state_val_435926 === 2) {
          var inst_435922 = state_435925[2];
          var inst_435923 = orchard.object.create.call(null, "\ufdd0:html-module", inst_435922);
          var state_435925__$1 = state_435925;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_435925__$1, inst_435923)
        }else {
          if(state_val_435926 === 1) {
            var inst_435919 = (new cljs.core.Keyword("\ufdd0:db")).call(null, app);
            var inst_435920 = orchard.objects.modules.html.html_doc.call(null, inst_435919);
            var state_435925__$1 = state_435925;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_435925__$1, 2, inst_435920)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_435928 = new Array(5);
            statearr_435928[0] = state_machine__4793__auto__;
            statearr_435928[1] = 1;
            return statearr_435928
          };
          var state_machine__4793__auto____1 = function(state_435925) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_435925);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_435925) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_435925)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_435929 = f__4865__auto__.call(null);
      statearr_435929[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_435929
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
dommy.core.listen_BANG_.call(null, cljs.core.PersistentVector.fromArray([orchard.util.dom.$.call(null, "\ufdd0:body"), "\ufdd0:.html-module-content", "\ufdd0:a"], true), "\ufdd0:click", function(e) {
  var href = e.target.href;
  var tags = clojure.string.split.call(null, href, /\//);
  var proj = cljs.core.get.call(null, tags, cljs.core.count.call(null, tags) - 2);
  var title = cljs.core.last.call(null, tags);
  var href__$1 = [cljs.core.str(proj), cljs.core.str("/"), cljs.core.str(title)].join("");
  orchard.util.log.log.call(null, "open document from href ", href__$1);
  orchard.objects.app.open_from_link.call(null, href__$1);
  return e.preventDefault()
});
goog.provide("orchard.objects.modules.markdown");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("orchard.module");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("crate.core");
goog.require("orchard.model");
goog.require("orchard.util.core");
goog.require("orchard.util.dom");
goog.require("crate.binding");
goog.require("orchard.object");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("orchard.module");
orchard.objects.modules.markdown.markdown_doc = function markdown_doc(db) {
  var id = orchard.util.core.uuid.call(null);
  return orchard.model.save_object_BANG_.call(null, db, id, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "\ufdd0:markdown-module", "\ufdd0:text", "## Markdown module...", "\ufdd0:id", id], true))
};
orchard.objects.modules.markdown.render_present = function render_present(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-content.markdown-module-content", crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:text"), function(p1__436080_SHARP_) {
    return crate.core.raw.call(null, markdown.toHTML(p1__436080_SHARP_))
  })], true));
  var seq__436087_436093 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__436088_436094 = null;
  var count__436089_436095 = 0;
  var i__436090_436096 = 0;
  while(true) {
    if(i__436090_436096 < count__436089_436095) {
      var vec__436091_436097 = cljs.core._nth.call(null, chunk__436088_436094, i__436090_436096);
      var ev__431429__auto___436098 = cljs.core.nth.call(null, vec__436091_436097, 0, null);
      var func__431430__auto___436099 = cljs.core.nth.call(null, vec__436091_436097, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436098, func__431430__auto___436099);
      var G__436100 = seq__436087_436093;
      var G__436101 = chunk__436088_436094;
      var G__436102 = count__436089_436095;
      var G__436103 = i__436090_436096 + 1;
      seq__436087_436093 = G__436100;
      chunk__436088_436094 = G__436101;
      count__436089_436095 = G__436102;
      i__436090_436096 = G__436103;
      continue
    }else {
      var temp__4092__auto___436104 = cljs.core.seq.call(null, seq__436087_436093);
      if(temp__4092__auto___436104) {
        var seq__436087_436105__$1 = temp__4092__auto___436104;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436087_436105__$1)) {
          var c__3259__auto___436106 = cljs.core.chunk_first.call(null, seq__436087_436105__$1);
          var G__436107 = cljs.core.chunk_rest.call(null, seq__436087_436105__$1);
          var G__436108 = c__3259__auto___436106;
          var G__436109 = cljs.core.count.call(null, c__3259__auto___436106);
          var G__436110 = 0;
          seq__436087_436093 = G__436107;
          chunk__436088_436094 = G__436108;
          count__436089_436095 = G__436109;
          i__436090_436096 = G__436110;
          continue
        }else {
          var vec__436092_436111 = cljs.core.first.call(null, seq__436087_436105__$1);
          var ev__431429__auto___436112 = cljs.core.nth.call(null, vec__436092_436111, 0, null);
          var func__431430__auto___436113 = cljs.core.nth.call(null, vec__436092_436111, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436112, func__431430__auto___436113);
          var G__436114 = cljs.core.next.call(null, seq__436087_436105__$1);
          var G__436115 = null;
          var G__436116 = 0;
          var G__436117 = 0;
          seq__436087_436093 = G__436114;
          chunk__436088_436094 = G__436115;
          count__436089_436095 = G__436116;
          i__436090_436096 = G__436117;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.modules.markdown.render_edit = function render_edit(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-content.markdown-module-editor"], true));
  var seq__436124_436130 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__436125_436131 = null;
  var count__436126_436132 = 0;
  var i__436127_436133 = 0;
  while(true) {
    if(i__436127_436133 < count__436126_436132) {
      var vec__436128_436134 = cljs.core._nth.call(null, chunk__436125_436131, i__436127_436133);
      var ev__431429__auto___436135 = cljs.core.nth.call(null, vec__436128_436134, 0, null);
      var func__431430__auto___436136 = cljs.core.nth.call(null, vec__436128_436134, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436135, func__431430__auto___436136);
      var G__436137 = seq__436124_436130;
      var G__436138 = chunk__436125_436131;
      var G__436139 = count__436126_436132;
      var G__436140 = i__436127_436133 + 1;
      seq__436124_436130 = G__436137;
      chunk__436125_436131 = G__436138;
      count__436126_436132 = G__436139;
      i__436127_436133 = G__436140;
      continue
    }else {
      var temp__4092__auto___436141 = cljs.core.seq.call(null, seq__436124_436130);
      if(temp__4092__auto___436141) {
        var seq__436124_436142__$1 = temp__4092__auto___436141;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436124_436142__$1)) {
          var c__3259__auto___436143 = cljs.core.chunk_first.call(null, seq__436124_436142__$1);
          var G__436144 = cljs.core.chunk_rest.call(null, seq__436124_436142__$1);
          var G__436145 = c__3259__auto___436143;
          var G__436146 = cljs.core.count.call(null, c__3259__auto___436143);
          var G__436147 = 0;
          seq__436124_436130 = G__436144;
          chunk__436125_436131 = G__436145;
          count__436126_436132 = G__436146;
          i__436127_436133 = G__436147;
          continue
        }else {
          var vec__436129_436148 = cljs.core.first.call(null, seq__436124_436142__$1);
          var ev__431429__auto___436149 = cljs.core.nth.call(null, vec__436129_436148, 0, null);
          var func__431430__auto___436150 = cljs.core.nth.call(null, vec__436129_436148, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436149, func__431430__auto___436150);
          var G__436151 = cljs.core.next.call(null, seq__436124_436142__$1);
          var G__436152 = null;
          var G__436153 = 0;
          var G__436154 = 0;
          seq__436124_436130 = G__436151;
          chunk__436125_436131 = G__436152;
          count__436126_436132 = G__436153;
          i__436127_436133 = G__436154;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.modules.markdown.icon = cljs.core.PersistentVector.fromArray(["\ufdd0:span.btn.btn-primary.markdown-icon", ".md"], true);
orchard.objects.modules.markdown.render_module = function render_module(this$, mode) {
  orchard.util.dom.replace_with.call(null, orchard.util.dom.$.call(null, [cljs.core.str("#module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$))), cljs.core.str(" .module-content")].join("")), function() {
    var G__436156 = mode;
    if(cljs.core._EQ_.call(null, "\ufdd0:edit", G__436156)) {
      return orchard.objects.modules.markdown.render_edit.call(null, this$)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0:present", G__436156)) {
        return orchard.objects.modules.markdown.render_present.call(null, this$)
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(mode)].join(""));
        }else {
          return null
        }
      }
    }
  }());
  if(cljs.core._EQ_.call(null, mode, "\ufdd0:edit")) {
    var cm = CodeMirror(function(elem) {
      return orchard.util.dom.append.call(null, orchard.util.dom.$.call(null, [cljs.core.str("#module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$))), cljs.core.str(" .module-content")].join("")), elem)
    }, orchard.module.default_opts);
    orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:editor", cm);
    return cm.setValue((new cljs.core.Keyword("\ufdd0:text")).call(null, cljs.core.deref.call(null, this$)))
  }else {
    orchard.util.log.log.call(null, "saving new markdown text...");
    return orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:text", (new cljs.core.Keyword("\ufdd0:editor")).call(null, cljs.core.deref.call(null, this$)).getValue())
  }
};
orchard.object.object_STAR_.call(null, "\ufdd0:markdown-module", "\ufdd0:tags", cljs.core.PersistentHashSet.fromArray(["\ufdd0:modules", null], true), "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:delete-module", null, "\ufdd0:save", null], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.module/delete-module", "\ufdd0:orchard.module/save-module"], true), "\ufdd0:mode", "\ufdd0:present", "\ufdd0:label", "Markdown", "\ufdd0:icon", orchard.objects.modules.markdown.icon, 
"\ufdd0:editor", null, "\ufdd0:init", function(this$, record) {
  orchard.object.merge_BANG_.call(null, this$, record);
  orchard.util.core.bound_do.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:mode"), cljs.core.partial.call(null, orchard.objects.modules.markdown.render_module, this$));
  orchard.util.core.bound_do.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:text"), function() {
    var G__436157__delegate = function(args) {
      orchard.util.log.log.call(null, "inside :text handler...");
      return orchard.object.raise.call(null, this$, "\ufdd0:save")
    };
    var G__436157 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__436157__delegate.call(this, args)
    };
    G__436157.cljs$lang$maxFixedArity = 0;
    G__436157.cljs$lang$applyTo = function(arglist__436158) {
      var args = cljs.core.seq(arglist__436158);
      return G__436157__delegate(args)
    };
    G__436157.cljs$core$IFn$_invoke$arity$variadic = G__436157__delegate;
    return G__436157
  }());
  return orchard.module.module_view.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-element", orchard.objects.modules.markdown.render_present.call(null, this$)], true))
});
orchard.objects.modules.markdown.create_module = function create_module(app) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_436179) {
        var state_val_436180 = state_436179[1];
        if(state_val_436180 === 2) {
          var inst_436175 = state_436179[2];
          var inst_436176 = orchard.util.log.log.call(null, "markdown-doc: ", inst_436175);
          var inst_436177 = orchard.object.create.call(null, "\ufdd0:markdown-module", inst_436175);
          var state_436179__$1 = function() {
            var statearr_436181 = state_436179;
            statearr_436181[5] = inst_436176;
            return statearr_436181
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_436179__$1, inst_436177)
        }else {
          if(state_val_436180 === 1) {
            var inst_436172 = (new cljs.core.Keyword("\ufdd0:db")).call(null, app);
            var inst_436173 = orchard.objects.modules.markdown.markdown_doc.call(null, inst_436172);
            var state_436179__$1 = state_436179;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_436179__$1, 2, inst_436173)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_436183 = new Array(6);
            statearr_436183[0] = state_machine__4793__auto__;
            statearr_436183[1] = 1;
            return statearr_436183
          };
          var state_machine__4793__auto____1 = function(state_436179) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_436179);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_436179) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_436179)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_436184 = f__4865__auto__.call(null);
      statearr_436184[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_436184
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
dommy.core.listen_BANG_.call(null, cljs.core.PersistentVector.fromArray([orchard.util.dom.$.call(null, "\ufdd0:body"), "\ufdd0:.markdown-module-content", "\ufdd0:a"], true), "\ufdd0:click", function(e) {
  var href = e.target.href;
  var tags = clojure.string.split.call(null, href, /\//);
  var proj = cljs.core.get.call(null, tags, cljs.core.count.call(null, tags) - 2);
  var title = cljs.core.last.call(null, tags);
  var href__$1 = [cljs.core.str(proj), cljs.core.str("/"), cljs.core.str(title)].join("");
  orchard.util.log.log.call(null, "open document from href ", href__$1);
  orchard.objects.app.open_from_link.call(null, href__$1);
  return e.preventDefault()
});
goog.provide("orchard.objects.modules.module_selector");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.util.log");
goog.require("orchard.module");
goog.require("crate.binding");
goog.require("orchard.util.log");
goog.require("orchard.objects.modules.visualizer");
goog.require("orchard.objects.modules.html");
goog.require("orchard.objects.modules.markdown");
goog.require("crate.core");
goog.require("orchard.model");
goog.require("orchard.util.core");
goog.require("orchard.util.dom");
goog.require("crate.binding");
goog.require("orchard.objects.modules.media");
goog.require("orchard.object");
goog.require("dommy.core");
goog.require("orchard.module");
goog.require("orchard.module");
orchard.object.object_STAR_.call(null, "\ufdd0:module-selector-module", "\ufdd0:tags", cljs.core.PersistentHashSet.EMPTY, "\ufdd0:triggers", cljs.core.PersistentHashSet.EMPTY, "\ufdd0:behaviors", cljs.core.PersistentVector.EMPTY, "\ufdd0:id", orchard.util.core.uuid.call(null), "\ufdd0:init", function(this$) {
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div.span12.module.module-selector-module", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", [cljs.core.str("module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join("")], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-tray", orchard.module.module_btn.call(null, this$)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-content.module-selector-module-content", 
  cljs.core.PersistentVector.fromArray(["\ufdd0:div.row-fluid", function() {
    var iter__3228__auto__ = function iter__436348(s__436349) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__436349__$1 = s__436349;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__436349__$1);
          if(temp__4092__auto__) {
            var s__436349__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__436349__$2)) {
              var c__3226__auto__ = cljs.core.chunk_first.call(null, s__436349__$2);
              var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
              var b__436351 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
              if(function() {
                var i__436350 = 0;
                while(true) {
                  if(i__436350 < size__3227__auto__) {
                    var icon = cljs.core._nth.call(null, c__3226__auto__, i__436350);
                    cljs.core.chunk_append.call(null, b__436351, cljs.core.PersistentVector.fromArray(["\ufdd0:div.span1", icon], true));
                    var G__436352 = i__436350 + 1;
                    i__436350 = G__436352;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__436351), iter__436348.call(null, cljs.core.chunk_rest.call(null, s__436349__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__436351), null)
              }
            }else {
              var icon = cljs.core.first.call(null, s__436349__$2);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.span1", icon], true), iter__436348.call(null, cljs.core.rest.call(null, s__436349__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3228__auto__.call(null, cljs.core.PersistentVector.EMPTY)
  }()], true)], true)], true)
});
orchard.objects.modules.module_selector.module_selector_module = orchard.object.create.call(null, "\ufdd0:module-selector-module");
goog.provide("orchard.objects.templates.single_column");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("orchard.module");
goog.require("crate.binding");
goog.require("crate.binding");
goog.require("orchard.objects.modules.module_selector");
goog.require("orchard.module");
goog.require("orchard.model");
goog.require("orchard.util.dom");
goog.require("orchard.util.core");
goog.require("orchard.util.log");
goog.require("orchard.object");
goog.require("cljs.core.async");
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.templates.single-column/ready", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:ready", null], true), function(this$) {
  var seq__437722 = cljs.core.seq.call(null, (new cljs.core.Keyword("\ufdd0:modules")).call(null, cljs.core.deref.call(null, this$)));
  var chunk__437723 = null;
  var count__437724 = 0;
  var i__437725 = 0;
  while(true) {
    if(i__437725 < count__437724) {
      var mod = cljs.core._nth.call(null, chunk__437723, i__437725);
      orchard.object.raise.call(null, mod, "\ufdd0:ready");
      var G__437726 = seq__437722;
      var G__437727 = chunk__437723;
      var G__437728 = count__437724;
      var G__437729 = i__437725 + 1;
      seq__437722 = G__437726;
      chunk__437723 = G__437727;
      count__437724 = G__437728;
      i__437725 = G__437729;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__437722);
      if(temp__4092__auto__) {
        var seq__437722__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437722__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__437722__$1);
          var G__437730 = cljs.core.chunk_rest.call(null, seq__437722__$1);
          var G__437731 = c__3259__auto__;
          var G__437732 = cljs.core.count.call(null, c__3259__auto__);
          var G__437733 = 0;
          seq__437722 = G__437730;
          chunk__437723 = G__437731;
          count__437724 = G__437732;
          i__437725 = G__437733;
          continue
        }else {
          var mod = cljs.core.first.call(null, seq__437722__$1);
          orchard.object.raise.call(null, mod, "\ufdd0:ready");
          var G__437734 = cljs.core.next.call(null, seq__437722__$1);
          var G__437735 = null;
          var G__437736 = 0;
          var G__437737 = 0;
          seq__437722 = G__437734;
          chunk__437723 = G__437735;
          count__437724 = G__437736;
          i__437725 = G__437737;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
});
orchard.objects.templates.single_column.render_modules = function render_modules(this$, modules) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:ul.modules.connected-sortable", cljs.core.PersistentVector.fromArray(["\ufdd0:li.modules-item", orchard.module.top_spacer.call(null, this$)], true), function() {
    var iter__3228__auto__ = function iter__437750(s__437751) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__437751__$1 = s__437751;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__437751__$1);
          if(temp__4092__auto__) {
            var s__437751__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__437751__$2)) {
              var c__3226__auto__ = cljs.core.chunk_first.call(null, s__437751__$2);
              var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
              var b__437753 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
              if(function() {
                var i__437752 = 0;
                while(true) {
                  if(i__437752 < size__3227__auto__) {
                    var module = cljs.core._nth.call(null, c__3226__auto__, i__437752);
                    cljs.core.chunk_append.call(null, b__437753, cljs.core.PersistentVector.fromArray(["\ufdd0:li.modules-item", cljs.core.PersistentVector.fromArray(["\ufdd0:div.row-fluid", (new cljs.core.Keyword("\ufdd0:content")).call(null, cljs.core.deref.call(null, module))], true), orchard.module.spacer.call(null, module)], true));
                    var G__437760 = i__437752 + 1;
                    i__437752 = G__437760;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__437753), iter__437750.call(null, cljs.core.chunk_rest.call(null, s__437751__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__437753), null)
              }
            }else {
              var module = cljs.core.first.call(null, s__437751__$2);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:li.modules-item", cljs.core.PersistentVector.fromArray(["\ufdd0:div.row-fluid", (new cljs.core.Keyword("\ufdd0:content")).call(null, cljs.core.deref.call(null, module))], true), orchard.module.spacer.call(null, module)], true), iter__437750.call(null, cljs.core.rest.call(null, s__437751__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3228__auto__.call(null, modules)
  }()], true));
  var seq__437754_437761 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__437755_437762 = null;
  var count__437756_437763 = 0;
  var i__437757_437764 = 0;
  while(true) {
    if(i__437757_437764 < count__437756_437763) {
      var vec__437758_437765 = cljs.core._nth.call(null, chunk__437755_437762, i__437757_437764);
      var ev__431429__auto___437766 = cljs.core.nth.call(null, vec__437758_437765, 0, null);
      var func__431430__auto___437767 = cljs.core.nth.call(null, vec__437758_437765, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437766, func__431430__auto___437767);
      var G__437768 = seq__437754_437761;
      var G__437769 = chunk__437755_437762;
      var G__437770 = count__437756_437763;
      var G__437771 = i__437757_437764 + 1;
      seq__437754_437761 = G__437768;
      chunk__437755_437762 = G__437769;
      count__437756_437763 = G__437770;
      i__437757_437764 = G__437771;
      continue
    }else {
      var temp__4092__auto___437772 = cljs.core.seq.call(null, seq__437754_437761);
      if(temp__4092__auto___437772) {
        var seq__437754_437773__$1 = temp__4092__auto___437772;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437754_437773__$1)) {
          var c__3259__auto___437774 = cljs.core.chunk_first.call(null, seq__437754_437773__$1);
          var G__437775 = cljs.core.chunk_rest.call(null, seq__437754_437773__$1);
          var G__437776 = c__3259__auto___437774;
          var G__437777 = cljs.core.count.call(null, c__3259__auto___437774);
          var G__437778 = 0;
          seq__437754_437761 = G__437775;
          chunk__437755_437762 = G__437776;
          count__437756_437763 = G__437777;
          i__437757_437764 = G__437778;
          continue
        }else {
          var vec__437759_437779 = cljs.core.first.call(null, seq__437754_437773__$1);
          var ev__431429__auto___437780 = cljs.core.nth.call(null, vec__437759_437779, 0, null);
          var func__431430__auto___437781 = cljs.core.nth.call(null, vec__437759_437779, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437780, func__431430__auto___437781);
          var G__437782 = cljs.core.next.call(null, seq__437754_437773__$1);
          var G__437783 = null;
          var G__437784 = 0;
          var G__437785 = 0;
          seq__437754_437761 = G__437782;
          chunk__437755_437762 = G__437783;
          count__437756_437763 = G__437784;
          i__437757_437764 = G__437785;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.templates.single-column/save-template", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:save", null], true), "\ufdd0:reaction", function(this$) {
  var mod_ids = cljs.core.map.call(null, function(p1__437738_SHARP_) {
    return(new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, p1__437738_SHARP_))
  }, cljs.core.filter.call(null, function(p1__437739_SHARP_) {
    return cljs.core.not_EQ_.call(null, (new cljs.core.Keyword("\ufdd0:type")).call(null, cljs.core.deref.call(null, p1__437739_SHARP_)), "module-selector-module")
  }, (new cljs.core.Keyword("\ufdd0:modules")).call(null, cljs.core.deref.call(null, this$))));
  var original_doc = cljs.core.first.call(null, (new cljs.core.Keyword("\ufdd0:args")).call(null, cljs.core.deref.call(null, this$)));
  var rev = (new cljs.core.Keyword("\ufdd0:rev")).call(null, original_doc);
  var id = (new cljs.core.Keyword("\ufdd0:id")).call(null, original_doc);
  var doc_keys = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.distinct.call(null, cljs.core.conj.call(null, cljs.core.keys.call(null, original_doc), "\ufdd0:id", "\ufdd0:rev")));
  var orig_vals = cljs.core.select_keys.call(null, cljs.core.deref.call(null, this$), doc_keys);
  var new_doc = cljs.core.assoc.call(null, orig_vals, "\ufdd0:modules", mod_ids, "\ufdd0:rev", function() {
    var or__3943__auto__ = (new cljs.core.Keyword("\ufdd0:rev")).call(null, cljs.core.deref.call(null, this$));
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return(new cljs.core.Keyword("\ufdd0:rev")).call(null, original_doc)
    }
  }(), "\ufdd0:id", (new cljs.core.Keyword("\ufdd0:id")).call(null, original_doc));
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_437795) {
        var state_val_437796 = state_437795[1];
        if(state_val_437796 === 2) {
          var inst_437791 = state_437795[2];
          var inst_437792 = (new cljs.core.Keyword("\ufdd0:rev")).call(null, inst_437791);
          var inst_437793 = orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:rev", inst_437792);
          var state_437795__$1 = state_437795;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_437795__$1, inst_437793)
        }else {
          if(state_val_437796 === 1) {
            var inst_437787 = cljs.core.deref.call(null, this$);
            var inst_437788 = (new cljs.core.Keyword("\ufdd0:id")).call(null, inst_437787);
            var inst_437789 = orchard.model.save_object_BANG_.call(null, orchard.objects.app.db, inst_437788, new_doc);
            var state_437795__$1 = state_437795;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_437795__$1, 2, inst_437789)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_437798 = new Array(5);
            statearr_437798[0] = state_machine__4793__auto__;
            statearr_437798[1] = 1;
            return statearr_437798
          };
          var state_machine__4793__auto____1 = function(state_437795) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_437795);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_437795) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_437795)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_437799 = f__4865__auto__.call(null);
      statearr_437799[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_437799
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.templates.single-column/remove-module", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:remove-module", null], true), "\ufdd0:reaction", function(this$, child) {
  orchard.object.update_BANG_.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:modules"], true), function(mods) {
    return cljs.core.filter.call(null, function(p1__437786_SHARP_) {
      return cljs.core.not_EQ_.call(null, (new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, p1__437786_SHARP_)), (new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, child)))
    }, mods)
  });
  return orchard.object.raise.call(null, this$, "\ufdd0:save")
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.templates.single-column/add-module", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:add-module", null], true), "\ufdd0:reaction", function(this$, template, new_mod, index) {
  orchard.object.parent_BANG_.call(null, template, new_mod);
  orchard.object.update_BANG_.call(null, template, cljs.core.PersistentVector.fromArray(["\ufdd0:modules"], true), function(p1__437800_SHARP_) {
    return orchard.util.core.insert_at.call(null, p1__437800_SHARP_, index, new_mod)
  });
  return orchard.object.raise.call(null, this$, "\ufdd0:save")
});
orchard.object.object_STAR_.call(null, "\ufdd0:single-column-template", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:add-module", null, "\ufdd0:remove-module", null, "\ufdd0:ready", null, "\ufdd0:save", null], true), "\ufdd0:tags", cljs.core.PersistentHashSet.fromArray(["\ufdd0:template", null], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.templates.single-column/save-template", "\ufdd0:orchard.objects.templates.single-column/ready", 
"\ufdd0:orchard.objects.templates.single-column/remove-module", "\ufdd0:orchard.objects.templates.single-column/add-module"], true), "\ufdd0:init", function(this$, tpl) {
  var seq__437802_437836 = cljs.core.seq.call(null, cljs.core.map.call(null, function(p1__437801_SHARP_) {
    return orchard.model.get_object.call(null, orchard.objects.app.db, p1__437801_SHARP_)
  }, (new cljs.core.Keyword("\ufdd0:modules")).call(null, tpl)));
  var chunk__437803_437837 = null;
  var count__437804_437838 = 0;
  var i__437805_437839 = 0;
  while(true) {
    if(i__437805_437839 < count__437804_437838) {
      var ch_437840 = cljs.core._nth.call(null, chunk__437803_437837, i__437805_437839);
      var c__4864__auto___437841 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(seq__437802_437836, chunk__437803_437837, count__437804_437838, i__437805_437839, c__4864__auto___437841, ch_437840) {
        return function() {
          var f__4865__auto__ = function() {
            var switch__4792__auto__ = function(seq__437802_437836, chunk__437803_437837, count__437804_437838, i__437805_437839, c__4864__auto___437841, ch_437840) {
              return function(state_437815) {
                var state_val_437816 = state_437815[1];
                if(state_val_437816 === 2) {
                  var inst_437807 = state_437815[2];
                  var inst_437808 = (new cljs.core.Keyword("\ufdd0:type")).call(null, inst_437807);
                  var inst_437809 = cljs.core.keyword.call(null, inst_437808);
                  var inst_437810 = orchard.object.create.call(null, inst_437809, inst_437807);
                  var inst_437811 = orchard.object.parent_BANG_.call(null, this$, inst_437810);
                  var inst_437812 = cljs.core.vector.call(null, "\ufdd0:modules");
                  var inst_437813 = orchard.object.update_BANG_.call(null, this$, inst_437812, cljs.core.conj, inst_437810);
                  var state_437815__$1 = function() {
                    var statearr_437817 = state_437815;
                    statearr_437817[5] = inst_437811;
                    return statearr_437817
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_437815__$1, inst_437813)
                }else {
                  if(state_val_437816 === 1) {
                    var state_437815__$1 = state_437815;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_437815__$1, 2, ch_437840)
                  }else {
                    return null
                  }
                }
              }
            }(seq__437802_437836, chunk__437803_437837, count__437804_437838, i__437805_437839, c__4864__auto___437841, ch_437840);
            return function(seq__437802_437836, chunk__437803_437837, count__437804_437838, i__437805_437839, switch__4792__auto__, c__4864__auto___437841, ch_437840) {
              return function() {
                var state_machine__4793__auto__ = null;
                var state_machine__4793__auto____0 = function() {
                  var statearr_437819 = new Array(6);
                  statearr_437819[0] = state_machine__4793__auto__;
                  statearr_437819[1] = 1;
                  return statearr_437819
                };
                var state_machine__4793__auto____1 = function(state_437815) {
                  while(true) {
                    var result__4794__auto__ = switch__4792__auto__.call(null, state_437815);
                    if(result__4794__auto__ === "\ufdd0:recur") {
                      continue
                    }else {
                      return result__4794__auto__
                    }
                    break
                  }
                };
                state_machine__4793__auto__ = function(state_437815) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__4793__auto____0.call(this);
                    case 1:
                      return state_machine__4793__auto____1.call(this, state_437815)
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
                state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
                return state_machine__4793__auto__
              }()
            }(seq__437802_437836, chunk__437803_437837, count__437804_437838, i__437805_437839, switch__4792__auto__, c__4864__auto___437841, ch_437840)
          }();
          var state__4866__auto__ = function() {
            var statearr_437820 = f__4865__auto__.call(null);
            statearr_437820[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto___437841;
            return statearr_437820
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
        }
      }(seq__437802_437836, chunk__437803_437837, count__437804_437838, i__437805_437839, c__4864__auto___437841, ch_437840));
      var G__437842 = seq__437802_437836;
      var G__437843 = chunk__437803_437837;
      var G__437844 = count__437804_437838;
      var G__437845 = i__437805_437839 + 1;
      seq__437802_437836 = G__437842;
      chunk__437803_437837 = G__437843;
      count__437804_437838 = G__437844;
      i__437805_437839 = G__437845;
      continue
    }else {
      var temp__4092__auto___437846 = cljs.core.seq.call(null, seq__437802_437836);
      if(temp__4092__auto___437846) {
        var seq__437802_437847__$1 = temp__4092__auto___437846;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437802_437847__$1)) {
          var c__3259__auto___437848 = cljs.core.chunk_first.call(null, seq__437802_437847__$1);
          var G__437849 = cljs.core.chunk_rest.call(null, seq__437802_437847__$1);
          var G__437850 = c__3259__auto___437848;
          var G__437851 = cljs.core.count.call(null, c__3259__auto___437848);
          var G__437852 = 0;
          seq__437802_437836 = G__437849;
          chunk__437803_437837 = G__437850;
          count__437804_437838 = G__437851;
          i__437805_437839 = G__437852;
          continue
        }else {
          var ch_437853 = cljs.core.first.call(null, seq__437802_437847__$1);
          var c__4864__auto___437854 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(seq__437802_437836, chunk__437803_437837, count__437804_437838, i__437805_437839, c__4864__auto___437854, ch_437853, seq__437802_437847__$1, temp__4092__auto___437846) {
            return function() {
              var f__4865__auto__ = function() {
                var switch__4792__auto__ = function(seq__437802_437836, chunk__437803_437837, count__437804_437838, i__437805_437839, c__4864__auto___437854, ch_437853, seq__437802_437847__$1, temp__4092__auto___437846) {
                  return function(state_437830) {
                    var state_val_437831 = state_437830[1];
                    if(state_val_437831 === 2) {
                      var inst_437822 = state_437830[2];
                      var inst_437823 = (new cljs.core.Keyword("\ufdd0:type")).call(null, inst_437822);
                      var inst_437824 = cljs.core.keyword.call(null, inst_437823);
                      var inst_437825 = orchard.object.create.call(null, inst_437824, inst_437822);
                      var inst_437826 = orchard.object.parent_BANG_.call(null, this$, inst_437825);
                      var inst_437827 = cljs.core.vector.call(null, "\ufdd0:modules");
                      var inst_437828 = orchard.object.update_BANG_.call(null, this$, inst_437827, cljs.core.conj, inst_437825);
                      var state_437830__$1 = function() {
                        var statearr_437832 = state_437830;
                        statearr_437832[5] = inst_437826;
                        return statearr_437832
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_437830__$1, inst_437828)
                    }else {
                      if(state_val_437831 === 1) {
                        var state_437830__$1 = state_437830;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_437830__$1, 2, ch_437853)
                      }else {
                        return null
                      }
                    }
                  }
                }(seq__437802_437836, chunk__437803_437837, count__437804_437838, i__437805_437839, c__4864__auto___437854, ch_437853, seq__437802_437847__$1, temp__4092__auto___437846);
                return function(seq__437802_437836, chunk__437803_437837, count__437804_437838, i__437805_437839, switch__4792__auto__, c__4864__auto___437854, ch_437853, seq__437802_437847__$1, temp__4092__auto___437846) {
                  return function() {
                    var state_machine__4793__auto__ = null;
                    var state_machine__4793__auto____0 = function() {
                      var statearr_437834 = new Array(6);
                      statearr_437834[0] = state_machine__4793__auto__;
                      statearr_437834[1] = 1;
                      return statearr_437834
                    };
                    var state_machine__4793__auto____1 = function(state_437830) {
                      while(true) {
                        var result__4794__auto__ = switch__4792__auto__.call(null, state_437830);
                        if(result__4794__auto__ === "\ufdd0:recur") {
                          continue
                        }else {
                          return result__4794__auto__
                        }
                        break
                      }
                    };
                    state_machine__4793__auto__ = function(state_437830) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__4793__auto____0.call(this);
                        case 1:
                          return state_machine__4793__auto____1.call(this, state_437830)
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
                    state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
                    return state_machine__4793__auto__
                  }()
                }(seq__437802_437836, chunk__437803_437837, count__437804_437838, i__437805_437839, switch__4792__auto__, c__4864__auto___437854, ch_437853, seq__437802_437847__$1, temp__4092__auto___437846)
              }();
              var state__4866__auto__ = function() {
                var statearr_437835 = f__4865__auto__.call(null);
                statearr_437835[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto___437854;
                return statearr_437835
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
            }
          }(seq__437802_437836, chunk__437803_437837, count__437804_437838, i__437805_437839, c__4864__auto___437854, ch_437853, seq__437802_437847__$1, temp__4092__auto___437846));
          var G__437855 = cljs.core.next.call(null, seq__437802_437847__$1);
          var G__437856 = null;
          var G__437857 = 0;
          var G__437858 = 0;
          seq__437802_437836 = G__437855;
          chunk__437803_437837 = G__437856;
          count__437804_437838 = G__437857;
          i__437805_437839 = G__437858;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div.template.single-column-template", cljs.core.PersistentVector.fromArray(["\ufdd0:div.modules-container", crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:modules"), cljs.core.partial.call(null, orchard.objects.templates.single_column.render_modules, this$))], true)], true)
});
orchard.objects.templates.single_column.single_column_template_doc = function() {
  var single_column_template_doc__delegate = function(db, modules) {
    var id = orchard.util.core.uuid.call(null);
    var mod_ids = cljs.core.map.call(null, "\ufdd0:id", modules);
    return orchard.model.save_object_BANG_.call(null, db, id, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "\ufdd0:single-column-template", "\ufdd0:modules", mod_ids, "\ufdd0:id", id], true))
  };
  var single_column_template_doc = function(db, var_args) {
    var modules = null;
    if(arguments.length > 1) {
      modules = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return single_column_template_doc__delegate.call(this, db, modules)
  };
  single_column_template_doc.cljs$lang$maxFixedArity = 1;
  single_column_template_doc.cljs$lang$applyTo = function(arglist__437859) {
    var db = cljs.core.first(arglist__437859);
    var modules = cljs.core.rest(arglist__437859);
    return single_column_template_doc__delegate(db, modules)
  };
  single_column_template_doc.cljs$core$IFn$_invoke$arity$variadic = single_column_template_doc__delegate;
  return single_column_template_doc
}();
goog.provide("orchard.objects.wiki_page");
goog.require("cljs.core");
goog.require("orchard.util.dom");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("crate.binding");
goog.require("orchard.util.log");
goog.require("orchard.util.dom");
goog.require("orchard.model");
goog.require("orchard.objects.templates.single_column");
goog.require("orchard.dispatch");
goog.require("crate.binding");
goog.require("orchard.object");
goog.require("cljs.core.async");
goog.require("orchard.util.core");
goog.require("orchard.module");
orchard.objects.wiki_page.render_template = function render_template(this$, template) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.document-content", orchard.object.__GT_content.call(null, template)], true));
  var seq__437866_437872 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__437867_437873 = null;
  var count__437868_437874 = 0;
  var i__437869_437875 = 0;
  while(true) {
    if(i__437869_437875 < count__437868_437874) {
      var vec__437870_437876 = cljs.core._nth.call(null, chunk__437867_437873, i__437869_437875);
      var ev__431429__auto___437877 = cljs.core.nth.call(null, vec__437870_437876, 0, null);
      var func__431430__auto___437878 = cljs.core.nth.call(null, vec__437870_437876, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437877, func__431430__auto___437878);
      var G__437879 = seq__437866_437872;
      var G__437880 = chunk__437867_437873;
      var G__437881 = count__437868_437874;
      var G__437882 = i__437869_437875 + 1;
      seq__437866_437872 = G__437879;
      chunk__437867_437873 = G__437880;
      count__437868_437874 = G__437881;
      i__437869_437875 = G__437882;
      continue
    }else {
      var temp__4092__auto___437883 = cljs.core.seq.call(null, seq__437866_437872);
      if(temp__4092__auto___437883) {
        var seq__437866_437884__$1 = temp__4092__auto___437883;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437866_437884__$1)) {
          var c__3259__auto___437885 = cljs.core.chunk_first.call(null, seq__437866_437884__$1);
          var G__437886 = cljs.core.chunk_rest.call(null, seq__437866_437884__$1);
          var G__437887 = c__3259__auto___437885;
          var G__437888 = cljs.core.count.call(null, c__3259__auto___437885);
          var G__437889 = 0;
          seq__437866_437872 = G__437886;
          chunk__437867_437873 = G__437887;
          count__437868_437874 = G__437888;
          i__437869_437875 = G__437889;
          continue
        }else {
          var vec__437871_437890 = cljs.core.first.call(null, seq__437866_437884__$1);
          var ev__431429__auto___437891 = cljs.core.nth.call(null, vec__437871_437890, 0, null);
          var func__431430__auto___437892 = cljs.core.nth.call(null, vec__437871_437890, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437891, func__431430__auto___437892);
          var G__437893 = cljs.core.next.call(null, seq__437866_437884__$1);
          var G__437894 = null;
          var G__437895 = 0;
          var G__437896 = 0;
          seq__437866_437872 = G__437893;
          chunk__437867_437873 = G__437894;
          count__437868_437874 = G__437895;
          i__437869_437875 = G__437896;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.wiki-page/save-document", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:save", null], true), "\ufdd0:reaction", function(this$) {
  return orchard.model.save_object_BANG_.call(null, orchard.objects.app.db, (new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)), cljs.core.assoc.call(null, cljs.core.select_keys.call(null, cljs.core.deref.call(null, this$), cljs.core.PersistentVector.fromArray(["\ufdd0:id", "\ufdd0:rev", "\ufdd0:type", "\ufdd0:title"], true)), "\ufdd0:template", (new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, (new cljs.core.Keyword("\ufdd0:template")).call(null, 
  cljs.core.deref.call(null, this$))))))
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.wiki-page/lock-document", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:lock-document", null], true), "\ufdd0:reaction", function(this$) {
  orchard.object.update_BANG_.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:locked?"], true), function(_) {
    return true
  });
  return $(".module").css("background-color", "rgb(255, 255, 255)")
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.wiki-page/unlock-document", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:unlock-document", null], true), "\ufdd0:reaction", function(this$) {
  return orchard.object.update_BANG_.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:locked?"], true), function(_) {
    return false
  })
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.wiki-page/ready", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:ready", null], true), "\ufdd0:reaction", function(this$) {
  $(".header-label").tooltip(cljs.core.clj__GT_js.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:delay", 100, "\ufdd0:placement", "bottom"], true)));
  return orchard.object.raise.call(null, (new cljs.core.Keyword("\ufdd0:template")).call(null, cljs.core.deref.call(null, this$)), "\ufdd0:ready")
});
orchard.objects.wiki_page.delete_doc_btn = function delete_doc_btn(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:span.header-btn", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:data-toggle", "tooltip", "\ufdd0:title", "delete this document"], true), cljs.core.PersistentVector.fromArray(["\ufdd0:i.icon-trash.header-icon"], true)], true));
  var seq__437903_437909 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    var msg = "Are you sure you want to delete this document?\nThis will permanently delete this document.";
    var delete_QMARK_ = confirm(msg);
    if(cljs.core.truth_(delete_QMARK_)) {
      orchard.model.delete_document.call(null, cljs.core.deref.call(null, this$));
      return orchard.objects.app.open_document.call(null, orchard.objects.app.db, "\ufdd0:home")
    }else {
      return null
    }
  }], true)));
  var chunk__437904_437910 = null;
  var count__437905_437911 = 0;
  var i__437906_437912 = 0;
  while(true) {
    if(i__437906_437912 < count__437905_437911) {
      var vec__437907_437913 = cljs.core._nth.call(null, chunk__437904_437910, i__437906_437912);
      var ev__431429__auto___437914 = cljs.core.nth.call(null, vec__437907_437913, 0, null);
      var func__431430__auto___437915 = cljs.core.nth.call(null, vec__437907_437913, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437914, func__431430__auto___437915);
      var G__437916 = seq__437903_437909;
      var G__437917 = chunk__437904_437910;
      var G__437918 = count__437905_437911;
      var G__437919 = i__437906_437912 + 1;
      seq__437903_437909 = G__437916;
      chunk__437904_437910 = G__437917;
      count__437905_437911 = G__437918;
      i__437906_437912 = G__437919;
      continue
    }else {
      var temp__4092__auto___437920 = cljs.core.seq.call(null, seq__437903_437909);
      if(temp__4092__auto___437920) {
        var seq__437903_437921__$1 = temp__4092__auto___437920;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437903_437921__$1)) {
          var c__3259__auto___437922 = cljs.core.chunk_first.call(null, seq__437903_437921__$1);
          var G__437923 = cljs.core.chunk_rest.call(null, seq__437903_437921__$1);
          var G__437924 = c__3259__auto___437922;
          var G__437925 = cljs.core.count.call(null, c__3259__auto___437922);
          var G__437926 = 0;
          seq__437903_437909 = G__437923;
          chunk__437904_437910 = G__437924;
          count__437905_437911 = G__437925;
          i__437906_437912 = G__437926;
          continue
        }else {
          var vec__437908_437927 = cljs.core.first.call(null, seq__437903_437921__$1);
          var ev__431429__auto___437928 = cljs.core.nth.call(null, vec__437908_437927, 0, null);
          var func__431430__auto___437929 = cljs.core.nth.call(null, vec__437908_437927, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437928, func__431430__auto___437929);
          var G__437930 = cljs.core.next.call(null, seq__437903_437921__$1);
          var G__437931 = null;
          var G__437932 = 0;
          var G__437933 = 0;
          seq__437903_437909 = G__437930;
          chunk__437904_437910 = G__437931;
          count__437905_437911 = G__437932;
          i__437906_437912 = G__437933;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.wiki_page.copy_to_clipboard_prompt = function copy_to_clipboard_prompt(text) {
  return window.prompt("Copy to clipboard: cmd + c, Enter", text)
};
orchard.objects.wiki_page.id_btn = function id_btn(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:span.header-btn", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:data-toggle", "tooltip", "\ufdd0:title", "document hyperlink tag"], true), cljs.core.PersistentVector.fromArray(["\ufdd0:i.icon-barcode"], true)], true));
  var seq__437940_437946 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    return orchard.objects.wiki_page.copy_to_clipboard_prompt.call(null, [cljs.core.str("["), cljs.core.str((new cljs.core.Keyword("\ufdd0:title")).call(null, cljs.core.deref.call(null, this$))), cljs.core.str("]("), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$))), cljs.core.str(")")].join(""))
  }], true)));
  var chunk__437941_437947 = null;
  var count__437942_437948 = 0;
  var i__437943_437949 = 0;
  while(true) {
    if(i__437943_437949 < count__437942_437948) {
      var vec__437944_437950 = cljs.core._nth.call(null, chunk__437941_437947, i__437943_437949);
      var ev__431429__auto___437951 = cljs.core.nth.call(null, vec__437944_437950, 0, null);
      var func__431430__auto___437952 = cljs.core.nth.call(null, vec__437944_437950, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437951, func__431430__auto___437952);
      var G__437953 = seq__437940_437946;
      var G__437954 = chunk__437941_437947;
      var G__437955 = count__437942_437948;
      var G__437956 = i__437943_437949 + 1;
      seq__437940_437946 = G__437953;
      chunk__437941_437947 = G__437954;
      count__437942_437948 = G__437955;
      i__437943_437949 = G__437956;
      continue
    }else {
      var temp__4092__auto___437957 = cljs.core.seq.call(null, seq__437940_437946);
      if(temp__4092__auto___437957) {
        var seq__437940_437958__$1 = temp__4092__auto___437957;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437940_437958__$1)) {
          var c__3259__auto___437959 = cljs.core.chunk_first.call(null, seq__437940_437958__$1);
          var G__437960 = cljs.core.chunk_rest.call(null, seq__437940_437958__$1);
          var G__437961 = c__3259__auto___437959;
          var G__437962 = cljs.core.count.call(null, c__3259__auto___437959);
          var G__437963 = 0;
          seq__437940_437946 = G__437960;
          chunk__437941_437947 = G__437961;
          count__437942_437948 = G__437962;
          i__437943_437949 = G__437963;
          continue
        }else {
          var vec__437945_437964 = cljs.core.first.call(null, seq__437940_437958__$1);
          var ev__431429__auto___437965 = cljs.core.nth.call(null, vec__437945_437964, 0, null);
          var func__431430__auto___437966 = cljs.core.nth.call(null, vec__437945_437964, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437965, func__431430__auto___437966);
          var G__437967 = cljs.core.next.call(null, seq__437940_437958__$1);
          var G__437968 = null;
          var G__437969 = 0;
          var G__437970 = 0;
          seq__437940_437946 = G__437967;
          chunk__437941_437947 = G__437968;
          count__437942_437948 = G__437969;
          i__437943_437949 = G__437970;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.object.object_STAR_.call(null, "\ufdd0:wiki-page", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:unlock-document", null, "\ufdd0:ready", null, "\ufdd0:lock-document", null, "\ufdd0:save", null], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.wiki-page/save-document", "\ufdd0:orchard.objects.wiki-page/lock-document", "\ufdd0:orchard.objects.wiki-page/unlock-document", "\ufdd0:orchard.objects.wiki-page/ready"], true), "\ufdd0:locked?", 
true, "\ufdd0:title", "", "\ufdd0:init", function(this$, document) {
  var c__4864__auto___437990 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_437984) {
        var state_val_437985 = state_437984[1];
        if(state_val_437985 === 2) {
          var inst_437974 = state_437984[2];
          var inst_437975 = (new cljs.core.Keyword("\ufdd0:type")).call(null, inst_437974);
          var inst_437976 = cljs.core.keyword.call(null, inst_437975);
          var inst_437977 = orchard.object.create.call(null, inst_437976, inst_437974);
          var inst_437978 = orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:template", inst_437977);
          var inst_437979 = orchard.object.parent_BANG_.call(null, this$, inst_437977);
          var inst_437980 = cljs.core.deref.call(null, this$);
          var inst_437981 = (new cljs.core.Keyword("\ufdd0:id")).call(null, inst_437980);
          var inst_437982 = orchard.object.raise.call(null, inst_437977, "\ufdd0:post-init", inst_437981);
          var state_437984__$1 = function() {
            var statearr_437986 = state_437984;
            statearr_437986[5] = inst_437979;
            statearr_437986[6] = inst_437978;
            return statearr_437986
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_437984__$1, inst_437982)
        }else {
          if(state_val_437985 === 1) {
            var inst_437971 = (new cljs.core.Keyword("\ufdd0:template")).call(null, document);
            var inst_437972 = orchard.model.get_object.call(null, orchard.objects.app.db, inst_437971);
            var state_437984__$1 = state_437984;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_437984__$1, 2, inst_437972)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_437988 = new Array(7);
            statearr_437988[0] = state_machine__4793__auto__;
            statearr_437988[1] = 1;
            return statearr_437988
          };
          var state_machine__4793__auto____1 = function(state_437984) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_437984);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_437984) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_437984)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_437989 = f__4865__auto__.call(null);
      statearr_437989[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto___437990;
      return statearr_437989
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  orchard.object.merge_BANG_.call(null, this$, document, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:template", cljs.core.atom.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:content", cljs.core.PersistentVector.fromArray(["\ufdd0:div"], true)], true))], true));
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div.document", cljs.core.PersistentVector.fromArray(["\ufdd0:div.row-fluid", cljs.core.PersistentVector.fromArray(["\ufdd0:div", crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:template"], true)), cljs.core.partial.call(null, orchard.objects.wiki_page.render_template, this$))], true)], true)], true)
});
orchard.dispatch.react_to.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0:open-document", null], true), function(event_id, document) {
  return orchard.util.dom.set_frame_title.call(null, (new cljs.core.Keyword("\ufdd0:title")).call(null, cljs.core.deref.call(null, document)))
});
orchard.objects.wiki_page.wiki_page = function() {
  var wiki_page__delegate = function(db, args) {
    var new_doc = cljs.core.merge.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "\ufdd0:wiki-page", "\ufdd0:id", orchard.util.core.uuid.call(null)], true), cljs.core.apply.call(null, cljs.core.hash_map, args));
    return orchard.model.save_object_BANG_.call(null, db, (new cljs.core.Keyword("\ufdd0:id")).call(null, new_doc), cljs.core.assoc.call(null, new_doc, "\ufdd0:template", (new cljs.core.Keyword("\ufdd0:id")).call(null, (new cljs.core.Keyword("\ufdd0:template")).call(null, new_doc))))
  };
  var wiki_page = function(db, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return wiki_page__delegate.call(this, db, args)
  };
  wiki_page.cljs$lang$maxFixedArity = 1;
  wiki_page.cljs$lang$applyTo = function(arglist__437991) {
    var db = cljs.core.first(arglist__437991);
    var args = cljs.core.rest(arglist__437991);
    return wiki_page__delegate(db, args)
  };
  wiki_page.cljs$core$IFn$_invoke$arity$variadic = wiki_page__delegate;
  return wiki_page
}();
goog.provide("orchard.objects.modules.tiny_mce");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.observe");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("orchard.module");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("crate.core");
goog.require("orchard.model");
goog.require("orchard.util.core");
goog.require("orchard.util.dom");
goog.require("orchard.observe");
goog.require("crate.binding");
goog.require("orchard.object");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("orchard.module");
orchard.objects.modules.tiny_mce.tiny_mce_doc = function tiny_mce_doc(db) {
  var id = orchard.util.core.uuid.call(null);
  return orchard.model.save_object_BANG_.call(null, db, id, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "\ufdd0:tiny-mce-module", "\ufdd0:text", "", "\ufdd0:id", id], true))
};
orchard.objects.modules.tiny_mce.date = new Date;
orchard.objects.modules.tiny_mce.get_time = function get_time() {
  return orchard.objects.modules.tiny_mce.date.getTime()
};
orchard.objects.modules.tiny_mce.hiccup__GT_str = function hiccup__GT_str(form) {
  return crate.core.html.call(null, form).outerHTML
};
orchard.objects.modules.tiny_mce.render_orchard_link = function render_orchard_link(tag, link) {
  return[cljs.core.str(" "), cljs.core.str(orchard.objects.modules.tiny_mce.hiccup__GT_str.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:span.orchard-link", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:data-href", link, "\ufdd0:data-title", tag, "\ufdd0:style", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:background-color", "rgb(241, 241, 241)", "\ufdd0:padding-bottom", "3px", "\ufdd0:padding-top", "2px", "\ufdd0:padding-left", "5px", "\ufdd0:padding-right", "5px", "\ufdd0:color", 
  "green", "\ufdd0:border-radius", "4px"], true)], true), tag], true))), cljs.core.str(" ")].join("")
};
orchard.objects.modules.tiny_mce.handle_tiny_click = function handle_tiny_click(ed, e) {
  var el = e.target;
  if(cljs.core._EQ_.call(null, "orchard-link", el.className)) {
    var href = el.getAttribute("data-href");
    var title = el.getAttribute("data-title");
    return orchard.objects.app.open_from_link.call(null, href)
  }else {
    return null
  }
};
orchard.objects.modules.tiny_mce.link_regex = /\[([^\]]+)\]\(([^)]+)\)/;
orchard.objects.modules.tiny_mce.replace_orchard_links = function replace_orchard_links(s) {
  return clojure.string.replace.call(null, s, orchard.objects.modules.tiny_mce.link_regex, function(m) {
    var vec__436354 = cljs.core.re_find.call(null, orchard.objects.modules.tiny_mce.link_regex, m);
    var res = cljs.core.nth.call(null, vec__436354, 0, null);
    var tag = cljs.core.nth.call(null, vec__436354, 1, null);
    var link = cljs.core.nth.call(null, vec__436354, 2, null);
    return orchard.objects.modules.tiny_mce.render_orchard_link.call(null, tag, link)
  })
};
orchard.objects.modules.tiny_mce.MAX_SAVE_DIFF = 1E4;
orchard.objects.modules.tiny_mce.MAX_CHANGE_DIFF = 5;
orchard.objects.modules.tiny_mce.save_QMARK_ = function save_QMARK_(this$) {
  var time_diff = cljs.core.get_in.call(null, cljs.core.deref.call(null, this$), cljs.core.PersistentVector.fromArray(["\ufdd0:save-data", "\ufdd0:last-save"], true)) - orchard.objects.modules.tiny_mce.get_time.call(null);
  var press_diff = cljs.core.get_in.call(null, orchard.object.update_BANG_.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:save-data", "\ufdd0:change-count"], true), cljs.core.inc), cljs.core.PersistentVector.fromArray(["\ufdd0:save-data", "\ufdd0:change-count"], true));
  var s_QMARK_ = function() {
    var or__3943__auto__ = time_diff > orchard.objects.modules.tiny_mce.MAX_SAVE_DIFF;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return press_diff > orchard.objects.modules.tiny_mce.MAX_CHANGE_DIFF
    }
  }();
  if(cljs.core.truth_(s_QMARK_)) {
    orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:save-data", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:last-save", orchard.objects.modules.tiny_mce.get_time.call(null), "\ufdd0:change-count", 0], true));
    return true
  }else {
    return false
  }
};
orchard.objects.modules.tiny_mce.editor_ids_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
orchard.objects.modules.tiny_mce.get_editors = function get_editors() {
  return cljs.core.deref.call(null, orchard.objects.modules.tiny_mce.editor_ids_STAR_)
};
orchard.objects.modules.tiny_mce.add_editor_id_BANG_ = function add_editor_id_BANG_(ed) {
  return cljs.core.swap_BANG_.call(null, orchard.objects.modules.tiny_mce.editor_ids_STAR_, cljs.core.conj, ed)
};
orchard.objects.modules.tiny_mce.remove_editor_id_BANG_ = function remove_editor_id_BANG_(ed_id) {
  return cljs.core.swap_BANG_.call(null, orchard.objects.modules.tiny_mce.editor_ids_STAR_, function(eds) {
    return cljs.core.filter.call(null, function(p1__436355_SHARP_) {
      return cljs.core.not_EQ_.call(null, ed_id, p1__436355_SHARP_)
    }, eds)
  })
};
orchard.objects.modules.tiny_mce.format_class = function format_class(id) {
  return[cljs.core.str("tiny-mce-editor-"), cljs.core.str(id)].join("")
};
orchard.objects.modules.tiny_mce.get_editor = function get_editor(ed_id) {
  return tinyMCE.get(orchard.objects.modules.tiny_mce.format_class.call(null, ed_id))
};
orchard.objects.modules.tiny_mce.clear_editors_BANG_ = function clear_editors_BANG_() {
  return cljs.core.reset_BANG_.call(null, orchard.objects.modules.tiny_mce.editor_ids_STAR_, cljs.core.PersistentVector.EMPTY)
};
orchard.objects.modules.tiny_mce.create_module = function create_module(app) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_436373) {
        var state_val_436374 = state_436373[1];
        if(state_val_436374 === 2) {
          var inst_436370 = state_436373[2];
          var inst_436371 = orchard.object.create.call(null, "\ufdd0:tiny-mce-module", inst_436370);
          var state_436373__$1 = state_436373;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_436373__$1, inst_436371)
        }else {
          if(state_val_436374 === 1) {
            var inst_436367 = (new cljs.core.Keyword("\ufdd0:db")).call(null, app);
            var inst_436368 = orchard.objects.modules.tiny_mce.tiny_mce_doc.call(null, inst_436367);
            var state_436373__$1 = state_436373;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_436373__$1, 2, inst_436368)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_436376 = new Array(5);
            statearr_436376[0] = state_machine__4793__auto__;
            statearr_436376[1] = 1;
            return statearr_436376
          };
          var state_machine__4793__auto____1 = function(state_436373) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_436373);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_436373) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_436373)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_436377 = f__4865__auto__.call(null);
      statearr_436377[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_436377
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.objects.modules.tiny_mce.render_editor = function render_editor(this$) {
  var el = cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-content.tiny-mce-module-content", cljs.core.PersistentVector.fromArray(["\ufdd0:form", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:method", "post"], true), cljs.core.PersistentVector.fromArray(["\ufdd0:textarea", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", [cljs.core.str("tiny-mce-editor-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join("")], true)], true)], true)], 
  true);
  var html = crate.core.html.call(null, el);
  orchard.objects.modules.tiny_mce.add_editor_id_BANG_.call(null, (new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)));
  return html
};
orchard.objects.modules.tiny_mce.icon = cljs.core.PersistentVector.fromArray(["\ufdd0:span.btn.btn-primary.tiny-mce-icon", "TinyMCE"], true);
orchard.objects.modules.tiny_mce.handle_editor_change = function handle_editor_change(this$, ed, l) {
  return orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:text", orchard.objects.modules.tiny_mce.replace_orchard_links.call(null, ed.getContent()))
};
orchard.objects.modules.tiny_mce.handle_node_change = function handle_node_change(ed, cm, e) {
  return null
};
orchard.objects.modules.tiny_mce.load_text = function load_text(this$, ed) {
  return ed.setContent(orchard.objects.modules.tiny_mce.replace_orchard_links.call(null, (new cljs.core.Keyword("\ufdd0:text")).call(null, cljs.core.deref.call(null, this$))))
};
orchard.objects.modules.tiny_mce.handle_editor_init = function handle_editor_init(this$, ed) {
  var body = cljs.core.first.call(null, ed.dom.select("body"));
  return orchard.objects.modules.tiny_mce.load_text.call(null, this$, ed)
};
orchard.objects.modules.tiny_mce.handle_set_content = function handle_set_content(ed, o) {
  var content = ed.getContent();
  var new_content = orchard.objects.modules.tiny_mce.replace_orchard_links.call(null, content);
  return o["content"] = new_content
};
orchard.objects.modules.tiny_mce.setup_tinymce = function setup_tinymce(this$, ed) {
  var on_change = ed.onChange;
  var on_init = ed.onInit;
  var on_set_content = ed.onSetContent;
  var on_click = ed.onClick;
  var on_node_change = ed.onNodeChange;
  on_init.add(cljs.core.partial.call(null, orchard.objects.modules.tiny_mce.handle_editor_init, this$));
  on_change.add(cljs.core.partial.call(null, orchard.objects.modules.tiny_mce.handle_editor_change, this$));
  on_set_content.add(orchard.objects.modules.tiny_mce.handle_set_content, this$);
  on_click.add(orchard.objects.modules.tiny_mce.handle_tiny_click);
  on_node_change.add(orchard.objects.modules.tiny_mce.handle_node_change);
  return ed.addButton("deletemodule", cljs.core.clj__GT_js.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:title", "Delete Module", "\ufdd0:image", "images/trash-can.png", "\ufdd0:onclick", cljs.core.partial.call(null, orchard.module.handle_delete_module, this$)], true)))
};
orchard.objects.modules.tiny_mce.handle_dom_insertion = function handle_dom_insertion(this$) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_436408) {
        var state_val_436409 = state_436408[1];
        if(state_val_436409 === 2) {
          var inst_436399 = state_436408[2];
          var inst_436400 = cljs.core.deref.call(null, this$);
          var inst_436401 = (new cljs.core.Keyword("\ufdd0:id")).call(null, inst_436400);
          var inst_436402 = orchard.objects.modules.tiny_mce.format_class.call(null, inst_436401);
          var inst_436403 = cljs.core.partial.call(null, orchard.objects.modules.tiny_mce.setup_tinymce, this$);
          var inst_436404 = cljs.core.hash_map.call(null, "\ufdd0:width", "100%", "\ufdd0:theme_advanced_buttons3", "", "\ufdd0:theme_advanced_buttons2", "", "\ufdd0:theme_advanced_toolbar_location", "top", "\ufdd0:theme_advanced_buttons1", "mybutton, bold, italic, underline, strikethrough, separator,\n                                     link, unlink, image, code, hr, separator,\n                                     formatselect, fontselect, fontsizeselect, seperator,\n                                     forecolorpicker, backcolorpicker, separator,\n                                     justifyleft, justifycenter, justifyright, justifyfull, separator,\n                                     bullist, numlist, separator,\n                                     deletemodule", 
          "\ufdd0:elements", inst_436402, "\ufdd0:plugins", "autoresize,inlinepopups", "\ufdd0:theme", "advanced", "\ufdd0:mode", "exact", "\ufdd0:theme_advanced_statusbar_location", "bottom", "\ufdd0:theme_advanced_toolbar_align", "left", "\ufdd0:setup", inst_436403);
          var inst_436405 = cljs.core.clj__GT_js.call(null, inst_436404);
          var inst_436406 = tinyMCE.init(inst_436405);
          var state_436408__$1 = function() {
            var statearr_436410 = state_436408;
            statearr_436410[5] = inst_436399;
            return statearr_436410
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_436408__$1, inst_436406)
        }else {
          if(state_val_436409 === 1) {
            var inst_436396 = cljs.core.deref.call(null, this$);
            var inst_436397 = (new cljs.core.Keyword("\ufdd0:ready-chan")).call(null, inst_436396);
            var state_436408__$1 = state_436408;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_436408__$1, 2, inst_436397)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_436412 = new Array(6);
            statearr_436412[0] = state_machine__4793__auto__;
            statearr_436412[1] = 1;
            return statearr_436412
          };
          var state_machine__4793__auto____1 = function(state_436408) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_436408);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_436408) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_436408)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_436413 = f__4865__auto__.call(null);
      statearr_436413[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_436413
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.object.object_STAR_.call(null, "\ufdd0:tiny-mce-module", "\ufdd0:tags", cljs.core.PersistentHashSet.fromArray(["\ufdd0:modules", null], true), "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:delete-module", null, "\ufdd0:ready", null, "\ufdd0:save", null], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.module/delete-module", "\ufdd0:orchard.module/save-module", "\ufdd0:orchard.objects.modules.tiny-mce/ready"], true), "\ufdd0:label", "TinyMCE", 
"\ufdd0:icon", orchard.objects.modules.tiny_mce.icon, "\ufdd0:text", "", "\ufdd0:editor", null, "\ufdd0:observer-chan", null, "\ufdd0:save-data", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:last-save", null, "\ufdd0:change-count", null], true), "\ufdd0:init", function(this$, record) {
  orchard.object.merge_BANG_.call(null, this$, record, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:save-data", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:last-save", orchard.objects.modules.tiny_mce.get_time.call(null), "\ufdd0:change-count", 0], true), "\ufdd0:observer-chan", cljs.core.async.chan.call(null)], true));
  orchard.objects.modules.tiny_mce.handle_dom_insertion.call(null, this$);
  orchard.util.core.bound_do.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:text"), function() {
    var G__436414__delegate = function(args) {
      return orchard.object.raise.call(null, this$, "\ufdd0:save")
    };
    var G__436414 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__436414__delegate.call(this, args)
    };
    G__436414.cljs$lang$maxFixedArity = 0;
    G__436414.cljs$lang$applyTo = function(arglist__436415) {
      var args = cljs.core.seq(arglist__436415);
      return G__436414__delegate(args)
    };
    G__436414.cljs$core$IFn$_invoke$arity$variadic = G__436414__delegate;
    return G__436414
  }());
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", [cljs.core.str("span12 module "), cljs.core.str((new cljs.core.Keyword("\ufdd0:type")).call(null, cljs.core.deref.call(null, this$)))].join(""), "\ufdd0:id", [cljs.core.str("module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join("")], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-tray"], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-element", 
  orchard.objects.modules.tiny_mce.render_editor.call(null, this$)], true)], true)
});
goog.provide("orchard.util.cljs");
goog.require("cljs.core");
goog.require("clojure.string");
cljs.core._STAR_print_fn_STAR_ = function(p1__438254_SHARP_) {
  return console.log(clojure.string.trim.call(null, p1__438254_SHARP_))
};
orchard.util.cljs.__GT_dottedkw = function() {
  var __GT_dottedkw__delegate = function(args) {
    return cljs.core.keyword.call(null, clojure.string.join.call(null, ".", cljs.core.map.call(null, cljs.core.name, cljs.core.filter.call(null, cljs.core.identity, args))))
  };
  var __GT_dottedkw = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return __GT_dottedkw__delegate.call(this, args)
  };
  __GT_dottedkw.cljs$lang$maxFixedArity = 0;
  __GT_dottedkw.cljs$lang$applyTo = function(arglist__438255) {
    var args = cljs.core.seq(arglist__438255);
    return __GT_dottedkw__delegate(args)
  };
  __GT_dottedkw.cljs$core$IFn$_invoke$arity$variadic = __GT_dottedkw__delegate;
  return __GT_dottedkw
}();
orchard.util.cljs.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__438265 = options;
    var map__438265__$1 = cljs.core.seq_QMARK_.call(null, map__438265) ? cljs.core.apply.call(null, cljs.core.hash_map, map__438265) : map__438265;
    var force_obj = cljs.core.get.call(null, map__438265__$1, "\ufdd0:force-obj");
    var keywordize_keys = cljs.core.get.call(null, map__438265__$1, "\ufdd0:keywordize-keys");
    var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
    var f = function(map__438265, map__438265__$1, force_obj, keywordize_keys, keyfn) {
      return function thisfn(x__$1) {
        if(cljs.core.seq_QMARK_.call(null, x__$1)) {
          return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
        }else {
          if(cljs.core.coll_QMARK_.call(null, x__$1)) {
            return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
          }else {
            if(cljs.core.truth_(goog.isArray(x__$1))) {
              return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
            }else {
              if(cljs.core.truth_(function() {
                var or__3943__auto__ = force_obj;
                if(cljs.core.truth_(or__3943__auto__)) {
                  return or__3943__auto__
                }else {
                  var or__3943__auto____$1 = cljs.core.type.call(null, x__$1) === Object;
                  if(or__3943__auto____$1) {
                    return or__3943__auto____$1
                  }else {
                    return cljs.core.type.call(null, x__$1) === global.Object
                  }
                }
              }())) {
                return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__3228__auto__ = function(map__438265, map__438265__$1, force_obj, keywordize_keys, keyfn) {
                    return function iter__438270(s__438271) {
                      return new cljs.core.LazySeq(null, false, function(map__438265, map__438265__$1, force_obj, keywordize_keys, keyfn) {
                        return function() {
                          var s__438271__$1 = s__438271;
                          while(true) {
                            var temp__4092__auto__ = cljs.core.seq.call(null, s__438271__$1);
                            if(temp__4092__auto__) {
                              var s__438271__$2 = temp__4092__auto__;
                              if(cljs.core.chunked_seq_QMARK_.call(null, s__438271__$2)) {
                                var c__3226__auto__ = cljs.core.chunk_first.call(null, s__438271__$2);
                                var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
                                var b__438273 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
                                if(function() {
                                  var i__438272 = 0;
                                  while(true) {
                                    if(i__438272 < size__3227__auto__) {
                                      var k = cljs.core._nth.call(null, c__3226__auto__, i__438272);
                                      cljs.core.chunk_append.call(null, b__438273, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true));
                                      var G__438274 = i__438272 + 1;
                                      i__438272 = G__438274;
                                      continue
                                    }else {
                                      return true
                                    }
                                    break
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__438273), iter__438270.call(null, cljs.core.chunk_rest.call(null, s__438271__$2)))
                                }else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__438273), null)
                                }
                              }else {
                                var k = cljs.core.first.call(null, s__438271__$2);
                                return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true), iter__438270.call(null, cljs.core.rest.call(null, s__438271__$2)))
                              }
                            }else {
                              return null
                            }
                            break
                          }
                        }
                      }(map__438265, map__438265__$1, force_obj, keywordize_keys, keyfn), null)
                    }
                  }(map__438265, map__438265__$1, force_obj, keywordize_keys, keyfn);
                  return iter__3228__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                }())
              }else {
                if("\ufdd0:else") {
                  return x__$1
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }(map__438265, map__438265__$1, force_obj, keywordize_keys, keyfn);
    return f.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(arguments.length > 1) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__438275) {
    var x = cljs.core.first(arglist__438275);
    var options = cljs.core.rest(arglist__438275);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
goog.provide("orchard.objects.sidebar.modules_selector");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("crate.binding");
goog.require("orchard.util.log");
goog.require("orchard.object");
orchard.objects.sidebar.modules_selector.module_item = function module_item(item) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:li.modules-content-item", item], true));
  var seq__437173_437179 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    return orchard.util.log.log.call(null, "click module ")
  }], true)));
  var chunk__437174_437180 = null;
  var count__437175_437181 = 0;
  var i__437176_437182 = 0;
  while(true) {
    if(i__437176_437182 < count__437175_437181) {
      var vec__437177_437183 = cljs.core._nth.call(null, chunk__437174_437180, i__437176_437182);
      var ev__431429__auto___437184 = cljs.core.nth.call(null, vec__437177_437183, 0, null);
      var func__431430__auto___437185 = cljs.core.nth.call(null, vec__437177_437183, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437184, func__431430__auto___437185);
      var G__437186 = seq__437173_437179;
      var G__437187 = chunk__437174_437180;
      var G__437188 = count__437175_437181;
      var G__437189 = i__437176_437182 + 1;
      seq__437173_437179 = G__437186;
      chunk__437174_437180 = G__437187;
      count__437175_437181 = G__437188;
      i__437176_437182 = G__437189;
      continue
    }else {
      var temp__4092__auto___437190 = cljs.core.seq.call(null, seq__437173_437179);
      if(temp__4092__auto___437190) {
        var seq__437173_437191__$1 = temp__4092__auto___437190;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437173_437191__$1)) {
          var c__3259__auto___437192 = cljs.core.chunk_first.call(null, seq__437173_437191__$1);
          var G__437193 = cljs.core.chunk_rest.call(null, seq__437173_437191__$1);
          var G__437194 = c__3259__auto___437192;
          var G__437195 = cljs.core.count.call(null, c__3259__auto___437192);
          var G__437196 = 0;
          seq__437173_437179 = G__437193;
          chunk__437174_437180 = G__437194;
          count__437175_437181 = G__437195;
          i__437176_437182 = G__437196;
          continue
        }else {
          var vec__437178_437197 = cljs.core.first.call(null, seq__437173_437191__$1);
          var ev__431429__auto___437198 = cljs.core.nth.call(null, vec__437178_437197, 0, null);
          var func__431430__auto___437199 = cljs.core.nth.call(null, vec__437178_437197, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437198, func__431430__auto___437199);
          var G__437200 = cljs.core.next.call(null, seq__437173_437191__$1);
          var G__437201 = null;
          var G__437202 = 0;
          var G__437203 = 0;
          seq__437173_437179 = G__437200;
          chunk__437174_437180 = G__437201;
          count__437175_437181 = G__437202;
          i__437176_437182 = G__437203;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.sidebar.modules_selector.render_modules = function render_modules(mods) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:ul.modules-content-list", function() {
    var iter__3228__auto__ = function iter__437214(s__437215) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__437215__$1 = s__437215;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__437215__$1);
          if(temp__4092__auto__) {
            var s__437215__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__437215__$2)) {
              var c__3226__auto__ = cljs.core.chunk_first.call(null, s__437215__$2);
              var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
              var b__437217 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
              if(function() {
                var i__437216 = 0;
                while(true) {
                  if(i__437216 < size__3227__auto__) {
                    var m = cljs.core._nth.call(null, c__3226__auto__, i__437216);
                    cljs.core.chunk_append.call(null, b__437217, orchard.objects.sidebar.modules_selector.module_item.call(null, m));
                    var G__437224 = i__437216 + 1;
                    i__437216 = G__437224;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__437217), iter__437214.call(null, cljs.core.chunk_rest.call(null, s__437215__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__437217), null)
              }
            }else {
              var m = cljs.core.first.call(null, s__437215__$2);
              return cljs.core.cons.call(null, orchard.objects.sidebar.modules_selector.module_item.call(null, m), iter__437214.call(null, cljs.core.rest.call(null, s__437215__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3228__auto__.call(null, mods)
  }()], true));
  var seq__437218_437225 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__437219_437226 = null;
  var count__437220_437227 = 0;
  var i__437221_437228 = 0;
  while(true) {
    if(i__437221_437228 < count__437220_437227) {
      var vec__437222_437229 = cljs.core._nth.call(null, chunk__437219_437226, i__437221_437228);
      var ev__431429__auto___437230 = cljs.core.nth.call(null, vec__437222_437229, 0, null);
      var func__431430__auto___437231 = cljs.core.nth.call(null, vec__437222_437229, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437230, func__431430__auto___437231);
      var G__437232 = seq__437218_437225;
      var G__437233 = chunk__437219_437226;
      var G__437234 = count__437220_437227;
      var G__437235 = i__437221_437228 + 1;
      seq__437218_437225 = G__437232;
      chunk__437219_437226 = G__437233;
      count__437220_437227 = G__437234;
      i__437221_437228 = G__437235;
      continue
    }else {
      var temp__4092__auto___437236 = cljs.core.seq.call(null, seq__437218_437225);
      if(temp__4092__auto___437236) {
        var seq__437218_437237__$1 = temp__4092__auto___437236;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437218_437237__$1)) {
          var c__3259__auto___437238 = cljs.core.chunk_first.call(null, seq__437218_437237__$1);
          var G__437239 = cljs.core.chunk_rest.call(null, seq__437218_437237__$1);
          var G__437240 = c__3259__auto___437238;
          var G__437241 = cljs.core.count.call(null, c__3259__auto___437238);
          var G__437242 = 0;
          seq__437218_437225 = G__437239;
          chunk__437219_437226 = G__437240;
          count__437220_437227 = G__437241;
          i__437221_437228 = G__437242;
          continue
        }else {
          var vec__437223_437243 = cljs.core.first.call(null, seq__437218_437237__$1);
          var ev__431429__auto___437244 = cljs.core.nth.call(null, vec__437223_437243, 0, null);
          var func__431430__auto___437245 = cljs.core.nth.call(null, vec__437223_437243, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437244, func__431430__auto___437245);
          var G__437246 = cljs.core.next.call(null, seq__437218_437237__$1);
          var G__437247 = null;
          var G__437248 = 0;
          var G__437249 = 0;
          seq__437218_437225 = G__437246;
          chunk__437219_437226 = G__437247;
          count__437220_437227 = G__437248;
          i__437221_437228 = G__437249;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.sidebar.modules_selector.modules_icon = function modules_icon() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:i.icon-tasks"], true));
  var seq__437256_437262 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__437257_437263 = null;
  var count__437258_437264 = 0;
  var i__437259_437265 = 0;
  while(true) {
    if(i__437259_437265 < count__437258_437264) {
      var vec__437260_437266 = cljs.core._nth.call(null, chunk__437257_437263, i__437259_437265);
      var ev__431429__auto___437267 = cljs.core.nth.call(null, vec__437260_437266, 0, null);
      var func__431430__auto___437268 = cljs.core.nth.call(null, vec__437260_437266, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437267, func__431430__auto___437268);
      var G__437269 = seq__437256_437262;
      var G__437270 = chunk__437257_437263;
      var G__437271 = count__437258_437264;
      var G__437272 = i__437259_437265 + 1;
      seq__437256_437262 = G__437269;
      chunk__437257_437263 = G__437270;
      count__437258_437264 = G__437271;
      i__437259_437265 = G__437272;
      continue
    }else {
      var temp__4092__auto___437273 = cljs.core.seq.call(null, seq__437256_437262);
      if(temp__4092__auto___437273) {
        var seq__437256_437274__$1 = temp__4092__auto___437273;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437256_437274__$1)) {
          var c__3259__auto___437275 = cljs.core.chunk_first.call(null, seq__437256_437274__$1);
          var G__437276 = cljs.core.chunk_rest.call(null, seq__437256_437274__$1);
          var G__437277 = c__3259__auto___437275;
          var G__437278 = cljs.core.count.call(null, c__3259__auto___437275);
          var G__437279 = 0;
          seq__437256_437262 = G__437276;
          chunk__437257_437263 = G__437277;
          count__437258_437264 = G__437278;
          i__437259_437265 = G__437279;
          continue
        }else {
          var vec__437261_437280 = cljs.core.first.call(null, seq__437256_437274__$1);
          var ev__431429__auto___437281 = cljs.core.nth.call(null, vec__437261_437280, 0, null);
          var func__431430__auto___437282 = cljs.core.nth.call(null, vec__437261_437280, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437281, func__431430__auto___437282);
          var G__437283 = cljs.core.next.call(null, seq__437256_437274__$1);
          var G__437284 = null;
          var G__437285 = 0;
          var G__437286 = 0;
          seq__437256_437262 = G__437283;
          chunk__437257_437263 = G__437284;
          count__437258_437264 = G__437285;
          i__437259_437265 = G__437286;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.sidebar.modules_selector.templates_item = function templates_item() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:h2.sidebar-content-title", "Templates"], true));
  var seq__437293_437299 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__437294_437300 = null;
  var count__437295_437301 = 0;
  var i__437296_437302 = 0;
  while(true) {
    if(i__437296_437302 < count__437295_437301) {
      var vec__437297_437303 = cljs.core._nth.call(null, chunk__437294_437300, i__437296_437302);
      var ev__431429__auto___437304 = cljs.core.nth.call(null, vec__437297_437303, 0, null);
      var func__431430__auto___437305 = cljs.core.nth.call(null, vec__437297_437303, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437304, func__431430__auto___437305);
      var G__437306 = seq__437293_437299;
      var G__437307 = chunk__437294_437300;
      var G__437308 = count__437295_437301;
      var G__437309 = i__437296_437302 + 1;
      seq__437293_437299 = G__437306;
      chunk__437294_437300 = G__437307;
      count__437295_437301 = G__437308;
      i__437296_437302 = G__437309;
      continue
    }else {
      var temp__4092__auto___437310 = cljs.core.seq.call(null, seq__437293_437299);
      if(temp__4092__auto___437310) {
        var seq__437293_437311__$1 = temp__4092__auto___437310;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437293_437311__$1)) {
          var c__3259__auto___437312 = cljs.core.chunk_first.call(null, seq__437293_437311__$1);
          var G__437313 = cljs.core.chunk_rest.call(null, seq__437293_437311__$1);
          var G__437314 = c__3259__auto___437312;
          var G__437315 = cljs.core.count.call(null, c__3259__auto___437312);
          var G__437316 = 0;
          seq__437293_437299 = G__437313;
          chunk__437294_437300 = G__437314;
          count__437295_437301 = G__437315;
          i__437296_437302 = G__437316;
          continue
        }else {
          var vec__437298_437317 = cljs.core.first.call(null, seq__437293_437311__$1);
          var ev__431429__auto___437318 = cljs.core.nth.call(null, vec__437298_437317, 0, null);
          var func__431430__auto___437319 = cljs.core.nth.call(null, vec__437298_437317, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437318, func__431430__auto___437319);
          var G__437320 = cljs.core.next.call(null, seq__437293_437311__$1);
          var G__437321 = null;
          var G__437322 = 0;
          var G__437323 = 0;
          seq__437293_437299 = G__437320;
          chunk__437294_437300 = G__437321;
          count__437295_437301 = G__437322;
          i__437296_437302 = G__437323;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.sidebar.modules_selector.modules_item = function modules_item() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:h2.sidebar-content-title", "Modules"], true));
  var seq__437330_437336 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__437331_437337 = null;
  var count__437332_437338 = 0;
  var i__437333_437339 = 0;
  while(true) {
    if(i__437333_437339 < count__437332_437338) {
      var vec__437334_437340 = cljs.core._nth.call(null, chunk__437331_437337, i__437333_437339);
      var ev__431429__auto___437341 = cljs.core.nth.call(null, vec__437334_437340, 0, null);
      var func__431430__auto___437342 = cljs.core.nth.call(null, vec__437334_437340, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437341, func__431430__auto___437342);
      var G__437343 = seq__437330_437336;
      var G__437344 = chunk__437331_437337;
      var G__437345 = count__437332_437338;
      var G__437346 = i__437333_437339 + 1;
      seq__437330_437336 = G__437343;
      chunk__437331_437337 = G__437344;
      count__437332_437338 = G__437345;
      i__437333_437339 = G__437346;
      continue
    }else {
      var temp__4092__auto___437347 = cljs.core.seq.call(null, seq__437330_437336);
      if(temp__4092__auto___437347) {
        var seq__437330_437348__$1 = temp__4092__auto___437347;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437330_437348__$1)) {
          var c__3259__auto___437349 = cljs.core.chunk_first.call(null, seq__437330_437348__$1);
          var G__437350 = cljs.core.chunk_rest.call(null, seq__437330_437348__$1);
          var G__437351 = c__3259__auto___437349;
          var G__437352 = cljs.core.count.call(null, c__3259__auto___437349);
          var G__437353 = 0;
          seq__437330_437336 = G__437350;
          chunk__437331_437337 = G__437351;
          count__437332_437338 = G__437352;
          i__437333_437339 = G__437353;
          continue
        }else {
          var vec__437335_437354 = cljs.core.first.call(null, seq__437330_437348__$1);
          var ev__431429__auto___437355 = cljs.core.nth.call(null, vec__437335_437354, 0, null);
          var func__431430__auto___437356 = cljs.core.nth.call(null, vec__437335_437354, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437355, func__431430__auto___437356);
          var G__437357 = cljs.core.next.call(null, seq__437330_437348__$1);
          var G__437358 = null;
          var G__437359 = 0;
          var G__437360 = 0;
          seq__437330_437336 = G__437357;
          chunk__437331_437337 = G__437358;
          count__437332_437338 = G__437359;
          i__437333_437339 = G__437360;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.sidebar.modules_selector.elements_item = function elements_item() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:h2.sidebar-content-title", "Elements"], true));
  var seq__437367_437373 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__437368_437374 = null;
  var count__437369_437375 = 0;
  var i__437370_437376 = 0;
  while(true) {
    if(i__437370_437376 < count__437369_437375) {
      var vec__437371_437377 = cljs.core._nth.call(null, chunk__437368_437374, i__437370_437376);
      var ev__431429__auto___437378 = cljs.core.nth.call(null, vec__437371_437377, 0, null);
      var func__431430__auto___437379 = cljs.core.nth.call(null, vec__437371_437377, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437378, func__431430__auto___437379);
      var G__437380 = seq__437367_437373;
      var G__437381 = chunk__437368_437374;
      var G__437382 = count__437369_437375;
      var G__437383 = i__437370_437376 + 1;
      seq__437367_437373 = G__437380;
      chunk__437368_437374 = G__437381;
      count__437369_437375 = G__437382;
      i__437370_437376 = G__437383;
      continue
    }else {
      var temp__4092__auto___437384 = cljs.core.seq.call(null, seq__437367_437373);
      if(temp__4092__auto___437384) {
        var seq__437367_437385__$1 = temp__4092__auto___437384;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437367_437385__$1)) {
          var c__3259__auto___437386 = cljs.core.chunk_first.call(null, seq__437367_437385__$1);
          var G__437387 = cljs.core.chunk_rest.call(null, seq__437367_437385__$1);
          var G__437388 = c__3259__auto___437386;
          var G__437389 = cljs.core.count.call(null, c__3259__auto___437386);
          var G__437390 = 0;
          seq__437367_437373 = G__437387;
          chunk__437368_437374 = G__437388;
          count__437369_437375 = G__437389;
          i__437370_437376 = G__437390;
          continue
        }else {
          var vec__437372_437391 = cljs.core.first.call(null, seq__437367_437385__$1);
          var ev__431429__auto___437392 = cljs.core.nth.call(null, vec__437372_437391, 0, null);
          var func__431430__auto___437393 = cljs.core.nth.call(null, vec__437372_437391, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437392, func__431430__auto___437393);
          var G__437394 = cljs.core.next.call(null, seq__437367_437385__$1);
          var G__437395 = null;
          var G__437396 = 0;
          var G__437397 = 0;
          seq__437367_437373 = G__437394;
          chunk__437368_437374 = G__437395;
          count__437369_437375 = G__437396;
          i__437370_437376 = G__437397;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.sidebar.modules_selector.add_item = function add_item(this$, item) {
  return orchard.object.update_BANG_.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:items"], true), cljs.core.conj, item)
};
orchard.object.object_STAR_.call(null, "\ufdd0:orchard.objects.sidebar.modules-selector/sidebar.modules", "\ufdd0:triggers", cljs.core.PersistentHashSet.EMPTY, "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.sidebar.modules-selector/toggle"], true), "\ufdd0:label", "modules", "\ufdd0:items", cljs.core.PersistentVector.EMPTY, "\ufdd0:icon", orchard.objects.sidebar.modules_selector.modules_icon.call(null), "\ufdd0:init", function(this$) {
  var seq__437398_437402 = cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([orchard.objects.sidebar.modules_selector.templates_item.call(null), orchard.objects.sidebar.modules_selector.modules_item.call(null), orchard.objects.sidebar.modules_selector.elements_item.call(null)], true));
  var chunk__437399_437403 = null;
  var count__437400_437404 = 0;
  var i__437401_437405 = 0;
  while(true) {
    if(i__437401_437405 < count__437400_437404) {
      var item_437406 = cljs.core._nth.call(null, chunk__437399_437403, i__437401_437405);
      orchard.objects.sidebar.modules_selector.add_item.call(null, this$, item_437406);
      var G__437407 = seq__437398_437402;
      var G__437408 = chunk__437399_437403;
      var G__437409 = count__437400_437404;
      var G__437410 = i__437401_437405 + 1;
      seq__437398_437402 = G__437407;
      chunk__437399_437403 = G__437408;
      count__437400_437404 = G__437409;
      i__437401_437405 = G__437410;
      continue
    }else {
      var temp__4092__auto___437411 = cljs.core.seq.call(null, seq__437398_437402);
      if(temp__4092__auto___437411) {
        var seq__437398_437412__$1 = temp__4092__auto___437411;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437398_437412__$1)) {
          var c__3259__auto___437413 = cljs.core.chunk_first.call(null, seq__437398_437412__$1);
          var G__437414 = cljs.core.chunk_rest.call(null, seq__437398_437412__$1);
          var G__437415 = c__3259__auto___437413;
          var G__437416 = cljs.core.count.call(null, c__3259__auto___437413);
          var G__437417 = 0;
          seq__437398_437402 = G__437414;
          chunk__437399_437403 = G__437415;
          count__437400_437404 = G__437416;
          i__437401_437405 = G__437417;
          continue
        }else {
          var item_437418 = cljs.core.first.call(null, seq__437398_437412__$1);
          orchard.objects.sidebar.modules_selector.add_item.call(null, this$, item_437418);
          var G__437419 = cljs.core.next.call(null, seq__437398_437412__$1);
          var G__437420 = null;
          var G__437421 = 0;
          var G__437422 = 0;
          seq__437398_437402 = G__437419;
          chunk__437399_437403 = G__437420;
          count__437400_437404 = G__437421;
          i__437401_437405 = G__437422;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div.modules-content", crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:items"], true)), orchard.objects.sidebar.modules_selector.render_modules)], true)
});
orchard.objects.sidebar.modules_selector.sidebar_modules = orchard.object.create.call(null, "\ufdd0:orchard.objects.sidebar.modules-selector/sidebar.modules");
goog.provide("orchard.objects.animations");
goog.require("cljs.core");
goog.require("orchard.util.dom");
goog.require("orchard.object");
orchard.objects.animations.$body = orchard.util.dom.$.call(null, "\ufdd0:body");
orchard.objects.animations.on = function on() {
  return orchard.util.dom.add_class.call(null, orchard.objects.animations.$body, "\ufdd0:animated")
};
orchard.objects.animations.off = function off() {
  return orchard.util.dom.remove_class.call(null, orchard.objects.animations.$body, "\ufdd0:animated")
};
orchard.objects.animations.on_QMARK_ = function on_QMARK_() {
  return orchard.util.dom.has_class_QMARK_.call(null, orchard.objects.animations.$body, "\ufdd0:animated")
};
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.animations/animate-on-init", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:init", null], true), "\ufdd0:reaction", function(app) {
  return orchard.objects.animations.on.call(null)
});
orchard.object.tag_behaviors.call(null, "\ufdd0:app", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.animations/animate-on-init"], true));
goog.provide("orchard.objects.sidebar");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.util.log");
goog.require("orchard.objects.sidebar.modules_selector");
goog.require("crate.binding");
goog.require("orchard.objects.sidebar.projects_selector");
goog.require("orchard.objects.animations");
goog.require("crate.binding");
goog.require("crate.core");
goog.require("orchard.objects.sidebar.projects_selector");
goog.require("orchard.objects.sidebar.modules_selector");
goog.require("orchard.util.core");
goog.require("orchard.util.dom");
goog.require("orchard.util.log");
goog.require("orchard.object");
orchard.objects.sidebar.DEFAULT_MAX_WIDTH = 120;
orchard.objects.sidebar.BLOCK_SIZE = 30;
orchard.objects.sidebar.set_left = function set_left(left) {
  return[cljs.core.str(function() {
    var or__3943__auto__ = left;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return 0
    }
  }()), cljs.core.str("px")].join("")
};
orchard.objects.sidebar.set_width = function set_width(width) {
  return[cljs.core.str(function() {
    var or__3943__auto__ = width;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return 0
    }
  }()), cljs.core.str("px")].join("")
};
orchard.objects.sidebar.grip = function grip(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.vertical-grip", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:draggable", "true", "\ufdd0:style", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:left", crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:width"), orchard.objects.sidebar.set_left)], true)], true)], true));
  var seq__437561_437567 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:dragstart", function(e) {
    return orchard.object.raise.call(null, this$, "\ufdd0:start-drag")
  }, "\ufdd0:dragend", function(e) {
    return orchard.object.raise.call(null, this$, "\ufdd0:end-drag")
  }, "\ufdd0:drag", function(e) {
    return orchard.object.raise.call(null, this$, "\ufdd0:width!", e)
  }], true)));
  var chunk__437562_437568 = null;
  var count__437563_437569 = 0;
  var i__437564_437570 = 0;
  while(true) {
    if(i__437564_437570 < count__437563_437569) {
      var vec__437565_437571 = cljs.core._nth.call(null, chunk__437562_437568, i__437564_437570);
      var ev__431429__auto___437572 = cljs.core.nth.call(null, vec__437565_437571, 0, null);
      var func__431430__auto___437573 = cljs.core.nth.call(null, vec__437565_437571, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437572, func__431430__auto___437573);
      var G__437574 = seq__437561_437567;
      var G__437575 = chunk__437562_437568;
      var G__437576 = count__437563_437569;
      var G__437577 = i__437564_437570 + 1;
      seq__437561_437567 = G__437574;
      chunk__437562_437568 = G__437575;
      count__437563_437569 = G__437576;
      i__437564_437570 = G__437577;
      continue
    }else {
      var temp__4092__auto___437578 = cljs.core.seq.call(null, seq__437561_437567);
      if(temp__4092__auto___437578) {
        var seq__437561_437579__$1 = temp__4092__auto___437578;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437561_437579__$1)) {
          var c__3259__auto___437580 = cljs.core.chunk_first.call(null, seq__437561_437579__$1);
          var G__437581 = cljs.core.chunk_rest.call(null, seq__437561_437579__$1);
          var G__437582 = c__3259__auto___437580;
          var G__437583 = cljs.core.count.call(null, c__3259__auto___437580);
          var G__437584 = 0;
          seq__437561_437567 = G__437581;
          chunk__437562_437568 = G__437582;
          count__437563_437569 = G__437583;
          i__437564_437570 = G__437584;
          continue
        }else {
          var vec__437566_437585 = cljs.core.first.call(null, seq__437561_437579__$1);
          var ev__431429__auto___437586 = cljs.core.nth.call(null, vec__437566_437585, 0, null);
          var func__431430__auto___437587 = cljs.core.nth.call(null, vec__437566_437585, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437586, func__431430__auto___437587);
          var G__437588 = cljs.core.next.call(null, seq__437561_437579__$1);
          var G__437589 = null;
          var G__437590 = 0;
          var G__437591 = 0;
          seq__437561_437567 = G__437588;
          chunk__437562_437568 = G__437589;
          count__437563_437569 = G__437590;
          i__437564_437570 = G__437591;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.sidebar.sidebar_item = function sidebar_item(this$, item) {
  var e__431428__auto__ = crate.core.html.call(null, function() {
    var map__437599 = cljs.core.deref.call(null, item);
    var map__437599__$1 = cljs.core.seq_QMARK_.call(null, map__437599) ? cljs.core.apply.call(null, cljs.core.hash_map, map__437599) : map__437599;
    var label = cljs.core.get.call(null, map__437599__$1, "\ufdd0:label");
    var icon = cljs.core.get.call(null, map__437599__$1, "\ufdd0:icon");
    return cljs.core.PersistentVector.fromArray(["\ufdd0:li.sidebar-tab-item.block-btn", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:data-toggle", "tooltip", "\ufdd0:data-placement", "right", "\ufdd0:title", label, "\ufdd0:class", crate.binding.bound.call(null, this$, function(map__437599, map__437599__$1, label, icon) {
      return function(p1__437554_SHARP_) {
        if(cljs.core._EQ_.call(null, item, (new cljs.core.Keyword("\ufdd0:active")).call(null, p1__437554_SHARP_))) {
          return"sidebar-tab-item block-btn current"
        }else {
          return"sidebar-tab-item block-btn"
        }
      }
    }(map__437599, map__437599__$1, label, icon))], true), icon], true)
  }());
  var seq__437600_437606 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    orchard.object.raise.call(null, this$, "\ufdd0:toggle", item);
    return orchard.object.raise.call(null, item, "\ufdd0:toggle", e)
  }], true)));
  var chunk__437601_437607 = null;
  var count__437602_437608 = 0;
  var i__437603_437609 = 0;
  while(true) {
    if(i__437603_437609 < count__437602_437608) {
      var vec__437604_437610 = cljs.core._nth.call(null, chunk__437601_437607, i__437603_437609);
      var ev__431429__auto___437611 = cljs.core.nth.call(null, vec__437604_437610, 0, null);
      var func__431430__auto___437612 = cljs.core.nth.call(null, vec__437604_437610, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437611, func__431430__auto___437612);
      var G__437613 = seq__437600_437606;
      var G__437614 = chunk__437601_437607;
      var G__437615 = count__437602_437608;
      var G__437616 = i__437603_437609 + 1;
      seq__437600_437606 = G__437613;
      chunk__437601_437607 = G__437614;
      count__437602_437608 = G__437615;
      i__437603_437609 = G__437616;
      continue
    }else {
      var temp__4092__auto___437617 = cljs.core.seq.call(null, seq__437600_437606);
      if(temp__4092__auto___437617) {
        var seq__437600_437618__$1 = temp__4092__auto___437617;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437600_437618__$1)) {
          var c__3259__auto___437619 = cljs.core.chunk_first.call(null, seq__437600_437618__$1);
          var G__437620 = cljs.core.chunk_rest.call(null, seq__437600_437618__$1);
          var G__437621 = c__3259__auto___437619;
          var G__437622 = cljs.core.count.call(null, c__3259__auto___437619);
          var G__437623 = 0;
          seq__437600_437606 = G__437620;
          chunk__437601_437607 = G__437621;
          count__437602_437608 = G__437622;
          i__437603_437609 = G__437623;
          continue
        }else {
          var vec__437605_437624 = cljs.core.first.call(null, seq__437600_437618__$1);
          var ev__431429__auto___437625 = cljs.core.nth.call(null, vec__437605_437624, 0, null);
          var func__431430__auto___437626 = cljs.core.nth.call(null, vec__437605_437624, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437625, func__431430__auto___437626);
          var G__437627 = cljs.core.next.call(null, seq__437600_437618__$1);
          var G__437628 = null;
          var G__437629 = 0;
          var G__437630 = 0;
          seq__437600_437606 = G__437627;
          chunk__437601_437607 = G__437628;
          count__437602_437608 = G__437629;
          i__437603_437609 = G__437630;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.sidebar.sidebar_tabs = function sidebar_tabs(this$, tabs) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:ul#sidebar-tabs", function() {
    var iter__3228__auto__ = function iter__437645(s__437646) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__437646__$1 = s__437646;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__437646__$1);
          if(temp__4092__auto__) {
            var s__437646__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__437646__$2)) {
              var c__3226__auto__ = cljs.core.chunk_first.call(null, s__437646__$2);
              var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
              var b__437648 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
              if(function() {
                var i__437647 = 0;
                while(true) {
                  if(i__437647 < size__3227__auto__) {
                    var vec__437651 = cljs.core._nth.call(null, c__3226__auto__, i__437647);
                    var _ = cljs.core.nth.call(null, vec__437651, 0, null);
                    var t = cljs.core.nth.call(null, vec__437651, 1, null);
                    cljs.core.chunk_append.call(null, b__437648, orchard.objects.sidebar.sidebar_item.call(null, this$, t));
                    var G__437659 = i__437647 + 1;
                    i__437647 = G__437659;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__437648), iter__437645.call(null, cljs.core.chunk_rest.call(null, s__437646__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__437648), null)
              }
            }else {
              var vec__437652 = cljs.core.first.call(null, s__437646__$2);
              var _ = cljs.core.nth.call(null, vec__437652, 0, null);
              var t = cljs.core.nth.call(null, vec__437652, 1, null);
              return cljs.core.cons.call(null, orchard.objects.sidebar.sidebar_item.call(null, this$, t), iter__437645.call(null, cljs.core.rest.call(null, s__437646__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3228__auto__.call(null, tabs)
  }()], true));
  var seq__437653_437660 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__437654_437661 = null;
  var count__437655_437662 = 0;
  var i__437656_437663 = 0;
  while(true) {
    if(i__437656_437663 < count__437655_437662) {
      var vec__437657_437664 = cljs.core._nth.call(null, chunk__437654_437661, i__437656_437663);
      var ev__431429__auto___437665 = cljs.core.nth.call(null, vec__437657_437664, 0, null);
      var func__431430__auto___437666 = cljs.core.nth.call(null, vec__437657_437664, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437665, func__431430__auto___437666);
      var G__437667 = seq__437653_437660;
      var G__437668 = chunk__437654_437661;
      var G__437669 = count__437655_437662;
      var G__437670 = i__437656_437663 + 1;
      seq__437653_437660 = G__437667;
      chunk__437654_437661 = G__437668;
      count__437655_437662 = G__437669;
      i__437656_437663 = G__437670;
      continue
    }else {
      var temp__4092__auto___437671 = cljs.core.seq.call(null, seq__437653_437660);
      if(temp__4092__auto___437671) {
        var seq__437653_437672__$1 = temp__4092__auto___437671;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437653_437672__$1)) {
          var c__3259__auto___437673 = cljs.core.chunk_first.call(null, seq__437653_437672__$1);
          var G__437674 = cljs.core.chunk_rest.call(null, seq__437653_437672__$1);
          var G__437675 = c__3259__auto___437673;
          var G__437676 = cljs.core.count.call(null, c__3259__auto___437673);
          var G__437677 = 0;
          seq__437653_437660 = G__437674;
          chunk__437654_437661 = G__437675;
          count__437655_437662 = G__437676;
          i__437656_437663 = G__437677;
          continue
        }else {
          var vec__437658_437678 = cljs.core.first.call(null, seq__437653_437672__$1);
          var ev__431429__auto___437679 = cljs.core.nth.call(null, vec__437658_437678, 0, null);
          var func__431430__auto___437680 = cljs.core.nth.call(null, vec__437658_437678, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437679, func__431430__auto___437680);
          var G__437681 = cljs.core.next.call(null, seq__437653_437672__$1);
          var G__437682 = null;
          var G__437683 = 0;
          var G__437684 = 0;
          seq__437653_437660 = G__437681;
          chunk__437654_437661 = G__437682;
          count__437655_437662 = G__437683;
          i__437656_437663 = G__437684;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.sidebar.active_content = function active_content(active) {
  if(cljs.core.truth_(active)) {
    return(new cljs.core.Keyword("\ufdd0:content")).call(null, cljs.core.deref.call(null, active))
  }else {
    return null
  }
};
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.sidebar/no-anim-on-drag", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:start-drag", null], true), "\ufdd0:reaction", function(this$) {
  return orchard.objects.animations.off.call(null)
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.sidebar/reanim-on-drop", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:end-drag", null], true), "\ufdd0:reaction", function(this$) {
  return orchard.objects.animations.on.call(null)
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.sidebar/width!", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:width!", null], true), "\ufdd0:throttle", 5, "\ufdd0:reaction", function(this$, e) {
  if(cljs.core._EQ_.call(null, 0, e.clientX)) {
    return null
  }else {
    return orchard.object.merge_BANG_.call(null, this$, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:width", e.clientX - 40, "\ufdd0:max-width", e.clientX - 40], true))
  }
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.sidebar/toggle", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:toggle", null], true), "\ufdd0:reaction", function(this$, item) {
  if(cljs.core.not_EQ_.call(null, item, (new cljs.core.Keyword("\ufdd0:active")).call(null, cljs.core.deref.call(null, this$)))) {
    orchard.objects.animations.on.call(null);
    orchard.object.merge_BANG_.call(null, this$, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:active", item, "\ufdd0:prev", (new cljs.core.Keyword("\ufdd0:active")).call(null, cljs.core.deref.call(null, this$))], true));
    return orchard.object.raise.call(null, this$, "\ufdd0:open!")
  }else {
    return orchard.object.raise.call(null, this$, "\ufdd0:close!")
  }
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.sidebar/open!", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:open!", null], true), "\ufdd0:reaction", function(this$) {
  orchard.object.merge_BANG_.call(null, this$, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:width", (new cljs.core.Keyword("\ufdd0:max-width")).call(null, cljs.core.deref.call(null, this$))], true));
  return orchard.object.merge_BANG_.call(null, (new cljs.core.Keyword("\ufdd0:wiki-page")).call(null, cljs.core.deref.call(null, orchard.objects.workspace.workspace)), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:left", 30 + (new cljs.core.Keyword("\ufdd0:max-width")).call(null, cljs.core.deref.call(null, this$))], true))
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.sidebar/close!", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:close!", null], true), "\ufdd0:reaction", function(this$) {
  orchard.object.merge_BANG_.call(null, (new cljs.core.Keyword("\ufdd0:wiki-page")).call(null, cljs.core.deref.call(null, orchard.objects.workspace.workspace)), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:left", 30], true));
  return orchard.object.merge_BANG_.call(null, this$, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:active", null, "\ufdd0:width", 0], true))
});
orchard.object.object_STAR_.call(null, "\ufdd0:orchard.objects.sidebar/sidebar", "\ufdd0:tags", cljs.core.PersistentHashSet.EMPTY, "\ufdd0:triggers", cljs.core.PersistentVector.fromArray(["\ufdd0:start-drag", "\ufdd0:end-drag", "\ufdd0:width!", "\ufdd0:toggle", "\ufdd0:open!", "\ufdd0:close!"], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.sidebar/no-anim-on-drag", "\ufdd0:orchard.objects.sidebar/reanim-on-drop", "\ufdd0:orchard.objects.sidebar/width!", 
"\ufdd0:orchard.objects.sidebar/toggle", "\ufdd0:orchard.objects.sidebar/open!", "\ufdd0:orchard.objects.sidebar/close!"], true), "\ufdd0:max-width", orchard.objects.sidebar.DEFAULT_MAX_WIDTH, "\ufdd0:init", function(this$) {
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div#sidebar", cljs.core.PersistentVector.fromArray(["\ufdd0:div#sidebar-wrapper", crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:items"], true)), cljs.core.partial.call(null, orchard.objects.sidebar.sidebar_tabs, this$))], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div#sidebar-conent-wrapper", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:style", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:width", 
  crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:width"), orchard.objects.sidebar.set_width), "\ufdd0:left", "30px", "\ufdd0:top", "30px", "\ufdd0:position", "relative"], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.sidebar-content", crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:active"), orchard.objects.sidebar.active_content)], true), orchard.objects.sidebar.grip.call(null, this$)], true)], true)
});
orchard.objects.sidebar.sidebar = orchard.object.create.call(null, "\ufdd0:orchard.objects.sidebar/sidebar");
orchard.objects.sidebar.add_item = function add_item(item) {
  orchard.util.log.log.call(null, "Add side bar item", (new cljs.core.Keyword("\ufdd0:label")).call(null, cljs.core.deref.call(null, item)));
  return orchard.object.update_BANG_.call(null, orchard.objects.sidebar.sidebar, cljs.core.PersistentVector.fromArray(["\ufdd0:items"], true), cljs.core.assoc, (new cljs.core.Keyword("\ufdd0:order")).call(null, cljs.core.deref.call(null, item)), item)
};
orchard.objects.sidebar.init = function init() {
  return orchard.object.update_BANG_.call(null, orchard.objects.sidebar.sidebar, cljs.core.PersistentVector.fromArray(["\ufdd0:items"], true), cljs.core.assoc, 0, orchard.objects.sidebar.projects_selector.sidebar_projects, 1, orchard.objects.sidebar.modules_selector.sidebar_modules)
};
goog.provide("orchard.objects.workspace");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.util.log");
goog.require("orchard.util.cljs");
goog.require("crate.binding");
goog.require("crate.binding");
goog.require("orchard.util.cljs");
goog.require("orchard.util.log");
goog.require("orchard.util.dom");
goog.require("orchard.util.core");
goog.require("orchard.dispatch");
goog.require("orchard.objects.sidebar");
goog.require("orchard.object");
orchard.objects.workspace.default_width = 950;
orchard.objects.workspace.render_document = function render_document(this$, doc) {
  var e__431428__auto__ = crate.core.html.call(null, orchard.object.__GT_content.call(null, doc));
  var seq__437998_438004 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__437999_438005 = null;
  var count__438000_438006 = 0;
  var i__438001_438007 = 0;
  while(true) {
    if(i__438001_438007 < count__438000_438006) {
      var vec__438002_438008 = cljs.core._nth.call(null, chunk__437999_438005, i__438001_438007);
      var ev__431429__auto___438009 = cljs.core.nth.call(null, vec__438002_438008, 0, null);
      var func__431430__auto___438010 = cljs.core.nth.call(null, vec__438002_438008, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___438009, func__431430__auto___438010);
      var G__438011 = seq__437998_438004;
      var G__438012 = chunk__437999_438005;
      var G__438013 = count__438000_438006;
      var G__438014 = i__438001_438007 + 1;
      seq__437998_438004 = G__438011;
      chunk__437999_438005 = G__438012;
      count__438000_438006 = G__438013;
      i__438001_438007 = G__438014;
      continue
    }else {
      var temp__4092__auto___438015 = cljs.core.seq.call(null, seq__437998_438004);
      if(temp__4092__auto___438015) {
        var seq__437998_438016__$1 = temp__4092__auto___438015;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437998_438016__$1)) {
          var c__3259__auto___438017 = cljs.core.chunk_first.call(null, seq__437998_438016__$1);
          var G__438018 = cljs.core.chunk_rest.call(null, seq__437998_438016__$1);
          var G__438019 = c__3259__auto___438017;
          var G__438020 = cljs.core.count.call(null, c__3259__auto___438017);
          var G__438021 = 0;
          seq__437998_438004 = G__438018;
          chunk__437999_438005 = G__438019;
          count__438000_438006 = G__438020;
          i__438001_438007 = G__438021;
          continue
        }else {
          var vec__438003_438022 = cljs.core.first.call(null, seq__437998_438016__$1);
          var ev__431429__auto___438023 = cljs.core.nth.call(null, vec__438003_438022, 0, null);
          var func__431430__auto___438024 = cljs.core.nth.call(null, vec__438003_438022, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___438023, func__431430__auto___438024);
          var G__438025 = cljs.core.next.call(null, seq__437998_438016__$1);
          var G__438026 = null;
          var G__438027 = 0;
          var G__438028 = 0;
          seq__437998_438004 = G__438025;
          chunk__437999_438005 = G__438026;
          count__438000_438006 = G__438027;
          i__438001_438007 = G__438028;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.workspace/add-sidebar", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:add-sidebar", null], true), "\ufdd0:reaction", function(this$, sidebar) {
  return orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:sidebar", sidebar)
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.workspace/show-page", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:show-page", null], true), "\ufdd0:reaction", function(this$, obj) {
  orchard.dispatch.fire.call(null, "\ufdd0:page-loading", obj);
  var workspace$ = orchard.util.dom.$.call(null, "#workspace");
  var active = (new cljs.core.Keyword("\ufdd0:wiki-page")).call(null, cljs.core.deref.call(null, this$));
  orchard.objects.modules.tiny_mce.clear_editors_BANG_.call(null);
  if(cljs.core.truth_(active)) {
    orchard.util.dom.remove.call(null, (new cljs.core.Keyword("\ufdd0:content")).call(null, cljs.core.deref.call(null, active)))
  }else {
  }
  orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:wiki-page", obj, "\ufdd0:current-project", function() {
    var or__3943__auto__ = (new cljs.core.Keyword("\ufdd0:project")).call(null, cljs.core.deref.call(null, obj));
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return"No Project"
    }
  }());
  orchard.object.raise.call(null, obj, "\ufdd0:ready");
  return orchard.dispatch.fire.call(null, "\ufdd0:page-loaded", obj)
});
orchard.objects.workspace.active_content = function active_content(active) {
  if(cljs.core.truth_(active)) {
    return orchard.object.__GT_content.call(null, active)
  }else {
    return null
  }
};
orchard.objects.workspace.__GT_width = function __GT_width(width) {
  return[cljs.core.str(function() {
    var or__3943__auto__ = width;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return 0
    }
  }()), cljs.core.str("px")].join("")
};
orchard.objects.workspace.render_wiki_page = function render_wiki_page(wiki_page) {
  if(cljs.core.truth_(wiki_page)) {
    return(new cljs.core.Keyword("\ufdd0:content")).call(null, cljs.core.deref.call(null, wiki_page))
  }else {
    return null
  }
};
orchard.objects.workspace.render_sidebar = function render_sidebar(sidebar) {
  if(cljs.core.truth_(sidebar)) {
    return(new cljs.core.Keyword("\ufdd0:content")).call(null, cljs.core.deref.call(null, sidebar))
  }else {
    return null
  }
};
orchard.objects.workspace.left_offset = function left_offset(offset) {
  [cljs.core.str(function() {
    var or__3943__auto__ = offset;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return 0
    }
  }())].join("");
  return"px"
};
orchard.object.object_STAR_.call(null, "\ufdd0:orchard.objects.workspace/workspace", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:show-page", null, "\ufdd0:add-sidebar", null], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.workspace/show-page", "\ufdd0:orchard.objects.workspace/add-sidebar"], true), "\ufdd0:width", 0, "\ufdd0:sidebar", orchard.objects.sidebar.sidebar, "\ufdd0:transients", cljs.core.List.EMPTY, "\ufdd0:max-width", orchard.objects.workspace.default_width, 
"\ufdd0:init", function(this$) {
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div#workspace", cljs.core.PersistentVector.fromArray(["\ufdd0:div.document-container", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:style", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:left", crate.binding.bound.call(null, crate.binding.subatom.call(null, orchard.objects.sidebar.sidebar, "\ufdd0:width"), orchard.objects.workspace.left_offset)], true)], true), crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:wiki-page"), 
  orchard.objects.workspace.render_wiki_page)], true)], true)
});
orchard.objects.workspace.workspace = orchard.object.create.call(null, "\ufdd0:orchard.objects.workspace/workspace");
orchard.util.dom.append.call(null, orchard.util.dom.$.call(null, "\ufdd0:#container"), (new cljs.core.Keyword("\ufdd0:content")).call(null, cljs.core.deref.call(null, orchard.objects.workspace.workspace)));
goog.provide("orchard.util.aloha");
goog.require("cljs.core");
orchard.util.aloha.aloha = function aloha(elem) {
  return $(elem).aloha()
};
orchard.util.aloha.$aloha = function $aloha(sel) {
  return orchard.util.aloha.aloha.call(null, sel)
};
orchard.util.aloha.mahalo = function mahalo(elem) {
  return $(elem).mahalo()
};
orchard.util.aloha.$mahalo = function $mahalo(sel) {
  return orchard.util.aloha.mahalo.call(null, sel)
};
goog.provide("orchard.objects.modules.aloha");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.observe");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("orchard.module");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("crate.core");
goog.require("orchard.model");
goog.require("orchard.util.core");
goog.require("orchard.util.dom");
goog.require("orchard.observe");
goog.require("crate.binding");
goog.require("orchard.object");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("orchard.module");
goog.require("orchard.util.aloha");
orchard.objects.modules.aloha.aloha_doc = function aloha_doc(db) {
  var id = orchard.util.core.uuid.call(null);
  return orchard.model.save_object_BANG_.call(null, db, id, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "\ufdd0:aloha-module", "\ufdd0:text", "", "\ufdd0:id", id], true))
};
orchard.objects.modules.aloha.date = new Date;
orchard.objects.modules.aloha.get_time = function get_time() {
  return orchard.objects.modules.aloha.date.getTime()
};
orchard.objects.modules.aloha.hiccup__GT_str = function hiccup__GT_str(form) {
  return crate.core.html.call(null, form).outerHTML
};
orchard.objects.modules.aloha.render_orchard_link = function render_orchard_link(tag, link) {
  return[cljs.core.str(" "), cljs.core.str(orchard.objects.modules.aloha.hiccup__GT_str.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:span.orchard-link", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:data-href", link, "\ufdd0:data-title", tag, "\ufdd0:style", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:background-color", "rgb(241, 241, 241)", "\ufdd0:padding-bottom", "3px", "\ufdd0:padding-top", "2px", "\ufdd0:padding-left", "5px", "\ufdd0:padding-right", "5px", "\ufdd0:color", "green", 
  "\ufdd0:border-radius", "4px"], true)], true), tag], true))), cljs.core.str(" ")].join("")
};
orchard.objects.modules.aloha.link_regex = /\[([^\]]+)\]\(([^)]+)\)/;
orchard.objects.modules.aloha.replace_orchard_links = function replace_orchard_links(s) {
  return clojure.string.replace.call(null, s, orchard.objects.modules.aloha.link_regex, function(m) {
    var vec__536011 = cljs.core.re_find.call(null, orchard.objects.modules.aloha.link_regex, m);
    var res = cljs.core.nth.call(null, vec__536011, 0, null);
    var tag = cljs.core.nth.call(null, vec__536011, 1, null);
    var link = cljs.core.nth.call(null, vec__536011, 2, null);
    return orchard.objects.modules.aloha.render_orchard_link.call(null, tag, link)
  })
};
orchard.objects.modules.aloha.MAX_SAVE_DIFF = 1E4;
orchard.objects.modules.aloha.MAX_CHANGE_DIFF = 5;
orchard.objects.modules.aloha.save_QMARK_ = function save_QMARK_(this$) {
  var time_diff = cljs.core.get_in.call(null, cljs.core.deref.call(null, this$), cljs.core.PersistentVector.fromArray(["\ufdd0:save-data", "\ufdd0:last-save"], true)) - orchard.objects.modules.aloha.get_time.call(null);
  var press_diff = cljs.core.get_in.call(null, orchard.object.update_BANG_.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:save-data", "\ufdd0:change-count"], true), cljs.core.inc), cljs.core.PersistentVector.fromArray(["\ufdd0:save-data", "\ufdd0:change-count"], true));
  var s_QMARK_ = function() {
    var or__3943__auto__ = time_diff > orchard.objects.modules.aloha.MAX_SAVE_DIFF;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return press_diff > orchard.objects.modules.aloha.MAX_CHANGE_DIFF
    }
  }();
  if(cljs.core.truth_(s_QMARK_)) {
    orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:save-data", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:last-save", orchard.objects.modules.aloha.get_time.call(null), "\ufdd0:change-count", 0], true));
    return true
  }else {
    return false
  }
};
orchard.objects.modules.aloha.create_module = function create_module(app) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_536029) {
        var state_val_536030 = state_536029[1];
        if(state_val_536030 === 2) {
          var inst_536026 = state_536029[2];
          var inst_536027 = orchard.object.create.call(null, "\ufdd0:aloha-module", inst_536026);
          var state_536029__$1 = state_536029;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_536029__$1, inst_536027)
        }else {
          if(state_val_536030 === 1) {
            var inst_536023 = (new cljs.core.Keyword("\ufdd0:db")).call(null, app);
            var inst_536024 = orchard.objects.modules.aloha.aloha_doc.call(null, inst_536023);
            var state_536029__$1 = state_536029;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_536029__$1, 2, inst_536024)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_536032 = new Array(5);
            statearr_536032[0] = state_machine__4793__auto__;
            statearr_536032[1] = 1;
            return statearr_536032
          };
          var state_machine__4793__auto____1 = function(state_536029) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_536029);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_536029) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_536029)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_536033 = f__4865__auto__.call(null);
      statearr_536033[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_536033
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.objects.modules.aloha.single_col = cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-content.aloha-module-content", cljs.core.PersistentVector.fromArray(["\ufdd0:div.span12", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "aloha-editable"], true)], true)], true);
orchard.objects.modules.aloha.two_col = cljs.core.PersistentVector.fromArray(["\ufdd0:div.row.module-content.aloha-module-content", cljs.core.PersistentVector.fromArray(["\ufdd0:div.span6", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "aloha-editable"], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.span6", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "aloha-editable"], true)], true)], true);
orchard.objects.modules.aloha.three_col = cljs.core.PersistentVector.fromArray(["\ufdd0:div.row.module-content.aloha-module-content", cljs.core.PersistentVector.fromArray(["\ufdd0:div.span4", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "aloha-editable"], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.span4", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "aloha-editable"], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.span4", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", 
"aloha-editable"], true)], true)], true);
orchard.objects.modules.aloha.render_aloha = function render_aloha(this$) {
  return crate.core.html.call(null, orchard.objects.modules.aloha.single_col)
};
orchard.objects.modules.aloha.icon = cljs.core.PersistentVector.fromArray(["\ufdd0:span.btn.btn-primary.aloha-icon", "aloha"], true);
orchard.objects.modules.aloha.init_aloha = function init_aloha(this$) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_536053) {
        var state_val_536054 = state_536053[1];
        if(state_val_536054 === 2) {
          var inst_536049 = state_536053[2];
          var inst_536050 = inst_536049.getElementsByClassName("aloha-editable");
          var inst_536051 = cljs.core.apply.call(null, orchard.util.aloha.aloha, inst_536050);
          var state_536053__$1 = state_536053;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_536053__$1, inst_536051)
        }else {
          if(state_val_536054 === 1) {
            var inst_536046 = cljs.core.deref.call(null, this$);
            var inst_536047 = (new cljs.core.Keyword("\ufdd0:ready-chan")).call(null, inst_536046);
            var state_536053__$1 = state_536053;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_536053__$1, 2, inst_536047)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_536056 = new Array(5);
            statearr_536056[0] = state_machine__4793__auto__;
            statearr_536056[1] = 1;
            return statearr_536056
          };
          var state_machine__4793__auto____1 = function(state_536053) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_536053);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_536053) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_536053)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_536057 = f__4865__auto__.call(null);
      statearr_536057[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_536057
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.object.object_STAR_.call(null, "\ufdd0:aloha-module", "\ufdd0:tags", cljs.core.PersistentHashSet.fromArray(["\ufdd0:modules", null], true), "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:delete-module", null, "\ufdd0:ready", null, "\ufdd0:save", null], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.module/delete-module", "\ufdd0:orchard.module/save-module"], true), "\ufdd0:label", "aloha", "\ufdd0:icon", orchard.objects.modules.aloha.icon, 
"\ufdd0:text", "", "\ufdd0:init", function(this$, record) {
  orchard.object.merge_BANG_.call(null, this$, record, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:save-data", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:last-save", orchard.objects.modules.aloha.get_time.call(null), "\ufdd0:change-count", 0], true)], true));
  orchard.util.core.bound_do.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:text"), function() {
    var G__536058__delegate = function(args) {
      return orchard.object.raise.call(null, this$, "\ufdd0:save")
    };
    var G__536058 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__536058__delegate.call(this, args)
    };
    G__536058.cljs$lang$maxFixedArity = 0;
    G__536058.cljs$lang$applyTo = function(arglist__536059) {
      var args = cljs.core.seq(arglist__536059);
      return G__536058__delegate(args)
    };
    G__536058.cljs$core$IFn$_invoke$arity$variadic = G__536058__delegate;
    return G__536058
  }());
  orchard.objects.modules.aloha.init_aloha.call(null, this$);
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", [cljs.core.str("span12 module "), cljs.core.str((new cljs.core.Keyword("\ufdd0:type")).call(null, cljs.core.deref.call(null, this$)))].join(""), "\ufdd0:id", [cljs.core.str("module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join("")], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-tray"], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-element", 
  orchard.objects.modules.aloha.render_aloha.call(null)], true)], true)
});
goog.provide("orchard.objects.new$");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("orchard.model");
goog.require("orchard.objects.workspace");
goog.require("orchard.util.dom");
goog.require("orchard.objects.templates.single_column");
goog.require("orchard.objects.wiki_page");
goog.require("crate.binding");
goog.require("orchard.object");
goog.require("orchard.objects.modules.tiny_mce");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("orchard.objects.modules.markdown");
goog.require("orchard.objects.modules.aloha");
goog.require("orchard.module");
orchard.objects.new$.create_document = function create_document(db, title) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_437015) {
        var state_val_437016 = state_437015[1];
        if(state_val_437016 === 4) {
          var inst_437010 = state_437015[2];
          var inst_437011 = (new cljs.core.Keyword("\ufdd0:type")).call(null, inst_437010);
          var inst_437012 = orchard.object.create.call(null, inst_437011, inst_437010);
          var inst_437013 = orchard.object.raise.call(null, orchard.objects.workspace.workspace, "\ufdd0:show-page", inst_437012);
          var state_437015__$1 = state_437015;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_437015__$1, inst_437013)
        }else {
          if(state_val_437016 === 3) {
            var inst_437007 = state_437015[2];
            var inst_437008 = orchard.objects.wiki_page.wiki_page.call(null, db, "\ufdd0:title", title, "\ufdd0:template", inst_437007);
            var state_437015__$1 = state_437015;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_437015__$1, 4, inst_437008)
          }else {
            if(state_val_437016 === 2) {
              var inst_437004 = state_437015[2];
              var inst_437005 = orchard.objects.templates.single_column.single_column_template_doc.call(null, db, inst_437004);
              var state_437015__$1 = state_437015;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_437015__$1, 3, inst_437005)
            }else {
              if(state_val_437016 === 1) {
                var inst_437002 = orchard.objects.modules.tiny_mce.tiny_mce_doc.call(null, db);
                var state_437015__$1 = state_437015;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_437015__$1, 2, inst_437002)
              }else {
                return null
              }
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_437018 = new Array(5);
            statearr_437018[0] = state_machine__4793__auto__;
            statearr_437018[1] = 1;
            return statearr_437018
          };
          var state_machine__4793__auto____1 = function(state_437015) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_437015);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_437015) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_437015)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_437019 = f__4865__auto__.call(null);
      statearr_437019[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_437019
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.objects.new$.create_new_document = function create_new_document(db, title, aloha_QMARK_) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_437065) {
        var state_val_437066 = state_437065[1];
        if(state_val_437066 === 7) {
          var inst_437060 = state_437065[2];
          var inst_437061 = (new cljs.core.Keyword("\ufdd0:type")).call(null, inst_437060);
          var inst_437062 = orchard.object.create.call(null, inst_437061, inst_437060);
          var inst_437063 = orchard.object.raise.call(null, orchard.objects.workspace.workspace, "\ufdd0:show-page", inst_437062);
          var state_437065__$1 = state_437065;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_437065__$1, inst_437063)
        }else {
          if(state_val_437066 === 6) {
            var inst_437057 = state_437065[2];
            var inst_437058 = orchard.objects.wiki_page.wiki_page.call(null, db, "\ufdd0:title", title, "\ufdd0:template", inst_437057);
            var state_437065__$1 = state_437065;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_437065__$1, 7, inst_437058)
          }else {
            if(state_val_437066 === 5) {
              var inst_437052 = state_437065[2];
              var state_437065__$1 = state_437065;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_437065__$1, 2, inst_437052)
            }else {
              if(state_val_437066 === 4) {
                var inst_437050 = orchard.objects.modules.tiny_mce.tiny_mce_doc.call(null, db);
                var state_437065__$1 = state_437065;
                var statearr_437067_437074 = state_437065__$1;
                statearr_437067_437074[2] = inst_437050;
                statearr_437067_437074[1] = 5;
                return"\ufdd0:recur"
              }else {
                if(state_val_437066 === 3) {
                  var inst_437048 = orchard.objects.modules.aloha.aloha_doc.call(null, db);
                  var state_437065__$1 = state_437065;
                  var statearr_437068_437075 = state_437065__$1;
                  statearr_437068_437075[2] = inst_437048;
                  statearr_437068_437075[1] = 5;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_437066 === 2) {
                    var inst_437054 = state_437065[2];
                    var inst_437055 = orchard.objects.templates.single_column.single_column_template_doc.call(null, db, inst_437054);
                    var state_437065__$1 = state_437065;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_437065__$1, 6, inst_437055)
                  }else {
                    if(state_val_437066 === 1) {
                      var state_437065__$1 = state_437065;
                      if(cljs.core.truth_(aloha_QMARK_)) {
                        var statearr_437069_437076 = state_437065__$1;
                        statearr_437069_437076[1] = 3
                      }else {
                        var statearr_437070_437077 = state_437065__$1;
                        statearr_437070_437077[1] = 4
                      }
                      return"\ufdd0:recur"
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_437072 = new Array(5);
            statearr_437072[0] = state_machine__4793__auto__;
            statearr_437072[1] = 1;
            return statearr_437072
          };
          var state_machine__4793__auto____1 = function(state_437065) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_437065);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_437065) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_437065)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_437073 = f__4865__auto__.call(null);
      statearr_437073[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_437073
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.objects.new$.create_button = function create_button() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:a#create-doc-btn.btn.btn-primary", "Create"], true));
  var seq__437084_437090 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    e.preventDefault();
    var $title_input = orchard.util.dom.$.call(null, "\ufdd0:#new-document-title");
    var title = $title_input.value;
    var $aloha_input = document.getElementById("aloha-check");
    var aloha_QMARK_ = $aloha_input.checked;
    return orchard.objects.new$.create_new_document.call(null, orchard.objects.app.db, title, aloha_QMARK_)
  }], true)));
  var chunk__437085_437091 = null;
  var count__437086_437092 = 0;
  var i__437087_437093 = 0;
  while(true) {
    if(i__437087_437093 < count__437086_437092) {
      var vec__437088_437094 = cljs.core._nth.call(null, chunk__437085_437091, i__437087_437093);
      var ev__431429__auto___437095 = cljs.core.nth.call(null, vec__437088_437094, 0, null);
      var func__431430__auto___437096 = cljs.core.nth.call(null, vec__437088_437094, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437095, func__431430__auto___437096);
      var G__437097 = seq__437084_437090;
      var G__437098 = chunk__437085_437091;
      var G__437099 = count__437086_437092;
      var G__437100 = i__437087_437093 + 1;
      seq__437084_437090 = G__437097;
      chunk__437085_437091 = G__437098;
      count__437086_437092 = G__437099;
      i__437087_437093 = G__437100;
      continue
    }else {
      var temp__4092__auto___437101 = cljs.core.seq.call(null, seq__437084_437090);
      if(temp__4092__auto___437101) {
        var seq__437084_437102__$1 = temp__4092__auto___437101;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437084_437102__$1)) {
          var c__3259__auto___437103 = cljs.core.chunk_first.call(null, seq__437084_437102__$1);
          var G__437104 = cljs.core.chunk_rest.call(null, seq__437084_437102__$1);
          var G__437105 = c__3259__auto___437103;
          var G__437106 = cljs.core.count.call(null, c__3259__auto___437103);
          var G__437107 = 0;
          seq__437084_437090 = G__437104;
          chunk__437085_437091 = G__437105;
          count__437086_437092 = G__437106;
          i__437087_437093 = G__437107;
          continue
        }else {
          var vec__437089_437108 = cljs.core.first.call(null, seq__437084_437102__$1);
          var ev__431429__auto___437109 = cljs.core.nth.call(null, vec__437089_437108, 0, null);
          var func__431430__auto___437110 = cljs.core.nth.call(null, vec__437089_437108, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437109, func__431430__auto___437110);
          var G__437111 = cljs.core.next.call(null, seq__437084_437102__$1);
          var G__437112 = null;
          var G__437113 = 0;
          var G__437114 = 0;
          seq__437084_437090 = G__437111;
          chunk__437085_437091 = G__437112;
          count__437086_437092 = G__437113;
          i__437087_437093 = G__437114;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.new$.new_document_form = function new_document_form(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.offset3.span6.new-document-form", cljs.core.PersistentVector.fromArray(["\ufdd0:label", "Title"], true), cljs.core.PersistentVector.fromArray(["\ufdd0:input#new-document-title.span6", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "text", "\ufdd0:placeholder", "New page"], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div", cljs.core.PersistentVector.fromArray(["\ufdd0:input#aloha-check", 
  cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "checkbox", "\ufdd0:name", "use_aloha", "\ufdd0:value", "aloha"], true)], true), "Check to use Aloha editor"], true), orchard.objects.new$.create_button.call(null)], true));
  var seq__437121_437127 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__437122_437128 = null;
  var count__437123_437129 = 0;
  var i__437124_437130 = 0;
  while(true) {
    if(i__437124_437130 < count__437123_437129) {
      var vec__437125_437131 = cljs.core._nth.call(null, chunk__437122_437128, i__437124_437130);
      var ev__431429__auto___437132 = cljs.core.nth.call(null, vec__437125_437131, 0, null);
      var func__431430__auto___437133 = cljs.core.nth.call(null, vec__437125_437131, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437132, func__431430__auto___437133);
      var G__437134 = seq__437121_437127;
      var G__437135 = chunk__437122_437128;
      var G__437136 = count__437123_437129;
      var G__437137 = i__437124_437130 + 1;
      seq__437121_437127 = G__437134;
      chunk__437122_437128 = G__437135;
      count__437123_437129 = G__437136;
      i__437124_437130 = G__437137;
      continue
    }else {
      var temp__4092__auto___437138 = cljs.core.seq.call(null, seq__437121_437127);
      if(temp__4092__auto___437138) {
        var seq__437121_437139__$1 = temp__4092__auto___437138;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437121_437139__$1)) {
          var c__3259__auto___437140 = cljs.core.chunk_first.call(null, seq__437121_437139__$1);
          var G__437141 = cljs.core.chunk_rest.call(null, seq__437121_437139__$1);
          var G__437142 = c__3259__auto___437140;
          var G__437143 = cljs.core.count.call(null, c__3259__auto___437140);
          var G__437144 = 0;
          seq__437121_437127 = G__437141;
          chunk__437122_437128 = G__437142;
          count__437123_437129 = G__437143;
          i__437124_437130 = G__437144;
          continue
        }else {
          var vec__437126_437145 = cljs.core.first.call(null, seq__437121_437139__$1);
          var ev__431429__auto___437146 = cljs.core.nth.call(null, vec__437126_437145, 0, null);
          var func__431430__auto___437147 = cljs.core.nth.call(null, vec__437126_437145, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437146, func__431430__auto___437147);
          var G__437148 = cljs.core.next.call(null, seq__437121_437139__$1);
          var G__437149 = null;
          var G__437150 = 0;
          var G__437151 = 0;
          seq__437121_437127 = G__437148;
          chunk__437122_437128 = G__437149;
          count__437123_437129 = G__437150;
          i__437124_437130 = G__437151;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.object.object_STAR_.call(null, "\ufdd0:new-document", "\ufdd0:triggers", cljs.core.PersistentHashSet.EMPTY, "\ufdd0:behaviors", cljs.core.PersistentVector.EMPTY, "\ufdd0:init", function(this$) {
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div.document", cljs.core.PersistentVector.fromArray(["\ufdd0:div.row-fluid", cljs.core.PersistentVector.fromArray(["\ufdd0:div.span12", cljs.core.PersistentVector.fromArray(["\ufdd0:h4", "Create a new Wiki Document"], true)], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.row-fluid", cljs.core.PersistentVector.fromArray(["\ufdd0:div.new-content.new-document-content", orchard.objects.new$.new_document_form.call(null, this$)], 
  true)], true)], true)
});
orchard.objects.new$.new_document = orchard.object.create.call(null, "\ufdd0:new-document");
orchard.objects.new$.load_new_doc = function load_new_doc() {
  return orchard.object.raise.call(null, orchard.objects.workspace.workspace, "\ufdd0:show-page", orchard.objects.new$.new_document)
};
goog.provide("orchard.objects.nav");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("crate.binding");
goog.require("orchard.dispatch");
goog.require("orchard.model");
goog.require("crate.binding");
goog.require("orchard.util.dom");
goog.require("orchard.util.core");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("orchard.object");
orchard.objects.nav.visible_STAR_ = cljs.core.atom.call(null, true);
orchard.objects.nav.BLOCK_SIZE = 30;
orchard.objects.nav.$nav_input = function $nav_input() {
  return orchard.util.dom.$.call(null, "#nav-input")
};
orchard.objects.nav.wiki_page = function wiki_page() {
  return(new cljs.core.Keyword("\ufdd0:wiki-page")).call(null, cljs.core.deref.call(null, orchard.objects.workspace.workspace))
};
orchard.objects.nav.locked_QMARK_ = function locked_QMARK_(wiki_page) {
  return(new cljs.core.Keyword("\ufdd0:locked?")).call(null, cljs.core.deref.call(null, wiki_page))
};
orchard.objects.nav.toggle_lock_BANG_ = function toggle_lock_BANG_(wiki_page) {
  return orchard.object.update_BANG_.call(null, wiki_page, cljs.core.PersistentVector.fromArray(["\ufdd0:locked?"], true), function(b) {
    return cljs.core.not.call(null, b)
  })
};
orchard.objects.nav.set_mode = function set_mode(this$, mode) {
  return orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:mode", mode)
};
orchard.objects.nav.new_doc_btn = function new_doc_btn() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:li.nav-element", cljs.core.PersistentVector.fromArray(["\ufdd0:i.icon-plus.icon-white"], true)], true));
  var seq__436422_436428 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", orchard.objects.new$.load_new_doc], true)));
  var chunk__436423_436429 = null;
  var count__436424_436430 = 0;
  var i__436425_436431 = 0;
  while(true) {
    if(i__436425_436431 < count__436424_436430) {
      var vec__436426_436432 = cljs.core._nth.call(null, chunk__436423_436429, i__436425_436431);
      var ev__431429__auto___436433 = cljs.core.nth.call(null, vec__436426_436432, 0, null);
      var func__431430__auto___436434 = cljs.core.nth.call(null, vec__436426_436432, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436433, func__431430__auto___436434);
      var G__436435 = seq__436422_436428;
      var G__436436 = chunk__436423_436429;
      var G__436437 = count__436424_436430;
      var G__436438 = i__436425_436431 + 1;
      seq__436422_436428 = G__436435;
      chunk__436423_436429 = G__436436;
      count__436424_436430 = G__436437;
      i__436425_436431 = G__436438;
      continue
    }else {
      var temp__4092__auto___436439 = cljs.core.seq.call(null, seq__436422_436428);
      if(temp__4092__auto___436439) {
        var seq__436422_436440__$1 = temp__4092__auto___436439;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436422_436440__$1)) {
          var c__3259__auto___436441 = cljs.core.chunk_first.call(null, seq__436422_436440__$1);
          var G__436442 = cljs.core.chunk_rest.call(null, seq__436422_436440__$1);
          var G__436443 = c__3259__auto___436441;
          var G__436444 = cljs.core.count.call(null, c__3259__auto___436441);
          var G__436445 = 0;
          seq__436422_436428 = G__436442;
          chunk__436423_436429 = G__436443;
          count__436424_436430 = G__436444;
          i__436425_436431 = G__436445;
          continue
        }else {
          var vec__436427_436446 = cljs.core.first.call(null, seq__436422_436440__$1);
          var ev__431429__auto___436447 = cljs.core.nth.call(null, vec__436427_436446, 0, null);
          var func__431430__auto___436448 = cljs.core.nth.call(null, vec__436427_436446, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436447, func__431430__auto___436448);
          var G__436449 = cljs.core.next.call(null, seq__436422_436440__$1);
          var G__436450 = null;
          var G__436451 = 0;
          var G__436452 = 0;
          seq__436422_436428 = G__436449;
          chunk__436423_436429 = G__436450;
          count__436424_436430 = G__436451;
          i__436425_436431 = G__436452;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.nav.home_btn = function home_btn() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:li.nav-element", cljs.core.PersistentVector.fromArray(["\ufdd0:i.icon-home.icon-white"], true)], true));
  var seq__436459_436465 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    return orchard.objects.app.show_project.call(null, orchard.objects.app.db, "\ufdd0:home")
  }], true)));
  var chunk__436460_436466 = null;
  var count__436461_436467 = 0;
  var i__436462_436468 = 0;
  while(true) {
    if(i__436462_436468 < count__436461_436467) {
      var vec__436463_436469 = cljs.core._nth.call(null, chunk__436460_436466, i__436462_436468);
      var ev__431429__auto___436470 = cljs.core.nth.call(null, vec__436463_436469, 0, null);
      var func__431430__auto___436471 = cljs.core.nth.call(null, vec__436463_436469, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436470, func__431430__auto___436471);
      var G__436472 = seq__436459_436465;
      var G__436473 = chunk__436460_436466;
      var G__436474 = count__436461_436467;
      var G__436475 = i__436462_436468 + 1;
      seq__436459_436465 = G__436472;
      chunk__436460_436466 = G__436473;
      count__436461_436467 = G__436474;
      i__436462_436468 = G__436475;
      continue
    }else {
      var temp__4092__auto___436476 = cljs.core.seq.call(null, seq__436459_436465);
      if(temp__4092__auto___436476) {
        var seq__436459_436477__$1 = temp__4092__auto___436476;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436459_436477__$1)) {
          var c__3259__auto___436478 = cljs.core.chunk_first.call(null, seq__436459_436477__$1);
          var G__436479 = cljs.core.chunk_rest.call(null, seq__436459_436477__$1);
          var G__436480 = c__3259__auto___436478;
          var G__436481 = cljs.core.count.call(null, c__3259__auto___436478);
          var G__436482 = 0;
          seq__436459_436465 = G__436479;
          chunk__436460_436466 = G__436480;
          count__436461_436467 = G__436481;
          i__436462_436468 = G__436482;
          continue
        }else {
          var vec__436464_436483 = cljs.core.first.call(null, seq__436459_436477__$1);
          var ev__431429__auto___436484 = cljs.core.nth.call(null, vec__436464_436483, 0, null);
          var func__431430__auto___436485 = cljs.core.nth.call(null, vec__436464_436483, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436484, func__431430__auto___436485);
          var G__436486 = cljs.core.next.call(null, seq__436459_436477__$1);
          var G__436487 = null;
          var G__436488 = 0;
          var G__436489 = 0;
          seq__436459_436465 = G__436486;
          chunk__436460_436466 = G__436487;
          count__436461_436467 = G__436488;
          i__436462_436468 = G__436489;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.nav.lock_handler = function lock_handler(this$, e) {
  var lock_436490 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0:locked?")).call(null, cljs.core.deref.call(null, this$)));
  orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:locked?", lock_436490);
  if(lock_436490) {
  }else {
  }
  e.preventDefault();
  return false
};
orchard.objects.nav.lock_view = function lock_view(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:i#lock-btn.icon-lock.icon-white"], true));
  var seq__436497_436503 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:mousedown", function() {
    var G__436507__delegate = function(args) {
      return false
    };
    var G__436507 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__436507__delegate.call(this, args)
    };
    G__436507.cljs$lang$maxFixedArity = 0;
    G__436507.cljs$lang$applyTo = function(arglist__436508) {
      var args = cljs.core.seq(arglist__436508);
      return G__436507__delegate(args)
    };
    G__436507.cljs$core$IFn$_invoke$arity$variadic = G__436507__delegate;
    return G__436507
  }(), "\ufdd0:click", cljs.core.partial.call(null, orchard.objects.nav.lock_handler, this$)], true)));
  var chunk__436498_436504 = null;
  var count__436499_436505 = 0;
  var i__436500_436506 = 0;
  while(true) {
    if(i__436500_436506 < count__436499_436505) {
      var vec__436501_436509 = cljs.core._nth.call(null, chunk__436498_436504, i__436500_436506);
      var ev__431429__auto___436510 = cljs.core.nth.call(null, vec__436501_436509, 0, null);
      var func__431430__auto___436511 = cljs.core.nth.call(null, vec__436501_436509, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436510, func__431430__auto___436511);
      var G__436512 = seq__436497_436503;
      var G__436513 = chunk__436498_436504;
      var G__436514 = count__436499_436505;
      var G__436515 = i__436500_436506 + 1;
      seq__436497_436503 = G__436512;
      chunk__436498_436504 = G__436513;
      count__436499_436505 = G__436514;
      i__436500_436506 = G__436515;
      continue
    }else {
      var temp__4092__auto___436516 = cljs.core.seq.call(null, seq__436497_436503);
      if(temp__4092__auto___436516) {
        var seq__436497_436517__$1 = temp__4092__auto___436516;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436497_436517__$1)) {
          var c__3259__auto___436518 = cljs.core.chunk_first.call(null, seq__436497_436517__$1);
          var G__436519 = cljs.core.chunk_rest.call(null, seq__436497_436517__$1);
          var G__436520 = c__3259__auto___436518;
          var G__436521 = cljs.core.count.call(null, c__3259__auto___436518);
          var G__436522 = 0;
          seq__436497_436503 = G__436519;
          chunk__436498_436504 = G__436520;
          count__436499_436505 = G__436521;
          i__436500_436506 = G__436522;
          continue
        }else {
          var vec__436502_436523 = cljs.core.first.call(null, seq__436497_436517__$1);
          var ev__431429__auto___436524 = cljs.core.nth.call(null, vec__436502_436523, 0, null);
          var func__431430__auto___436525 = cljs.core.nth.call(null, vec__436502_436523, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436524, func__431430__auto___436525);
          var G__436526 = cljs.core.next.call(null, seq__436497_436517__$1);
          var G__436527 = null;
          var G__436528 = 0;
          var G__436529 = 0;
          seq__436497_436503 = G__436526;
          chunk__436498_436504 = G__436527;
          count__436499_436505 = G__436528;
          i__436500_436506 = G__436529;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.nav.unlock_view = function unlock_view(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:i#lock-btn.icon-unlock.icon-white"], true));
  var seq__436536_436542 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", cljs.core.partial.call(null, orchard.objects.nav.lock_handler, this$)], true)));
  var chunk__436537_436543 = null;
  var count__436538_436544 = 0;
  var i__436539_436545 = 0;
  while(true) {
    if(i__436539_436545 < count__436538_436544) {
      var vec__436540_436546 = cljs.core._nth.call(null, chunk__436537_436543, i__436539_436545);
      var ev__431429__auto___436547 = cljs.core.nth.call(null, vec__436540_436546, 0, null);
      var func__431430__auto___436548 = cljs.core.nth.call(null, vec__436540_436546, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436547, func__431430__auto___436548);
      var G__436549 = seq__436536_436542;
      var G__436550 = chunk__436537_436543;
      var G__436551 = count__436538_436544;
      var G__436552 = i__436539_436545 + 1;
      seq__436536_436542 = G__436549;
      chunk__436537_436543 = G__436550;
      count__436538_436544 = G__436551;
      i__436539_436545 = G__436552;
      continue
    }else {
      var temp__4092__auto___436553 = cljs.core.seq.call(null, seq__436536_436542);
      if(temp__4092__auto___436553) {
        var seq__436536_436554__$1 = temp__4092__auto___436553;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436536_436554__$1)) {
          var c__3259__auto___436555 = cljs.core.chunk_first.call(null, seq__436536_436554__$1);
          var G__436556 = cljs.core.chunk_rest.call(null, seq__436536_436554__$1);
          var G__436557 = c__3259__auto___436555;
          var G__436558 = cljs.core.count.call(null, c__3259__auto___436555);
          var G__436559 = 0;
          seq__436536_436542 = G__436556;
          chunk__436537_436543 = G__436557;
          count__436538_436544 = G__436558;
          i__436539_436545 = G__436559;
          continue
        }else {
          var vec__436541_436560 = cljs.core.first.call(null, seq__436536_436554__$1);
          var ev__431429__auto___436561 = cljs.core.nth.call(null, vec__436541_436560, 0, null);
          var func__431430__auto___436562 = cljs.core.nth.call(null, vec__436541_436560, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436561, func__431430__auto___436562);
          var G__436563 = cljs.core.next.call(null, seq__436536_436554__$1);
          var G__436564 = null;
          var G__436565 = 0;
          var G__436566 = 0;
          seq__436536_436542 = G__436563;
          chunk__436537_436543 = G__436564;
          count__436538_436544 = G__436565;
          i__436539_436545 = G__436566;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.nav.lock_btn_handler = function lock_btn_handler(this$, locked_QMARK_) {
  var btn$ = $("#lock-btn");
  if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0:locked?")).call(null, cljs.core.deref.call(null, this$)))) {
    return orchard.objects.nav.lock_view.call(null, this$)
  }else {
    return orchard.objects.nav.unlock_view.call(null, this$)
  }
};
orchard.objects.nav.lock_btn = function lock_btn(this$) {
  return cljs.core.PersistentVector.fromArray(["\ufdd0:li.nav-element", crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:locked?"], true)), cljs.core.partial.call(null, orchard.objects.nav.lock_btn_handler, this$))], true)
};
orchard.objects.nav.refresh_btn = function refresh_btn() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:li.nav-element", cljs.core.PersistentVector.fromArray(["\ufdd0:i.icon-refresh.icon-white"], true)], true));
  var seq__436573_436579 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    return orchard.object.raise.call(null, orchard.objects.app.app, "\ufdd0:refresh")
  }], true)));
  var chunk__436574_436580 = null;
  var count__436575_436581 = 0;
  var i__436576_436582 = 0;
  while(true) {
    if(i__436576_436582 < count__436575_436581) {
      var vec__436577_436583 = cljs.core._nth.call(null, chunk__436574_436580, i__436576_436582);
      var ev__431429__auto___436584 = cljs.core.nth.call(null, vec__436577_436583, 0, null);
      var func__431430__auto___436585 = cljs.core.nth.call(null, vec__436577_436583, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436584, func__431430__auto___436585);
      var G__436586 = seq__436573_436579;
      var G__436587 = chunk__436574_436580;
      var G__436588 = count__436575_436581;
      var G__436589 = i__436576_436582 + 1;
      seq__436573_436579 = G__436586;
      chunk__436574_436580 = G__436587;
      count__436575_436581 = G__436588;
      i__436576_436582 = G__436589;
      continue
    }else {
      var temp__4092__auto___436590 = cljs.core.seq.call(null, seq__436573_436579);
      if(temp__4092__auto___436590) {
        var seq__436573_436591__$1 = temp__4092__auto___436590;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436573_436591__$1)) {
          var c__3259__auto___436592 = cljs.core.chunk_first.call(null, seq__436573_436591__$1);
          var G__436593 = cljs.core.chunk_rest.call(null, seq__436573_436591__$1);
          var G__436594 = c__3259__auto___436592;
          var G__436595 = cljs.core.count.call(null, c__3259__auto___436592);
          var G__436596 = 0;
          seq__436573_436579 = G__436593;
          chunk__436574_436580 = G__436594;
          count__436575_436581 = G__436595;
          i__436576_436582 = G__436596;
          continue
        }else {
          var vec__436578_436597 = cljs.core.first.call(null, seq__436573_436591__$1);
          var ev__431429__auto___436598 = cljs.core.nth.call(null, vec__436578_436597, 0, null);
          var func__431430__auto___436599 = cljs.core.nth.call(null, vec__436578_436597, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436598, func__431430__auto___436599);
          var G__436600 = cljs.core.next.call(null, seq__436573_436591__$1);
          var G__436601 = null;
          var G__436602 = 0;
          var G__436603 = 0;
          seq__436573_436579 = G__436600;
          chunk__436574_436580 = G__436601;
          count__436575_436581 = G__436602;
          i__436576_436582 = G__436603;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.nav.synch_btn = function synch_btn() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:li.nav-element", cljs.core.PersistentVector.fromArray(["\ufdd0:i.icon-sitemap.icon-white"], true)], true));
  var seq__436621_436638 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    orchard.util.log.log.call(null, "synch projects");
    var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__4864__auto__) {
      return function() {
        var f__4865__auto__ = function() {
          var switch__4792__auto__ = function(c__4864__auto__) {
            return function(state_436630) {
              var state_val_436631 = state_436630[1];
              if(state_val_436631 === 2) {
                var inst_436627 = state_436630[2];
                var inst_436628 = orchard.util.log.log.call(null, "Documents synched");
                var state_436630__$1 = function() {
                  var statearr_436632 = state_436630;
                  statearr_436632[5] = inst_436627;
                  return statearr_436632
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_436630__$1, inst_436628)
              }else {
                if(state_val_436631 === 1) {
                  var inst_436625 = orchard.model.synch_documents.call(null);
                  var state_436630__$1 = state_436630;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_436630__$1, 2, inst_436625)
                }else {
                  return null
                }
              }
            }
          }(c__4864__auto__);
          return function(switch__4792__auto__, c__4864__auto__) {
            return function() {
              var state_machine__4793__auto__ = null;
              var state_machine__4793__auto____0 = function() {
                var statearr_436634 = new Array(6);
                statearr_436634[0] = state_machine__4793__auto__;
                statearr_436634[1] = 1;
                return statearr_436634
              };
              var state_machine__4793__auto____1 = function(state_436630) {
                while(true) {
                  var result__4794__auto__ = switch__4792__auto__.call(null, state_436630);
                  if(result__4794__auto__ === "\ufdd0:recur") {
                    continue
                  }else {
                    return result__4794__auto__
                  }
                  break
                }
              };
              state_machine__4793__auto__ = function(state_436630) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__4793__auto____0.call(this);
                  case 1:
                    return state_machine__4793__auto____1.call(this, state_436630)
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
              state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
              return state_machine__4793__auto__
            }()
          }(switch__4792__auto__, c__4864__auto__)
        }();
        var state__4866__auto__ = function() {
          var statearr_436635 = f__4865__auto__.call(null);
          statearr_436635[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
          return statearr_436635
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
      }
    }(c__4864__auto__));
    return c__4864__auto__
  }], true)));
  var chunk__436622_436639 = null;
  var count__436623_436640 = 0;
  var i__436624_436641 = 0;
  while(true) {
    if(i__436624_436641 < count__436623_436640) {
      var vec__436636_436642 = cljs.core._nth.call(null, chunk__436622_436639, i__436624_436641);
      var ev__431429__auto___436643 = cljs.core.nth.call(null, vec__436636_436642, 0, null);
      var func__431430__auto___436644 = cljs.core.nth.call(null, vec__436636_436642, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436643, func__431430__auto___436644);
      var G__436645 = seq__436621_436638;
      var G__436646 = chunk__436622_436639;
      var G__436647 = count__436623_436640;
      var G__436648 = i__436624_436641 + 1;
      seq__436621_436638 = G__436645;
      chunk__436622_436639 = G__436646;
      count__436623_436640 = G__436647;
      i__436624_436641 = G__436648;
      continue
    }else {
      var temp__4092__auto___436649 = cljs.core.seq.call(null, seq__436621_436638);
      if(temp__4092__auto___436649) {
        var seq__436621_436650__$1 = temp__4092__auto___436649;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436621_436650__$1)) {
          var c__3259__auto___436651 = cljs.core.chunk_first.call(null, seq__436621_436650__$1);
          var G__436652 = cljs.core.chunk_rest.call(null, seq__436621_436650__$1);
          var G__436653 = c__3259__auto___436651;
          var G__436654 = cljs.core.count.call(null, c__3259__auto___436651);
          var G__436655 = 0;
          seq__436621_436638 = G__436652;
          chunk__436622_436639 = G__436653;
          count__436623_436640 = G__436654;
          i__436624_436641 = G__436655;
          continue
        }else {
          var vec__436637_436656 = cljs.core.first.call(null, seq__436621_436650__$1);
          var ev__431429__auto___436657 = cljs.core.nth.call(null, vec__436637_436656, 0, null);
          var func__431430__auto___436658 = cljs.core.nth.call(null, vec__436637_436656, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436657, func__431430__auto___436658);
          var G__436659 = cljs.core.next.call(null, seq__436621_436650__$1);
          var G__436660 = null;
          var G__436661 = 0;
          var G__436662 = 0;
          seq__436621_436638 = G__436659;
          chunk__436622_436639 = G__436660;
          count__436623_436640 = G__436661;
          i__436624_436641 = G__436662;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.nav.dev_tools_btn = function dev_tools_btn() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:li.nav-element", cljs.core.PersistentVector.fromArray(["\ufdd0:i.icon-dashboard.icon-white"], true)], true));
  var seq__436669_436675 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    return orchard.object.raise.call(null, orchard.objects.app.app, "\ufdd0:show-dev-tools")
  }], true)));
  var chunk__436670_436676 = null;
  var count__436671_436677 = 0;
  var i__436672_436678 = 0;
  while(true) {
    if(i__436672_436678 < count__436671_436677) {
      var vec__436673_436679 = cljs.core._nth.call(null, chunk__436670_436676, i__436672_436678);
      var ev__431429__auto___436680 = cljs.core.nth.call(null, vec__436673_436679, 0, null);
      var func__431430__auto___436681 = cljs.core.nth.call(null, vec__436673_436679, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436680, func__431430__auto___436681);
      var G__436682 = seq__436669_436675;
      var G__436683 = chunk__436670_436676;
      var G__436684 = count__436671_436677;
      var G__436685 = i__436672_436678 + 1;
      seq__436669_436675 = G__436682;
      chunk__436670_436676 = G__436683;
      count__436671_436677 = G__436684;
      i__436672_436678 = G__436685;
      continue
    }else {
      var temp__4092__auto___436686 = cljs.core.seq.call(null, seq__436669_436675);
      if(temp__4092__auto___436686) {
        var seq__436669_436687__$1 = temp__4092__auto___436686;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436669_436687__$1)) {
          var c__3259__auto___436688 = cljs.core.chunk_first.call(null, seq__436669_436687__$1);
          var G__436689 = cljs.core.chunk_rest.call(null, seq__436669_436687__$1);
          var G__436690 = c__3259__auto___436688;
          var G__436691 = cljs.core.count.call(null, c__3259__auto___436688);
          var G__436692 = 0;
          seq__436669_436675 = G__436689;
          chunk__436670_436676 = G__436690;
          count__436671_436677 = G__436691;
          i__436672_436678 = G__436692;
          continue
        }else {
          var vec__436674_436693 = cljs.core.first.call(null, seq__436669_436687__$1);
          var ev__431429__auto___436694 = cljs.core.nth.call(null, vec__436674_436693, 0, null);
          var func__431430__auto___436695 = cljs.core.nth.call(null, vec__436674_436693, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436694, func__431430__auto___436695);
          var G__436696 = cljs.core.next.call(null, seq__436669_436687__$1);
          var G__436697 = null;
          var G__436698 = 0;
          var G__436699 = 0;
          seq__436669_436675 = G__436696;
          chunk__436670_436676 = G__436697;
          count__436671_436677 = G__436698;
          i__436672_436678 = G__436699;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.nav.focus = function focus() {
  return orchard.objects.nav.$nav_input.call(null).focus()
};
orchard.objects.nav.accum_btn_widths = function accum_btn_widths() {
  return cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, function(p1__436700_SHARP_) {
    return p1__436700_SHARP_["offsetWidth"]
  }, orchard.util.dom.$$.call(null, ".nav-element")))
};
orchard.objects.nav.accum_padding = function accum_padding(elem) {
  var style = orchard.util.core.computed_style.call(null, elem);
  return orchard.util.core.parse_int.call(null, style["paddingLeft"]) + orchard.util.core.parse_int.call(null, style["paddingRight"])
};
orchard.objects.nav.format_width = function format_width(width) {
  var bounds = function() {
    var or__3943__auto__ = orchard.objects.nav.accum_btn_widths.call(null);
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return 0
    }
  }();
  return width - 4 - (0 > bounds ? bounds : 178)
};
orchard.objects.nav.text_input = function text_input(this$, evc) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:li.nav-input-element", cljs.core.PersistentVector.fromArray(["\ufdd0:input#nav-input", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "text", "\ufdd0:style", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:width", crate.binding.bound.call(null, this$, function() {
    return orchard.objects.nav.format_width.call(null, (new cljs.core.Keyword("\ufdd0:window-width")).call(null, cljs.core.deref.call(null, this$)))
  })], true)], true)], true)], true));
  var seq__436723_436745 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:keypress", function(e) {
    var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__4864__auto__) {
      return function() {
        var f__4865__auto__ = function() {
          var switch__4792__auto__ = function(c__4864__auto__) {
            return function(state_436730) {
              var state_val_436731 = state_436730[1];
              if(state_val_436731 === 2) {
                var inst_436728 = state_436730[2];
                var state_436730__$1 = state_436730;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_436730__$1, inst_436728)
              }else {
                if(state_val_436731 === 1) {
                  var state_436730__$1 = state_436730;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_436730__$1, 2, evc, e)
                }else {
                  return null
                }
              }
            }
          }(c__4864__auto__);
          return function(switch__4792__auto__, c__4864__auto__) {
            return function() {
              var state_machine__4793__auto__ = null;
              var state_machine__4793__auto____0 = function() {
                var statearr_436733 = new Array(5);
                statearr_436733[0] = state_machine__4793__auto__;
                statearr_436733[1] = 1;
                return statearr_436733
              };
              var state_machine__4793__auto____1 = function(state_436730) {
                while(true) {
                  var result__4794__auto__ = switch__4792__auto__.call(null, state_436730);
                  if(result__4794__auto__ === "\ufdd0:recur") {
                    continue
                  }else {
                    return result__4794__auto__
                  }
                  break
                }
              };
              state_machine__4793__auto__ = function(state_436730) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__4793__auto____0.call(this);
                  case 1:
                    return state_machine__4793__auto____1.call(this, state_436730)
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
              state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
              return state_machine__4793__auto__
            }()
          }(switch__4792__auto__, c__4864__auto__)
        }();
        var state__4866__auto__ = function() {
          var statearr_436734 = f__4865__auto__.call(null);
          statearr_436734[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
          return statearr_436734
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
      }
    }(c__4864__auto__));
    return c__4864__auto__
  }, "\ufdd0:keydown", function(e) {
    if(cljs.core._EQ_.call(null, e.keyCode, 27)) {
      var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__4864__auto__) {
        return function() {
          var f__4865__auto__ = function() {
            var switch__4792__auto__ = function(c__4864__auto__) {
              return function(state_436738) {
                var state_val_436739 = state_436738[1];
                if(state_val_436739 === 2) {
                  var inst_436736 = state_436738[2];
                  var state_436738__$1 = state_436738;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_436738__$1, inst_436736)
                }else {
                  if(state_val_436739 === 1) {
                    var state_436738__$1 = state_436738;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_436738__$1, 2, evc, e)
                  }else {
                    return null
                  }
                }
              }
            }(c__4864__auto__);
            return function(switch__4792__auto__, c__4864__auto__) {
              return function() {
                var state_machine__4793__auto__ = null;
                var state_machine__4793__auto____0 = function() {
                  var statearr_436741 = new Array(5);
                  statearr_436741[0] = state_machine__4793__auto__;
                  statearr_436741[1] = 1;
                  return statearr_436741
                };
                var state_machine__4793__auto____1 = function(state_436738) {
                  while(true) {
                    var result__4794__auto__ = switch__4792__auto__.call(null, state_436738);
                    if(result__4794__auto__ === "\ufdd0:recur") {
                      continue
                    }else {
                      return result__4794__auto__
                    }
                    break
                  }
                };
                state_machine__4793__auto__ = function(state_436738) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__4793__auto____0.call(this);
                    case 1:
                      return state_machine__4793__auto____1.call(this, state_436738)
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
                state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
                return state_machine__4793__auto__
              }()
            }(switch__4792__auto__, c__4864__auto__)
          }();
          var state__4866__auto__ = function() {
            var statearr_436742 = f__4865__auto__.call(null);
            statearr_436742[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
            return statearr_436742
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
        }
      }(c__4864__auto__));
      return c__4864__auto__
    }else {
      return null
    }
  }], true)));
  var chunk__436724_436746 = null;
  var count__436725_436747 = 0;
  var i__436726_436748 = 0;
  while(true) {
    if(i__436726_436748 < count__436725_436747) {
      var vec__436743_436749 = cljs.core._nth.call(null, chunk__436724_436746, i__436726_436748);
      var ev__431429__auto___436750 = cljs.core.nth.call(null, vec__436743_436749, 0, null);
      var func__431430__auto___436751 = cljs.core.nth.call(null, vec__436743_436749, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436750, func__431430__auto___436751);
      var G__436752 = seq__436723_436745;
      var G__436753 = chunk__436724_436746;
      var G__436754 = count__436725_436747;
      var G__436755 = i__436726_436748 + 1;
      seq__436723_436745 = G__436752;
      chunk__436724_436746 = G__436753;
      count__436725_436747 = G__436754;
      i__436726_436748 = G__436755;
      continue
    }else {
      var temp__4092__auto___436756 = cljs.core.seq.call(null, seq__436723_436745);
      if(temp__4092__auto___436756) {
        var seq__436723_436757__$1 = temp__4092__auto___436756;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436723_436757__$1)) {
          var c__3259__auto___436758 = cljs.core.chunk_first.call(null, seq__436723_436757__$1);
          var G__436759 = cljs.core.chunk_rest.call(null, seq__436723_436757__$1);
          var G__436760 = c__3259__auto___436758;
          var G__436761 = cljs.core.count.call(null, c__3259__auto___436758);
          var G__436762 = 0;
          seq__436723_436745 = G__436759;
          chunk__436724_436746 = G__436760;
          count__436725_436747 = G__436761;
          i__436726_436748 = G__436762;
          continue
        }else {
          var vec__436744_436763 = cljs.core.first.call(null, seq__436723_436757__$1);
          var ev__431429__auto___436764 = cljs.core.nth.call(null, vec__436744_436763, 0, null);
          var func__431430__auto___436765 = cljs.core.nth.call(null, vec__436744_436763, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436764, func__431430__auto___436765);
          var G__436766 = cljs.core.next.call(null, seq__436723_436757__$1);
          var G__436767 = null;
          var G__436768 = 0;
          var G__436769 = 0;
          seq__436723_436745 = G__436766;
          chunk__436724_436746 = G__436767;
          count__436725_436747 = G__436768;
          i__436726_436748 = G__436769;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.nav.set_input_text = function set_input_text(s) {
  return orchard.objects.nav.$nav_input.call(null)["value"] = s
};
orchard.objects.nav.get_input_text = function get_input_text() {
  return orchard.objects.nav.$nav_input.call(null)["value"]
};
orchard.objects.nav.transient_QMARK_ = function() {
  var transient_QMARK_ = null;
  var transient_QMARK___0 = function() {
    return transient_QMARK_.call(null, orchard.objects.nav.workspace_nav)
  };
  var transient_QMARK___1 = function(this$) {
    return(new cljs.core.Keyword("\ufdd0:transient?")).call(null, cljs.core.deref.call(null, this$))
  };
  transient_QMARK_ = function(this$) {
    switch(arguments.length) {
      case 0:
        return transient_QMARK___0.call(this);
      case 1:
        return transient_QMARK___1.call(this, this$)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transient_QMARK_.cljs$core$IFn$_invoke$arity$0 = transient_QMARK___0;
  transient_QMARK_.cljs$core$IFn$_invoke$arity$1 = transient_QMARK___1;
  return transient_QMARK_
}();
orchard.objects.nav.visible_QMARK_ = function visible_QMARK_() {
  return cljs.core.deref.call(null, orchard.objects.nav.visible_STAR_)
};
orchard.objects.nav.focus_workspace = function focus_workspace() {
  return(new cljs.core.Keyword("\ufdd0:content")).call(null, cljs.core.deref.call(null, orchard.objects.workspace.workspace)).focus()
};
orchard.objects.nav.clean_up = function clean_up() {
  orchard.objects.nav.set_input_text.call(null, "");
  orchard.objects.nav.focus_workspace.call(null);
  if(cljs.core.truth_(orchard.objects.nav.transient_QMARK_.call(null))) {
    return orchard.objects.nav.hide_navbar.call(null)
  }else {
    return null
  }
};
orchard.objects.nav.build_document = function build_document(db, project_title, document_title) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_436807) {
        var state_val_436808 = state_436807[1];
        if(state_val_436808 === 5) {
          var inst_436805 = state_436807[2];
          var state_436807__$1 = state_436807;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_436807__$1, inst_436805)
        }else {
          if(state_val_436808 === 4) {
            var inst_436801 = state_436807[2];
            var inst_436802 = (new cljs.core.Keyword("\ufdd0:id")).call(null, inst_436801);
            var inst_436803 = orchard.model.load_object.call(null, db, inst_436802);
            var state_436807__$1 = state_436807;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_436807__$1, 5, inst_436803)
          }else {
            if(state_val_436808 === 3) {
              var inst_436797 = state_436807[2];
              var inst_436798 = (new cljs.core.Keyword("\ufdd0:id")).call(null, inst_436797);
              var inst_436799 = orchard.objects.wiki_pageument.wiki_page.call(null, db, "\ufdd0:title", document_title, "\ufdd0:template", inst_436798, "\ufdd0:project", project_title);
              var state_436807__$1 = state_436807;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_436807__$1, 4, inst_436799)
            }else {
              if(state_val_436808 === 2) {
                var inst_436793 = state_436807[2];
                var inst_436794 = (new cljs.core.Keyword("\ufdd0:id")).call(null, inst_436793);
                var inst_436795 = orchard.objects.templates.single_column.single_column_template_doc.call(null, db, inst_436794);
                var state_436807__$1 = state_436807;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_436807__$1, 3, inst_436795)
              }else {
                if(state_val_436808 === 1) {
                  var inst_436791 = orchard.objects.modules.tiny_mce.tiny_mce_doc.call(null, db);
                  var state_436807__$1 = state_436807;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_436807__$1, 2, inst_436791)
                }else {
                  return null
                }
              }
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_436810 = new Array(5);
            statearr_436810[0] = state_machine__4793__auto__;
            statearr_436810[1] = 1;
            return statearr_436810
          };
          var state_machine__4793__auto____1 = function(state_436807) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_436807);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_436807) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_436807)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_436811 = f__4865__auto__.call(null);
      statearr_436811[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_436811
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.objects.nav.create_project = function create_project(project_title) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_436836) {
        var state_val_436837 = state_436836[1];
        if(state_val_436837 === 2) {
          var inst_436830 = state_436836[2];
          var inst_436831 = orchard.objects.nav.clean_up.call(null);
          var inst_436832 = cljs.core.deref.call(null, inst_436830);
          var inst_436833 = (new cljs.core.Keyword("\ufdd0:id")).call(null, inst_436832);
          var inst_436834 = orchard.objects.app.open_document.call(null, orchard.objects.app.db, inst_436833);
          var state_436836__$1 = function() {
            var statearr_436838 = state_436836;
            statearr_436838[5] = inst_436831;
            return statearr_436838
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_436836__$1, inst_436834)
        }else {
          if(state_val_436837 === 1) {
            var inst_436827 = clojure.string.replace.call(null, project_title, /Project Name: /, "");
            var inst_436828 = orchard.objects.nav.build_document.call(null, orchard.objects.app.db, inst_436827, "home");
            var state_436836__$1 = state_436836;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_436836__$1, 2, inst_436828)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_436840 = new Array(6);
            statearr_436840[0] = state_machine__4793__auto__;
            statearr_436840[1] = 1;
            return statearr_436840
          };
          var state_machine__4793__auto____1 = function(state_436836) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_436836);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_436836) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_436836)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_436841 = f__4865__auto__.call(null);
      statearr_436841[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_436841
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.objects.nav.create_document = function create_document(document_title) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_436870) {
        var state_val_436871 = state_436870[1];
        if(state_val_436871 === 2) {
          var inst_436864 = state_436870[2];
          var inst_436865 = orchard.objects.nav.clean_up.call(null);
          var inst_436866 = cljs.core.deref.call(null, inst_436864);
          var inst_436867 = (new cljs.core.Keyword("\ufdd0:id")).call(null, inst_436866);
          var inst_436868 = orchard.objects.app.open_document.call(null, orchard.objects.app.db, inst_436867);
          var state_436870__$1 = function() {
            var statearr_436872 = state_436870;
            statearr_436872[5] = inst_436865;
            return statearr_436872
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_436870__$1, inst_436868)
        }else {
          if(state_val_436871 === 1) {
            var inst_436859 = cljs.core.deref.call(null, orchard.objects.workspace.workspace);
            var inst_436860 = (new cljs.core.Keyword("\ufdd0:current-project")).call(null, inst_436859);
            var inst_436861 = clojure.string.replace.call(null, document_title, /Document Name: /, "");
            var inst_436862 = orchard.objects.nav.build_document.call(null, orchard.objects.app.db, inst_436860, inst_436861);
            var state_436870__$1 = state_436870;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_436870__$1, 2, inst_436862)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_436874 = new Array(6);
            statearr_436874[0] = state_machine__4793__auto__;
            statearr_436874[1] = 1;
            return statearr_436874
          };
          var state_machine__4793__auto____1 = function(state_436870) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_436870);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_436870) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_436870)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_436875 = f__4865__auto__.call(null);
      statearr_436875[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_436875
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.objects.nav.handle_enter = function handle_enter(this$, text) {
  if(cljs.core.truth_(orchard.objects.nav.transient_QMARK_.call(null, this$))) {
    orchard.objects.nav.hide_navbar.call(null)
  }else {
    orchard.objects.nav.set_input_text.call(null, "")
  }
  var pred__436879 = cljs.core._EQ_;
  var expr__436880 = (new cljs.core.Keyword("\ufdd0:mode")).call(null, cljs.core.deref.call(null, this$));
  if(pred__436879.call(null, "\ufdd0:document-create", expr__436880)) {
    orchard.objects.nav.create_document.call(null, text);
    return orchard.objects.nav.set_mode.call(null, this$, "\ufdd0:free")
  }else {
    if(pred__436879.call(null, "\ufdd0:project-create", expr__436880)) {
      orchard.objects.nav.create_project.call(null, text);
      return orchard.objects.nav.set_mode.call(null, this$, "\ufdd0:free")
    }else {
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__436880)].join(""));
    }
  }
};
orchard.objects.nav.handle_esc = function handle_esc(this$, text) {
  return orchard.objects.nav.clean_up.call(null)
};
orchard.objects.nav.handle_key = function handle_key(this$, text) {
  return orchard.util.log.log.call(null, "handle-key")
};
orchard.objects.nav.handle_keypress = function handle_keypress(this$, c) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_436953) {
        var state_val_436954 = state_436953[1];
        if(state_val_436954 === 1) {
          var state_436953__$1 = state_436953;
          var statearr_436955_436970 = state_436953__$1;
          statearr_436955_436970[2] = null;
          statearr_436955_436970[1] = 2;
          return"\ufdd0:recur"
        }else {
          if(state_val_436954 === 2) {
            var state_436953__$1 = state_436953;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_436953__$1, 4, c)
          }else {
            if(state_val_436954 === 3) {
              var inst_436951 = state_436953[2];
              var state_436953__$1 = state_436953;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_436953__$1, inst_436951)
            }else {
              if(state_val_436954 === 4) {
                var inst_436929 = state_436953[5];
                var inst_436928 = state_436953[2];
                var inst_436929__$1 = inst_436928.keyCode;
                var inst_436930 = cljs.core.deref.call(null, this$);
                var inst_436931 = (new cljs.core.Keyword("\ufdd0:mode")).call(null, inst_436930);
                var inst_436932 = orchard.objects.nav.get_input_text.call(null);
                var inst_436936 = cljs.core._EQ_.call(null, 13, inst_436929__$1);
                var state_436953__$1 = function() {
                  var statearr_436956 = state_436953;
                  statearr_436956[6] = inst_436932;
                  statearr_436956[7] = inst_436931;
                  statearr_436956[5] = inst_436929__$1;
                  return statearr_436956
                }();
                if(inst_436936) {
                  var statearr_436957_436971 = state_436953__$1;
                  statearr_436957_436971[1] = 5
                }else {
                  var statearr_436958_436972 = state_436953__$1;
                  statearr_436958_436972[1] = 6
                }
                return"\ufdd0:recur"
              }else {
                if(state_val_436954 === 5) {
                  var inst_436932 = state_436953[6];
                  var inst_436938 = orchard.objects.nav.handle_enter.call(null, this$, inst_436932);
                  var state_436953__$1 = state_436953;
                  var statearr_436959_436973 = state_436953__$1;
                  statearr_436959_436973[2] = inst_436938;
                  statearr_436959_436973[1] = 7;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_436954 === 6) {
                    var inst_436929 = state_436953[5];
                    var inst_436940 = cljs.core._EQ_.call(null, 27, inst_436929);
                    var state_436953__$1 = state_436953;
                    if(inst_436940) {
                      var statearr_436960_436974 = state_436953__$1;
                      statearr_436960_436974[1] = 8
                    }else {
                      var statearr_436961_436975 = state_436953__$1;
                      statearr_436961_436975[1] = 9
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_436954 === 7) {
                      var inst_436948 = state_436953[2];
                      var state_436953__$1 = function() {
                        var statearr_436962 = state_436953;
                        statearr_436962[8] = inst_436948;
                        return statearr_436962
                      }();
                      var statearr_436963_436976 = state_436953__$1;
                      statearr_436963_436976[2] = null;
                      statearr_436963_436976[1] = 2;
                      return"\ufdd0:recur"
                    }else {
                      if(state_val_436954 === 8) {
                        var inst_436932 = state_436953[6];
                        var inst_436942 = orchard.objects.nav.handle_esc.call(null, this$, inst_436932);
                        var state_436953__$1 = state_436953;
                        var statearr_436964_436977 = state_436953__$1;
                        statearr_436964_436977[2] = inst_436942;
                        statearr_436964_436977[1] = 10;
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_436954 === 9) {
                          var inst_436932 = state_436953[6];
                          var inst_436944 = orchard.objects.nav.handle_key.call(null, this$, inst_436932);
                          var state_436953__$1 = state_436953;
                          var statearr_436965_436978 = state_436953__$1;
                          statearr_436965_436978[2] = inst_436944;
                          statearr_436965_436978[1] = 10;
                          return"\ufdd0:recur"
                        }else {
                          if(state_val_436954 === 10) {
                            var inst_436946 = state_436953[2];
                            var state_436953__$1 = state_436953;
                            var statearr_436966_436979 = state_436953__$1;
                            statearr_436966_436979[2] = inst_436946;
                            statearr_436966_436979[1] = 7;
                            return"\ufdd0:recur"
                          }else {
                            return null
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_436968 = new Array(9);
            statearr_436968[0] = state_machine__4793__auto__;
            statearr_436968[1] = 1;
            return statearr_436968
          };
          var state_machine__4793__auto____1 = function(state_436953) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_436953);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_436953) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_436953)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_436969 = f__4865__auto__.call(null);
      statearr_436969[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_436969
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.objects.nav.start_create_project = function start_create_project(this$) {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = orchard.objects.nav.transient_QMARK_.call(null, this$);
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.core.not.call(null, orchard.objects.nav.visible_QMARK_.call(null))
    }else {
      return and__3941__auto__
    }
  }())) {
    orchard.objects.nav.show_navbar.call(null)
  }else {
  }
  orchard.objects.nav.set_mode.call(null, this$, "\ufdd0:project-create");
  orchard.objects.nav.set_input_text.call(null, "Project Name: ");
  return orchard.objects.nav.focus.call(null)
};
orchard.objects.nav.start_create_document = function start_create_document(this$) {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = orchard.objects.nav.transient_QMARK_.call(null, this$);
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.core.not.call(null, orchard.objects.nav.visible_QMARK_.call(null))
    }else {
      return and__3941__auto__
    }
  }())) {
    orchard.objects.nav.show_navbar.call(null)
  }else {
  }
  orchard.objects.nav.set_mode.call(null, this$, "\ufdd0:document-create");
  orchard.objects.nav.set_input_text.call(null, "Document Name: ");
  return orchard.objects.nav.focus.call(null)
};
orchard.objects.nav.init_navbar = function init_navbar(this$) {
  return orchard.objects.nav.$nav_input.call(null)["onkeypress"] = orchard.objects.app.handle_keypress
};
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.nav/add!", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:add!", null], true), "\ufdd0:reaction", function(this$) {
  return orchard.util.dom.append.call(null, orchard.util.dom.$.call(null, "body"), (new cljs.core.Keyword("\ufdd0:content")).call(null, cljs.core.deref.call(null, this$)))
});
orchard.object.object_STAR_.call(null, "\ufdd0:workspace-nav", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:add!", null], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.nav/add!"], true), "\ufdd0:locked?", true, "\ufdd0:mode", "\ufdd0:free", "\ufdd0:transient?", false, "\ufdd0:ready", orchard.objects.nav.init_navbar, "\ufdd0:window-width", orchard.util.dom.window_width.call(null), "\ufdd0:init", function(this$) {
  var key_chan = cljs.core.async.chan.call(null);
  orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:ready", orchard.objects.nav.init_navbar);
  orchard.objects.nav.handle_keypress.call(null, this$, key_chan);
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div#nav-wrapper.nav", cljs.core.PersistentVector.fromArray(["\ufdd0:ul#nav-list", orchard.objects.nav.home_btn.call(null), orchard.objects.nav.new_doc_btn.call(null), orchard.objects.nav.refresh_btn.call(null), orchard.objects.nav.text_input.call(null, this$, key_chan), orchard.objects.nav.lock_btn.call(null, this$), orchard.objects.nav.synch_btn.call(null), orchard.objects.nav.dev_tools_btn.call(null)], true)], true)
});
orchard.objects.nav.workspace_nav = orchard.object.create.call(null, "\ufdd0:workspace-nav");
orchard.dispatch.react_to.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0:resize-window", null], true), function() {
  var G__436982__delegate = function(ev, p__436980) {
    var vec__436981 = p__436980;
    var e = cljs.core.nth.call(null, vec__436981, 0, null);
    return orchard.object.assoc_BANG_.call(null, orchard.objects.nav.workspace_nav, "\ufdd0:window-width", e["target"]["innerWidth"])
  };
  var G__436982 = function(ev, var_args) {
    var p__436980 = null;
    if(arguments.length > 1) {
      p__436980 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__436982__delegate.call(this, ev, p__436980)
  };
  G__436982.cljs$lang$maxFixedArity = 1;
  G__436982.cljs$lang$applyTo = function(arglist__436983) {
    var ev = cljs.core.first(arglist__436983);
    var p__436980 = cljs.core.rest(arglist__436983);
    return G__436982__delegate(ev, p__436980)
  };
  G__436982.cljs$core$IFn$_invoke$arity$variadic = G__436982__delegate;
  return G__436982
}());
orchard.objects.nav.toggle = function() {
  var toggle = null;
  var toggle__0 = function() {
    return toggle.call(null, cljs.core.not.call(null, cljs.core.deref.call(null, orchard.objects.nav.visible_STAR_)))
  };
  var toggle__1 = function(b) {
    orchard.object.assoc_BANG_.call(null, orchard.objects.nav.workspace_nav, "\ufdd0:transient?", cljs.core.not.call(null, b));
    orchard.util.dom.css.call(null, orchard.util.dom.$.call(null, "#nav-wrapper"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:visibility", cljs.core.truth_(cljs.core.reset_BANG_.call(null, orchard.objects.nav.visible_STAR_, b)) ? "visible" : "hidden"], true));
    if(cljs.core.truth_(orchard.objects.nav.visible_QMARK_.call(null))) {
      return orchard.objects.nav.focus.call(null)
    }else {
      return null
    }
  };
  toggle = function(b) {
    switch(arguments.length) {
      case 0:
        return toggle__0.call(this);
      case 1:
        return toggle__1.call(this, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle.cljs$core$IFn$_invoke$arity$0 = toggle__0;
  toggle.cljs$core$IFn$_invoke$arity$1 = toggle__1;
  return toggle
}();
orchard.objects.nav.show_navbar = function show_navbar() {
  return orchard.objects.nav.toggle.call(null, true)
};
orchard.objects.nav.hide_navbar = function hide_navbar() {
  return orchard.objects.nav.toggle.call(null, false)
};
goog.provide("orchard.setup");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("orchard.model");
goog.require("orchard.util.log");
goog.require("orchard.util.core");
orchard.setup.save_home_project_BANG_ = function save_home_project_BANG_(db) {
  var index = orchard.model.index_module.call(null);
  var html = orchard.model.html_module.call(null);
  var tpl = orchard.model.single_column_template.call(null, (new cljs.core.Keyword("\ufdd0:id")).call(null, index), (new cljs.core.Keyword("\ufdd0:id")).call(null, html));
  var page = orchard.model.wiki_page.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:title", "Home", "\ufdd0:template", (new cljs.core.Keyword("\ufdd0:id")).call(null, tpl)], true));
  var project = orchard.model.project.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:title", "Home", "\ufdd0:root", (new cljs.core.Keyword("\ufdd0:id")).call(null, page)], true));
  var project__$1 = cljs.core.assoc.call(null, project, "\ufdd0:id", "\ufdd0:home");
  var seq__438119_438123 = cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([index, html, tpl, page, project__$1], true));
  var chunk__438120_438124 = null;
  var count__438121_438125 = 0;
  var i__438122_438126 = 0;
  while(true) {
    if(i__438122_438126 < count__438121_438125) {
      var obj_438127 = cljs.core._nth.call(null, chunk__438120_438124, i__438122_438126);
      orchard.model.save_object_BANG_.call(null, db, (new cljs.core.Keyword("\ufdd0:id")).call(null, obj_438127), obj_438127);
      var G__438128 = seq__438119_438123;
      var G__438129 = chunk__438120_438124;
      var G__438130 = count__438121_438125;
      var G__438131 = i__438122_438126 + 1;
      seq__438119_438123 = G__438128;
      chunk__438120_438124 = G__438129;
      count__438121_438125 = G__438130;
      i__438122_438126 = G__438131;
      continue
    }else {
      var temp__4092__auto___438132 = cljs.core.seq.call(null, seq__438119_438123);
      if(temp__4092__auto___438132) {
        var seq__438119_438133__$1 = temp__4092__auto___438132;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__438119_438133__$1)) {
          var c__3259__auto___438134 = cljs.core.chunk_first.call(null, seq__438119_438133__$1);
          var G__438135 = cljs.core.chunk_rest.call(null, seq__438119_438133__$1);
          var G__438136 = c__3259__auto___438134;
          var G__438137 = cljs.core.count.call(null, c__3259__auto___438134);
          var G__438138 = 0;
          seq__438119_438123 = G__438135;
          chunk__438120_438124 = G__438136;
          count__438121_438125 = G__438137;
          i__438122_438126 = G__438138;
          continue
        }else {
          var obj_438139 = cljs.core.first.call(null, seq__438119_438133__$1);
          orchard.model.save_object_BANG_.call(null, db, (new cljs.core.Keyword("\ufdd0:id")).call(null, obj_438139), obj_438139);
          var G__438140 = cljs.core.next.call(null, seq__438119_438133__$1);
          var G__438141 = null;
          var G__438142 = 0;
          var G__438143 = 0;
          seq__438119_438123 = G__438140;
          chunk__438120_438124 = G__438141;
          count__438121_438125 = G__438142;
          i__438122_438126 = G__438143;
          continue
        }
      }else {
      }
    }
    break
  }
  return project__$1
};
orchard.setup.check_home = function check_home(db) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_438181) {
        var state_val_438182 = state_438181[1];
        if(state_val_438182 === 5) {
          var inst_438179 = state_438181[2];
          var state_438181__$1 = state_438181;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_438181__$1, inst_438179)
        }else {
          if(state_val_438182 === 4) {
            var inst_438177 = orchard.util.log.log.call(null, "Found home project.");
            var state_438181__$1 = state_438181;
            var statearr_438183_438192 = state_438181__$1;
            statearr_438183_438192[2] = inst_438177;
            statearr_438183_438192[1] = 5;
            return"\ufdd0:recur"
          }else {
            if(state_val_438182 === 3) {
              var inst_438174 = orchard.util.log.log.call(null, "Creating home project...");
              var inst_438175 = orchard.setup.save_home_project_BANG_.call(null, db);
              var state_438181__$1 = function() {
                var statearr_438184 = state_438181;
                statearr_438184[5] = inst_438174;
                return statearr_438184
              }();
              var statearr_438185_438193 = state_438181__$1;
              statearr_438185_438193[2] = inst_438175;
              statearr_438185_438193[1] = 5;
              return"\ufdd0:recur"
            }else {
              if(state_val_438182 === 2) {
                var inst_438171 = state_438181[2];
                var inst_438172 = inst_438171 == null;
                var state_438181__$1 = state_438181;
                if(cljs.core.truth_(inst_438172)) {
                  var statearr_438186_438194 = state_438181__$1;
                  statearr_438186_438194[1] = 3
                }else {
                  var statearr_438187_438195 = state_438181__$1;
                  statearr_438187_438195[1] = 4
                }
                return"\ufdd0:recur"
              }else {
                if(state_val_438182 === 1) {
                  var inst_438168 = orchard.util.log.log.call(null, "Checking home...");
                  var inst_438169 = orchard.model.get_object.call(null, db, "\ufdd0:home");
                  var state_438181__$1 = function() {
                    var statearr_438188 = state_438181;
                    statearr_438188[6] = inst_438168;
                    return statearr_438188
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_438181__$1, 2, inst_438169)
                }else {
                  return null
                }
              }
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_438190 = new Array(7);
            statearr_438190[0] = state_machine__4793__auto__;
            statearr_438190[1] = 1;
            return statearr_438190
          };
          var state_machine__4793__auto____1 = function(state_438181) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_438181);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_438181) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_438181)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_438191 = f__4865__auto__.call(null);
      statearr_438191[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_438191
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.setup.test_doc = function test_doc(id, tpl_id) {
  return cljs.core.assoc.call(null, orchard.model.wiki_page.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:title", [cljs.core.str("test-doc["), cljs.core.str(id), cljs.core.str("]")].join(""), "\ufdd0:template", tpl_id], true)), "\ufdd0:id", id)
};
orchard.setup.create_test_doc = function create_test_doc(db) {
  var md_doc = orchard.model.markdown_module.call(null);
  var ht_doc = orchard.model.html_module.call(null);
  var tpl_doc = orchard.model.single_column_template.call(null, (new cljs.core.Keyword("\ufdd0:id")).call(null, md_doc), (new cljs.core.Keyword("\ufdd0:id")).call(null, ht_doc));
  var test_doc = orchard.setup.test_doc.call(null, "\ufdd0:test-doc1", (new cljs.core.Keyword("\ufdd0:id")).call(null, tpl_doc));
  var seq__438200 = cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([md_doc, ht_doc, tpl_doc, test_doc], true));
  var chunk__438201 = null;
  var count__438202 = 0;
  var i__438203 = 0;
  while(true) {
    if(i__438203 < count__438202) {
      var doc = cljs.core._nth.call(null, chunk__438201, i__438203);
      orchard.model.save_object_BANG_.call(null, db, (new cljs.core.Keyword("\ufdd0:id")).call(null, doc), doc);
      var G__438204 = seq__438200;
      var G__438205 = chunk__438201;
      var G__438206 = count__438202;
      var G__438207 = i__438203 + 1;
      seq__438200 = G__438204;
      chunk__438201 = G__438205;
      count__438202 = G__438206;
      i__438203 = G__438207;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__438200);
      if(temp__4092__auto__) {
        var seq__438200__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__438200__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__438200__$1);
          var G__438208 = cljs.core.chunk_rest.call(null, seq__438200__$1);
          var G__438209 = c__3259__auto__;
          var G__438210 = cljs.core.count.call(null, c__3259__auto__);
          var G__438211 = 0;
          seq__438200 = G__438208;
          chunk__438201 = G__438209;
          count__438202 = G__438210;
          i__438203 = G__438211;
          continue
        }else {
          var doc = cljs.core.first.call(null, seq__438200__$1);
          orchard.model.save_object_BANG_.call(null, db, (new cljs.core.Keyword("\ufdd0:id")).call(null, doc), doc);
          var G__438212 = cljs.core.next.call(null, seq__438200__$1);
          var G__438213 = null;
          var G__438214 = 0;
          var G__438215 = 0;
          seq__438200 = G__438212;
          chunk__438201 = G__438213;
          count__438202 = G__438214;
          i__438203 = G__438215;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
orchard.setup.create_media_doc = function create_media_doc(db) {
  var md_doc = orchard.model.markdown_module.call(null);
  var media_doc = orchard.model.media_module.call(null);
  var tpl_doc = orchard.model.single_column_template.call(null, (new cljs.core.Keyword("\ufdd0:id")).call(null, md_doc), (new cljs.core.Keyword("\ufdd0:id")).call(null, media_doc));
  var test_doc = orchard.setup.test_doc.call(null, "\ufdd0:test-doc1", (new cljs.core.Keyword("\ufdd0:id")).call(null, tpl_doc));
  var seq__438220 = cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([md_doc, media_doc, tpl_doc, test_doc], true));
  var chunk__438221 = null;
  var count__438222 = 0;
  var i__438223 = 0;
  while(true) {
    if(i__438223 < count__438222) {
      var doc = cljs.core._nth.call(null, chunk__438221, i__438223);
      orchard.model.save_object_BANG_.call(null, db, (new cljs.core.Keyword("\ufdd0:id")).call(null, doc), doc);
      var G__438224 = seq__438220;
      var G__438225 = chunk__438221;
      var G__438226 = count__438222;
      var G__438227 = i__438223 + 1;
      seq__438220 = G__438224;
      chunk__438221 = G__438225;
      count__438222 = G__438226;
      i__438223 = G__438227;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__438220);
      if(temp__4092__auto__) {
        var seq__438220__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__438220__$1)) {
          var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__438220__$1);
          var G__438228 = cljs.core.chunk_rest.call(null, seq__438220__$1);
          var G__438229 = c__3259__auto__;
          var G__438230 = cljs.core.count.call(null, c__3259__auto__);
          var G__438231 = 0;
          seq__438220 = G__438228;
          chunk__438221 = G__438229;
          count__438222 = G__438230;
          i__438223 = G__438231;
          continue
        }else {
          var doc = cljs.core.first.call(null, seq__438220__$1);
          orchard.model.save_object_BANG_.call(null, db, (new cljs.core.Keyword("\ufdd0:id")).call(null, doc), doc);
          var G__438232 = cljs.core.next.call(null, seq__438220__$1);
          var G__438233 = null;
          var G__438234 = 0;
          var G__438235 = 0;
          seq__438220 = G__438232;
          chunk__438221 = G__438233;
          count__438222 = G__438234;
          i__438223 = G__438235;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
goog.provide("orchard.objects.logger");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("crate.core");
goog.require("orchard.dispatch");
goog.require("orchard.util.core");
goog.require("orchard.util.dom");
goog.require("orchard.util.log");
goog.require("orchard.object");
orchard.objects.logger.ready_STAR_ = cljs.core.atom.call(null, false);
orchard.objects.logger.ready_QMARK_ = function ready_QMARK_() {
  return cljs.core.deref.call(null, orchard.objects.logger.ready_STAR_)
};
orchard.objects.logger.tab_content = function tab_content(id) {
  return orchard.util.dom.$.call(null, [cljs.core.str("#"), cljs.core.str(id)].join(""))
};
orchard.objects.logger.tab_ul = function tab_ul(id) {
  return orchard.util.dom.$.call(null, [cljs.core.str("#"), cljs.core.str(id), cljs.core.str(" ul")].join(""))
};
orchard.objects.logger.tab_elem = function tab_elem(id) {
  return orchard.util.dom.$.call(null, [cljs.core.str("li a[href='"), cljs.core.str(id), cljs.core.str("']")].join(""))
};
orchard.objects.logger.scroll_to = function() {
  var scroll_to = null;
  var scroll_to__2 = function(elem, pos) {
    return scroll_to.call(null, elem, pos, 1)
  };
  var scroll_to__3 = function(elem, pos, dur) {
    return $(elem).animate(cljs.core.clj__GT_js.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:scrollTop", pos], true)), dur)
  };
  scroll_to = function(elem, pos, dur) {
    switch(arguments.length) {
      case 2:
        return scroll_to__2.call(this, elem, pos);
      case 3:
        return scroll_to__3.call(this, elem, pos, dur)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll_to.cljs$core$IFn$_invoke$arity$2 = scroll_to__2;
  scroll_to.cljs$core$IFn$_invoke$arity$3 = scroll_to__3;
  return scroll_to
}();
orchard.objects.logger.scroll_to_top_of = function scroll_to_top_of(elem1, elem2) {
  return orchard.objects.logger.scroll_to.call(null, elem1, $(elem2).offset().top)
};
orchard.objects.logger.scroll_to_end = function scroll_to_end(elem) {
  return orchard.objects.logger.scroll_to.call(null, elem, elem.scrollHeight)
};
orchard.objects.logger.MAX_DIFF = 10;
orchard.objects.logger.append_message = function append_message(log_id, msg) {
  if(cljs.core.truth_(orchard.objects.logger.ready_QMARK_.call(null))) {
    var tab = orchard.objects.logger.tab_ul.call(null, log_id);
    var parent = orchard.util.dom.$.call(null, [cljs.core.str("#"), cljs.core.str(log_id)].join(""));
    var ptop = parent.scrollTop;
    var pheight = parent.scrollHeight - 200;
    var diff = ptop - pheight;
    var scroll_QMARK_ = diff < orchard.objects.logger.MAX_DIFF;
    orchard.util.dom.append.call(null, tab, crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:li.log-row", cljs.core.PersistentVector.fromArray(["\ufdd0:p", [cljs.core.str(msg)].join("")], true)], true)));
    if(scroll_QMARK_) {
      return orchard.objects.logger.scroll_to_end.call(null, parent)
    }else {
      return null
    }
  }else {
    return null
  }
};
orchard.objects.logger.tab = function() {
  var tab__delegate = function(id, label, args) {
    var e__431436__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:li", cljs.core._EQ_.call(null, "\ufdd0:active", cljs.core.first.call(null, args)) ? cljs.core.PersistentVector.fromArray(["\ufdd0:a.active", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:href", id, "\ufdd0:data-toggle", "tab"], true), label], true) : cljs.core.PersistentVector.fromArray(["\ufdd0:a", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:href", id, "\ufdd0:data-toggle", "tab"], true), label], 
    true)], true));
    var seq__435686_435692 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
    var chunk__435687_435693 = null;
    var count__435688_435694 = 0;
    var i__435689_435695 = 0;
    while(true) {
      if(i__435689_435695 < count__435688_435694) {
        var vec__435690_435696 = cljs.core._nth.call(null, chunk__435687_435693, i__435689_435695);
        var ev__431437__auto___435697 = cljs.core.nth.call(null, vec__435690_435696, 0, null);
        var func__431438__auto___435698 = cljs.core.nth.call(null, vec__435690_435696, 1, null);
        orchard.util.dom.on_event.call(null, e__431436__auto__, ev__431437__auto___435697, cljs.core.partial.call(null, func__431438__auto___435698, e__431436__auto__));
        var G__435699 = seq__435686_435692;
        var G__435700 = chunk__435687_435693;
        var G__435701 = count__435688_435694;
        var G__435702 = i__435689_435695 + 1;
        seq__435686_435692 = G__435699;
        chunk__435687_435693 = G__435700;
        count__435688_435694 = G__435701;
        i__435689_435695 = G__435702;
        continue
      }else {
        var temp__4092__auto___435703 = cljs.core.seq.call(null, seq__435686_435692);
        if(temp__4092__auto___435703) {
          var seq__435686_435704__$1 = temp__4092__auto___435703;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__435686_435704__$1)) {
            var c__3259__auto___435705 = cljs.core.chunk_first.call(null, seq__435686_435704__$1);
            var G__435706 = cljs.core.chunk_rest.call(null, seq__435686_435704__$1);
            var G__435707 = c__3259__auto___435705;
            var G__435708 = cljs.core.count.call(null, c__3259__auto___435705);
            var G__435709 = 0;
            seq__435686_435692 = G__435706;
            chunk__435687_435693 = G__435707;
            count__435688_435694 = G__435708;
            i__435689_435695 = G__435709;
            continue
          }else {
            var vec__435691_435710 = cljs.core.first.call(null, seq__435686_435704__$1);
            var ev__431437__auto___435711 = cljs.core.nth.call(null, vec__435691_435710, 0, null);
            var func__431438__auto___435712 = cljs.core.nth.call(null, vec__435691_435710, 1, null);
            orchard.util.dom.on_event.call(null, e__431436__auto__, ev__431437__auto___435711, cljs.core.partial.call(null, func__431438__auto___435712, e__431436__auto__));
            var G__435713 = cljs.core.next.call(null, seq__435686_435704__$1);
            var G__435714 = null;
            var G__435715 = 0;
            var G__435716 = 0;
            seq__435686_435692 = G__435713;
            chunk__435687_435693 = G__435714;
            count__435688_435694 = G__435715;
            i__435689_435695 = G__435716;
            continue
          }
        }else {
        }
      }
      break
    }
    return e__431436__auto__
  };
  var tab = function(id, label, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return tab__delegate.call(this, id, label, args)
  };
  tab.cljs$lang$maxFixedArity = 2;
  tab.cljs$lang$applyTo = function(arglist__435717) {
    var id = cljs.core.first(arglist__435717);
    arglist__435717 = cljs.core.next(arglist__435717);
    var label = cljs.core.first(arglist__435717);
    var args = cljs.core.rest(arglist__435717);
    return tab__delegate(id, label, args)
  };
  tab.cljs$core$IFn$_invoke$arity$variadic = tab__delegate;
  return tab
}();
orchard.objects.logger.tabs = function tabs() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.loggger-element", cljs.core.PersistentVector.fromArray(["\ufdd0:div.tabs-container", cljs.core.PersistentVector.fromArray(["\ufdd0:ul#logger-tabs.nav.nav-tabs", orchard.objects.logger.tab.call(null, "#log", "Log", "\ufdd0:active"), orchard.objects.logger.tab.call(null, "#couchdb", "Couchdb")], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.tab-content.logger-content-panes", cljs.core.PersistentVector.fromArray(["\ufdd0:div#log.tab-pane.log-pane.active", 
  cljs.core.PersistentVector.fromArray(["\ufdd0:ul.log-list"], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div#couchdb.tab-pane.log-pane", cljs.core.PersistentVector.fromArray(["\ufdd0:ul.log-list"], true)], true)], true)], true));
  var seq__435724_435730 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__435725_435731 = null;
  var count__435726_435732 = 0;
  var i__435727_435733 = 0;
  while(true) {
    if(i__435727_435733 < count__435726_435732) {
      var vec__435728_435734 = cljs.core._nth.call(null, chunk__435725_435731, i__435727_435733);
      var ev__431429__auto___435735 = cljs.core.nth.call(null, vec__435728_435734, 0, null);
      var func__431430__auto___435736 = cljs.core.nth.call(null, vec__435728_435734, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___435735, func__431430__auto___435736);
      var G__435737 = seq__435724_435730;
      var G__435738 = chunk__435725_435731;
      var G__435739 = count__435726_435732;
      var G__435740 = i__435727_435733 + 1;
      seq__435724_435730 = G__435737;
      chunk__435725_435731 = G__435738;
      count__435726_435732 = G__435739;
      i__435727_435733 = G__435740;
      continue
    }else {
      var temp__4092__auto___435741 = cljs.core.seq.call(null, seq__435724_435730);
      if(temp__4092__auto___435741) {
        var seq__435724_435742__$1 = temp__4092__auto___435741;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__435724_435742__$1)) {
          var c__3259__auto___435743 = cljs.core.chunk_first.call(null, seq__435724_435742__$1);
          var G__435744 = cljs.core.chunk_rest.call(null, seq__435724_435742__$1);
          var G__435745 = c__3259__auto___435743;
          var G__435746 = cljs.core.count.call(null, c__3259__auto___435743);
          var G__435747 = 0;
          seq__435724_435730 = G__435744;
          chunk__435725_435731 = G__435745;
          count__435726_435732 = G__435746;
          i__435727_435733 = G__435747;
          continue
        }else {
          var vec__435729_435748 = cljs.core.first.call(null, seq__435724_435742__$1);
          var ev__431429__auto___435749 = cljs.core.nth.call(null, vec__435729_435748, 0, null);
          var func__431430__auto___435750 = cljs.core.nth.call(null, vec__435729_435748, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___435749, func__431430__auto___435750);
          var G__435751 = cljs.core.next.call(null, seq__435724_435742__$1);
          var G__435752 = null;
          var G__435753 = 0;
          var G__435754 = 0;
          seq__435724_435730 = G__435751;
          chunk__435725_435731 = G__435752;
          count__435726_435732 = G__435753;
          i__435727_435733 = G__435754;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.logger.post = function post(type, msg) {
  return orchard.objects.logger.append_message.call(null, cljs.core.name.call(null, type), msg)
};
orchard.object.object_STAR_.call(null, "\ufdd0:logger", "\ufdd0:tags", cljs.core.PersistentHashSet.fromArray(["\ufdd0:logger", null], true), "\ufdd0:triggers", cljs.core.PersistentVector.EMPTY, "\ufdd0:behaviors", cljs.core.PersistentVector.EMPTY, "\ufdd0:delays", 0, "\ufdd0:init", function(this$) {
  return orchard.objects.logger.tabs.call(null)
});
orchard.objects.logger.logger = orchard.object.create.call(null, "\ufdd0:logger");
orchard.objects.logger.ready = function ready() {
  var log_panes = $(document, ".log-pane");
  var iter__3228__auto___435763 = function iter__435759(s__435760) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__435760__$1 = s__435760;
      while(true) {
        var temp__4092__auto__ = cljs.core.seq.call(null, s__435760__$1);
        if(temp__4092__auto__) {
          var s__435760__$2 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, s__435760__$2)) {
            var c__3226__auto__ = cljs.core.chunk_first.call(null, s__435760__$2);
            var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
            var b__435762 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
            if(function() {
              var i__435761 = 0;
              while(true) {
                if(i__435761 < size__3227__auto__) {
                  var i = cljs.core._nth.call(null, c__3226__auto__, i__435761);
                  cljs.core.chunk_append.call(null, b__435762, function() {
                    var elem = log_panes.get(i);
                    var height = elem.scrollHeight;
                    var cur_scroll = elem.scrollTop;
                    return null
                  }());
                  var G__435764 = i__435761 + 1;
                  i__435761 = G__435764;
                  continue
                }else {
                  return true
                }
                break
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__435762), iter__435759.call(null, cljs.core.chunk_rest.call(null, s__435760__$2)))
            }else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__435762), null)
            }
          }else {
            var i = cljs.core.first.call(null, s__435760__$2);
            return cljs.core.cons.call(null, function() {
              var elem = log_panes.get(i);
              var height = elem.scrollHeight;
              var cur_scroll = elem.scrollTop;
              return null
            }(), iter__435759.call(null, cljs.core.rest.call(null, s__435760__$2)))
          }
        }else {
          return null
        }
        break
      }
    }, null)
  };
  iter__3228__auto___435763.call(null, log_panes.size());
  orchard.util.dom.append.call(null, orchard.util.dom.$.call(null, "#logger"), (new cljs.core.Keyword("\ufdd0:content")).call(null, cljs.core.deref.call(null, orchard.objects.logger.logger)));
  $("#logger-tabs a:last").tab("show");
  return cljs.core.reset_BANG_.call(null, orchard.objects.logger.ready_STAR_, true)
};
orchard.dispatch.react_to.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0:log-message", null], true), function() {
  var G__435767__delegate = function(ev, p__435765) {
    var vec__435766 = p__435765;
    var data = cljs.core.nth.call(null, vec__435766, 0, null);
    return orchard.objects.logger.post.call(null, "\ufdd0:log", data)
  };
  var G__435767 = function(ev, var_args) {
    var p__435765 = null;
    if(arguments.length > 1) {
      p__435765 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__435767__delegate.call(this, ev, p__435765)
  };
  G__435767.cljs$lang$maxFixedArity = 1;
  G__435767.cljs$lang$applyTo = function(arglist__435768) {
    var ev = cljs.core.first(arglist__435768);
    var p__435765 = cljs.core.rest(arglist__435768);
    return G__435767__delegate(ev, p__435765)
  };
  G__435767.cljs$core$IFn$_invoke$arity$variadic = G__435767__delegate;
  return G__435767
}());
orchard.objects.logger.visible_STAR_ = cljs.core.atom.call(null, false);
orchard.objects.logger.toggle = function() {
  var toggle = null;
  var toggle__0 = function() {
    return toggle.call(null, cljs.core.not.call(null, cljs.core.deref.call(null, orchard.objects.logger.visible_STAR_)))
  };
  var toggle__1 = function(b) {
    return orchard.util.dom.css.call(null, orchard.util.dom.$.call(null, "#logger"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:visibility", cljs.core.truth_(cljs.core.reset_BANG_.call(null, orchard.objects.logger.visible_STAR_, b)) ? "visible" : "hidden"], true))
  };
  toggle = function(b) {
    switch(arguments.length) {
      case 0:
        return toggle__0.call(this);
      case 1:
        return toggle__1.call(this, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle.cljs$core$IFn$_invoke$arity$0 = toggle__0;
  toggle.cljs$core$IFn$_invoke$arity$1 = toggle__1;
  return toggle
}();
orchard.objects.logger.show_logger = function show_logger() {
  return orchard.objects.logger.toggle.call(null, true)
};
orchard.objects.logger.hide_logger = function hide_logger() {
  return orchard.objects.logger.toggle.call(null, false)
};
goog.provide("orchard.util.os");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("orchard.util.log");
goog.require("clojure.browser.repl");
orchard.util.os.fs = node_require("fs");
orchard.util.os.child_process = node_require("child_process");
orchard.util.os.shell = orchard.util.os.child_process.exec;
orchard.util.os.spawn = orchard.util.os.child_process.spawn;
orchard.util.os.DEFAULT_KILL_TIMEOUT = 1E3;
orchard.util.os.child_processes_STAR_ = function() {
  var or__3943__auto__ = global[[cljs.core.str(new cljs.core.Symbol(null, "orchard.util.os", "orchard.util.os", 1202143718, null)), cljs.core.str("/"), cljs.core.str("child-processes*")].join("")];
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return global[[cljs.core.str(new cljs.core.Symbol(null, "orchard.util.os", "orchard.util.os", 1202143718, null)), cljs.core.str("/"), cljs.core.str("child-processes*")].join("")] = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)
  }
}();
orchard.util.os.process = function() {
  var process__delegate = function(cmd, p__438730) {
    var map__438732 = p__438730;
    var map__438732__$1 = cljs.core.seq_QMARK_.call(null, map__438732) ? cljs.core.apply.call(null, cljs.core.hash_map, map__438732) : map__438732;
    var shell = cljs.core.get.call(null, map__438732__$1, "\ufdd0:shell");
    var child = orchard.util.os.spawn.call(null, cmd);
    cljs.core.swap_BANG_.call(null, orchard.util.os.child_processes_STAR_, cljs.core.assoc, child.pid, child);
    return child
  };
  var process = function(cmd, var_args) {
    var p__438730 = null;
    if(arguments.length > 1) {
      p__438730 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return process__delegate.call(this, cmd, p__438730)
  };
  process.cljs$lang$maxFixedArity = 1;
  process.cljs$lang$applyTo = function(arglist__438733) {
    var cmd = cljs.core.first(arglist__438733);
    var p__438730 = cljs.core.rest(arglist__438733);
    return process__delegate(cmd, p__438730)
  };
  process.cljs$core$IFn$_invoke$arity$variadic = process__delegate;
  return process
}();
orchard.util.os.kill_children = function() {
  var kill_children = null;
  var kill_children__0 = function() {
    return kill_children.call(null, orchard.util.os.DEFAULT_KILL_TIMEOUT)
  };
  var kill_children__1 = function(timeout) {
    return kill_children.call(null, timeout, "SIGQUIT")
  };
  var kill_children__2 = function(timeout, sig) {
    var seq__438740 = cljs.core.seq.call(null, cljs.core.deref.call(null, orchard.util.os.child_processes_STAR_));
    var chunk__438741 = null;
    var count__438742 = 0;
    var i__438743 = 0;
    while(true) {
      if(i__438743 < count__438742) {
        var vec__438744 = cljs.core._nth.call(null, chunk__438741, i__438743);
        var pid = cljs.core.nth.call(null, vec__438744, 0, null);
        var child = cljs.core.nth.call(null, vec__438744, 1, null);
        orchard.util.log.log.call(null, "killing child process: ", pid);
        child.kill(sig);
        var G__438746 = seq__438740;
        var G__438747 = chunk__438741;
        var G__438748 = count__438742;
        var G__438749 = i__438743 + 1;
        seq__438740 = G__438746;
        chunk__438741 = G__438747;
        count__438742 = G__438748;
        i__438743 = G__438749;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__438740);
        if(temp__4092__auto__) {
          var seq__438740__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__438740__$1)) {
            var c__3259__auto__ = cljs.core.chunk_first.call(null, seq__438740__$1);
            var G__438750 = cljs.core.chunk_rest.call(null, seq__438740__$1);
            var G__438751 = c__3259__auto__;
            var G__438752 = cljs.core.count.call(null, c__3259__auto__);
            var G__438753 = 0;
            seq__438740 = G__438750;
            chunk__438741 = G__438751;
            count__438742 = G__438752;
            i__438743 = G__438753;
            continue
          }else {
            var vec__438745 = cljs.core.first.call(null, seq__438740__$1);
            var pid = cljs.core.nth.call(null, vec__438745, 0, null);
            var child = cljs.core.nth.call(null, vec__438745, 1, null);
            orchard.util.log.log.call(null, "killing child process: ", pid);
            child.kill(sig);
            var G__438754 = cljs.core.next.call(null, seq__438740__$1);
            var G__438755 = null;
            var G__438756 = 0;
            var G__438757 = 0;
            seq__438740 = G__438754;
            chunk__438741 = G__438755;
            count__438742 = G__438756;
            i__438743 = G__438757;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  kill_children = function(timeout, sig) {
    switch(arguments.length) {
      case 0:
        return kill_children__0.call(this);
      case 1:
        return kill_children__1.call(this, timeout);
      case 2:
        return kill_children__2.call(this, timeout, sig)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  kill_children.cljs$core$IFn$_invoke$arity$0 = kill_children__0;
  kill_children.cljs$core$IFn$_invoke$arity$1 = kill_children__1;
  kill_children.cljs$core$IFn$_invoke$arity$2 = kill_children__2;
  return kill_children
}();
orchard.util.os.env = function env(k) {
  var e = cljs.core.js__GT_clj.call(null, node.process.env());
  var or__3943__auto__ = cljs.core.get.call(null, e, k);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    throw[cljs.core.str("missing key "), cljs.core.str(k)].join("");
  }
};
orchard.util.os.trap = function trap(sig, f) {
  return node.process.on([cljs.core.str("SIG"), cljs.core.str(sig)].join(""), f)
};
orchard.util.os.exit = function exit(status) {
  return node.process.exit(status)
};
orchard.util.os.open_file = function open_file(path) {
  return gui.Shell.openItem(path)
};
orchard.util.os.show_file = function show_file(path) {
  return gui.Shell.showItemInFolder(path)
};
orchard.util.os.write_file = function write_file(path, string) {
  return orchard.util.os.fs.writeFile(path, string)
};
orchard.util.os.open_url = function open_url(url) {
  return gui.Shell.openExternal(url)
};
goog.provide("orchard.util.nw");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("orchard.util.log");
orchard.util.nw.gui = node_require("nw.gui");
orchard.util.nw.window = function() {
  var window = null;
  var window__0 = function() {
    return orchard.util.nw.gui.Window.get()
  };
  var window__1 = function(window_object) {
    return orchard.util.nw.gui.Window.get(window_object)
  };
  window = function(window_object) {
    switch(arguments.length) {
      case 0:
        return window__0.call(this);
      case 1:
        return window__1.call(this, window_object)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  window.cljs$core$IFn$_invoke$arity$0 = window__0;
  window.cljs$core$IFn$_invoke$arity$1 = window__1;
  return window
}();
orchard.util.nw.show = function show() {
  var w = orchard.util.nw.window.call(null);
  w.show();
  return w.focus()
};
orchard.util.nw.toggle_full_screen = function toggle_full_screen() {
  return orchard.util.nw.window.call(null).toggleFullScreen()
};
orchard.util.nw.clipboard = function clipboard() {
  return orchard.util.nw.gui.Clipboard.get()
};
orchard.util.nw.get_clipboard = function get_clipboard() {
  return orchard.util.nw.clipboard.call(null).get("text")
};
orchard.util.nw.set_clipboard = function set_clipboard(txt) {
  return orchard.util.nw.clipboard.call(null).set(txt, "text")
};
orchard.util.nw.data_path = function data_path() {
  return[cljs.core.str(orchard.util.nw.gui.App.dataPath)].join("")
};
orchard.util.nw.menu_item = function menu_item(fields) {
  var ctor = orchard.util.nw.gui.MenuItem;
  return new ctor(cljs.core.clj__GT_js.call(null, fields))
};
orchard.util.nw.menu = function menu(items) {
  var ctor = orchard.util.nw.gui.Menu;
  var m = new ctor;
  var items__$1 = cljs.core.map.call(null, orchard.util.nw.menu_item, items);
  var seq__438662_438666 = cljs.core.seq.call(null, items__$1);
  var chunk__438663_438667 = null;
  var count__438664_438668 = 0;
  var i__438665_438669 = 0;
  while(true) {
    if(i__438665_438669 < count__438664_438668) {
      var item_438670 = cljs.core._nth.call(null, chunk__438663_438667, i__438665_438669);
      m.append(item_438670);
      var G__438671 = seq__438662_438666;
      var G__438672 = chunk__438663_438667;
      var G__438673 = count__438664_438668;
      var G__438674 = i__438665_438669 + 1;
      seq__438662_438666 = G__438671;
      chunk__438663_438667 = G__438672;
      count__438664_438668 = G__438673;
      i__438665_438669 = G__438674;
      continue
    }else {
      var temp__4092__auto___438675 = cljs.core.seq.call(null, seq__438662_438666);
      if(temp__4092__auto___438675) {
        var seq__438662_438676__$1 = temp__4092__auto___438675;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__438662_438676__$1)) {
          var c__3259__auto___438677 = cljs.core.chunk_first.call(null, seq__438662_438676__$1);
          var G__438678 = cljs.core.chunk_rest.call(null, seq__438662_438676__$1);
          var G__438679 = c__3259__auto___438677;
          var G__438680 = cljs.core.count.call(null, c__3259__auto___438677);
          var G__438681 = 0;
          seq__438662_438666 = G__438678;
          chunk__438663_438667 = G__438679;
          count__438664_438668 = G__438680;
          i__438665_438669 = G__438681;
          continue
        }else {
          var item_438682 = cljs.core.first.call(null, seq__438662_438676__$1);
          m.append(item_438682);
          var G__438683 = cljs.core.next.call(null, seq__438662_438676__$1);
          var G__438684 = null;
          var G__438685 = 0;
          var G__438686 = 0;
          seq__438662_438666 = G__438683;
          chunk__438663_438667 = G__438684;
          count__438664_438668 = G__438685;
          i__438665_438669 = G__438686;
          continue
        }
      }else {
      }
    }
    break
  }
  return m
};
orchard.util.nw.menu_bar = function menu_bar(menus) {
  var ctor = orchard.util.nw.gui.Menu;
  var bar = new ctor(cljs.core.clj__GT_js.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "menubar"], true)));
  var seq__438693_438699 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, menus));
  var chunk__438694_438700 = null;
  var count__438695_438701 = 0;
  var i__438696_438702 = 0;
  while(true) {
    if(i__438696_438702 < count__438695_438701) {
      var vec__438697_438703 = cljs.core._nth.call(null, chunk__438694_438700, i__438696_438702);
      var label_438704 = cljs.core.nth.call(null, vec__438697_438703, 0, null);
      var items_438705 = cljs.core.nth.call(null, vec__438697_438703, 1, null);
      var sub_menu_438706 = orchard.util.nw.menu.call(null, items_438705);
      var item_438707 = orchard.util.nw.menu_item.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:label", label_438704], true));
      item_438707.submenu = sub_menu_438706;
      bar.append(item_438707);
      var G__438708 = seq__438693_438699;
      var G__438709 = chunk__438694_438700;
      var G__438710 = count__438695_438701;
      var G__438711 = i__438696_438702 + 1;
      seq__438693_438699 = G__438708;
      chunk__438694_438700 = G__438709;
      count__438695_438701 = G__438710;
      i__438696_438702 = G__438711;
      continue
    }else {
      var temp__4092__auto___438712 = cljs.core.seq.call(null, seq__438693_438699);
      if(temp__4092__auto___438712) {
        var seq__438693_438713__$1 = temp__4092__auto___438712;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__438693_438713__$1)) {
          var c__3259__auto___438714 = cljs.core.chunk_first.call(null, seq__438693_438713__$1);
          var G__438715 = cljs.core.chunk_rest.call(null, seq__438693_438713__$1);
          var G__438716 = c__3259__auto___438714;
          var G__438717 = cljs.core.count.call(null, c__3259__auto___438714);
          var G__438718 = 0;
          seq__438693_438699 = G__438715;
          chunk__438694_438700 = G__438716;
          count__438695_438701 = G__438717;
          i__438696_438702 = G__438718;
          continue
        }else {
          var vec__438698_438719 = cljs.core.first.call(null, seq__438693_438713__$1);
          var label_438720 = cljs.core.nth.call(null, vec__438698_438719, 0, null);
          var items_438721 = cljs.core.nth.call(null, vec__438698_438719, 1, null);
          var sub_menu_438722 = orchard.util.nw.menu.call(null, items_438721);
          var item_438723 = orchard.util.nw.menu_item.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:label", label_438720], true));
          item_438723.submenu = sub_menu_438722;
          bar.append(item_438723);
          var G__438724 = cljs.core.next.call(null, seq__438693_438713__$1);
          var G__438725 = null;
          var G__438726 = 0;
          var G__438727 = 0;
          seq__438693_438699 = G__438724;
          chunk__438694_438700 = G__438725;
          count__438695_438701 = G__438726;
          i__438696_438702 = G__438727;
          continue
        }
      }else {
      }
    }
    break
  }
  return bar
};
orchard.util.nw.set_menu_bar_BANG_ = function set_menu_bar_BANG_(bar) {
  return orchard.util.nw.window.call(null).menu = bar
};
orchard.util.nw.argv = function argv() {
  return cljs.core.seq.call(null, orchard.util.nw.gui.App.argv)
};
orchard.util.nw.quit = function quit() {
  return orchard.util.nw.gui.App.quit()
};
if(cljs.core.truth_(global.app_tray)) {
}else {
  global.app_tray = cljs.core.atom.call(null, null)
}
orchard.util.nw.app_tray = global.app_tray;
orchard.util.nw.tray_BANG_ = function tray_BANG_(options) {
  var temp__4092__auto___438728 = cljs.core.deref.call(null, orchard.util.nw.app_tray);
  if(cljs.core.truth_(temp__4092__auto___438728)) {
    var tray_438729 = temp__4092__auto___438728;
    tray_438729.remove()
  }else {
  }
  var tray_constructor = orchard.util.nw.gui.Tray;
  return cljs.core.reset_BANG_.call(null, orchard.util.nw.app_tray, new tray_constructor(cljs.core.clj__GT_js.call(null, options)))
};
orchard.util.nw.update_tray = function update_tray(option, value) {
  return cljs.core.deref.call(null, orchard.util.nw.app_tray)[cljs.core.name.call(null, option)] = value
};
goog.provide("orchard.objects.project");
goog.require("cljs.core");
goog.require("orchard.util.dom");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("crate.binding");
goog.require("orchard.util.log");
goog.require("orchard.util.dom");
goog.require("orchard.model");
goog.require("orchard.objects.templates.single_column");
goog.require("orchard.dispatch");
goog.require("crate.binding");
goog.require("orchard.object");
goog.require("cljs.core.async");
goog.require("orchard.util.core");
goog.require("orchard.module");
orchard.object.object_STAR_.call(null, "\ufdd0:project", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:ready", null, "\ufdd0:save", null], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.project/ready"], true), "\ufdd0:title", "", "\ufdd0:init", function(this$) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_437161) {
        var state_val_437162 = state_437161[1];
        if(state_val_437162 === 1) {
          var inst_437152 = orchard.util.log.log.call(null, "rendering project...");
          var inst_437153 = cljs.core.deref.call(null, this$);
          var inst_437154 = orchard.util.log.log_obj.call(null, inst_437153);
          var inst_437155 = cljs.core.deref.call(null, this$);
          var inst_437156 = (new cljs.core.Keyword("\ufdd0:db")).call(null, inst_437155);
          var inst_437157 = cljs.core.deref.call(null, this$);
          var inst_437158 = (new cljs.core.Keyword("\ufdd0:root")).call(null, inst_437157);
          var inst_437159 = orchard.model.load_object.call(null, inst_437156, inst_437158);
          var state_437161__$1 = function() {
            var statearr_437163 = state_437161;
            statearr_437163[5] = inst_437159;
            statearr_437163[6] = inst_437154;
            statearr_437163[7] = inst_437152;
            return statearr_437163
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_437161__$1, null)
        }else {
          return null
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_437165 = new Array(8);
            statearr_437165[0] = state_machine__4793__auto__;
            statearr_437165[1] = 1;
            return statearr_437165
          };
          var state_machine__4793__auto____1 = function(state_437161) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_437161);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_437161) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_437161)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_437166 = f__4865__auto__.call(null);
      statearr_437166[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_437166
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
});
goog.provide("orchard.objects.app");
goog.require("cljs.core");
goog.require("orchard.util.time");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("orchard.util.time");
goog.require("orchard.objects.nav");
goog.require("orchard.util.nw");
goog.require("orchard.objects.wiki_page");
goog.require("orchard.util.log");
goog.require("orchard.setup");
goog.require("orchard.model");
goog.require("orchard.objects.workspace");
goog.require("orchard.util.dom");
goog.require("orchard.objects.sidebar");
goog.require("orchard.dispatch");
goog.require("orchard.objects.logger");
goog.require("orchard.util.os");
goog.require("orchard.object");
goog.require("orchard.util.time");
goog.require("orchard.kv_store");
goog.require("cljs.core.async");
goog.require("orchard.util.core");
goog.require("orchard.objects.project");
orchard.objects.app.db = null;
orchard.objects.app.gui = node_require("nw.gui");
orchard.objects.app.win = orchard.objects.app.gui.Window.get();
orchard.objects.app.closing = true;
orchard.objects.app.windows = global.windows;
orchard.objects.app.setup_tray = function setup_tray() {
  return orchard.util.nw.tray_BANG_.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:title", "Thinker", "\ufdd0:menu", orchard.util.nw.menu.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:label", "Show", "\ufdd0:onclick", function() {
    return orchard.util.nw.window.call(null).show()
  }], true), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "separator"], true), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:label", "Quit", "\ufdd0:onclick", function() {
    return orchard.object.raise.call(null, orchard.objects.app.app, "\ufdd0:quit")
  }], true)], true))], true))
};
orchard.objects.app.prevent_close = function prevent_close() {
  return orchard.objects.app.closing = false
};
orchard.objects.app.close = function close(force_QMARK_) {
  if(cljs.core.truth_(force_QMARK_)) {
    orchard.object.raise.call(null, orchard.objects.app.app, "\ufdd0:closed")
  }else {
  }
  return orchard.objects.app.win.close(force_QMARK_)
};
orchard.objects.app.refresh = function refresh() {
  return window.location.reload(true)
};
orchard.objects.app.main_menu = function main_menu() {
  return orchard.util.nw.menu_bar.call(null, cljs.core.PersistentVector.fromArray(["File", cljs.core.PersistentVector.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:label", "New Page", "\ufdd0:click", function() {
    var G__435452__delegate = function(args) {
      orchard.util.log.log.call(null, "New Page clicked!");
      return orchard.util.log.log_obj.call(null, args)
    };
    var G__435452 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__435452__delegate.call(this, args)
    };
    G__435452.cljs$lang$maxFixedArity = 0;
    G__435452.cljs$lang$applyTo = function(arglist__435453) {
      var args = cljs.core.seq(arglist__435453);
      return G__435452__delegate(args)
    };
    G__435452.cljs$core$IFn$_invoke$arity$variadic = G__435452__delegate;
    return G__435452
  }()], true), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:label", "New Project"], true)], true), "Edit", cljs.core.PersistentVector.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:label", "Find"], true)], true), "View", cljs.core.PersistentVector.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:label", "Toggle Text Styles"], true), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:label", "Status Bar"], true)], true)], true))
};
orchard.objects.app.open_window = function open_window() {
  var id = cljs.core.swap_BANG_.call(null, global.windowsId, cljs.core.inc);
  var w = orchard.objects.app.gui.Window.open("index.html", cljs.core.clj__GT_js.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:toolbar", false, "\ufdd0:show", false], true)));
  w.window_id = id;
  return cljs.core.swap_BANG_.call(null, orchard.objects.app.windows, cljs.core.assoc, id, w)
};
orchard.objects.app.save_session = function save_session() {
  return orchard.kv_store.local_set.call(null, "\ufdd0:session", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", orchard.objects.app.win.x, "\ufdd0:y", orchard.objects.app.win.y, "\ufdd0:width", orchard.objects.app.win.width, "\ufdd0:height", orchard.objects.app.win.height], true))
};
orchard.objects.app.restore_session = function restore_session() {
  var temp__4090__auto__ = cljs.core.js__GT_clj.call(null, orchard.kv_store.local_get.call(null, "\ufdd0:session"));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var sesh = temp__4090__auto__;
    var sesh__$1 = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
      var iter__3228__auto__ = function iter__435462(s__435463) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__435463__$1 = s__435463;
          while(true) {
            var temp__4092__auto__ = cljs.core.seq.call(null, s__435463__$1);
            if(temp__4092__auto__) {
              var s__435463__$2 = temp__4092__auto__;
              if(cljs.core.chunked_seq_QMARK_.call(null, s__435463__$2)) {
                var c__3226__auto__ = cljs.core.chunk_first.call(null, s__435463__$2);
                var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
                var b__435465 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
                if(function() {
                  var i__435464 = 0;
                  while(true) {
                    if(i__435464 < size__3227__auto__) {
                      var vec__435468 = cljs.core._nth.call(null, c__3226__auto__, i__435464);
                      var k = cljs.core.nth.call(null, vec__435468, 0, null);
                      var v = cljs.core.nth.call(null, vec__435468, 1, null);
                      cljs.core.chunk_append.call(null, b__435465, cljs.core.PersistentVector.fromArray([k, parseInt(v)], true));
                      var G__435470 = i__435464 + 1;
                      i__435464 = G__435470;
                      continue
                    }else {
                      return true
                    }
                    break
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__435465), iter__435462.call(null, cljs.core.chunk_rest.call(null, s__435463__$2)))
                }else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__435465), null)
                }
              }else {
                var vec__435469 = cljs.core.first.call(null, s__435463__$2);
                var k = cljs.core.nth.call(null, vec__435469, 0, null);
                var v = cljs.core.nth.call(null, vec__435469, 1, null);
                return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([k, parseInt(v)], true), iter__435462.call(null, cljs.core.rest.call(null, s__435463__$2)))
              }
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__3228__auto__.call(null, sesh)
    }());
    orchard.objects.app.win.moveTo((new cljs.core.Keyword("\ufdd0:x")).call(null, sesh__$1), (new cljs.core.Keyword("\ufdd0:y")).call(null, sesh__$1));
    return orchard.objects.app.win.resizeTo((new cljs.core.Keyword("\ufdd0:width")).call(null, sesh__$1), (new cljs.core.Keyword("\ufdd0:height")).call(null, sesh__$1))
  }else {
    return null
  }
};
orchard.objects.app.ready_QMARK_ = function ready_QMARK_(this$) {
  return cljs.core._EQ_.call(null, 0, (new cljs.core.Keyword("\ufdd0:delays")).call(null, cljs.core.deref.call(null, this$)))
};
orchard.objects.app.open_document = function open_document(db, doc_id) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_435486) {
        var state_val_435487 = state_435486[1];
        if(state_val_435487 === 2) {
          var inst_435483 = state_435486[2];
          var inst_435484 = orchard.object.raise.call(null, orchard.objects.workspace.workspace, "\ufdd0:show-page", inst_435483);
          var state_435486__$1 = state_435486;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_435486__$1, inst_435484)
        }else {
          if(state_val_435487 === 1) {
            var inst_435481 = orchard.model.load_object.call(null, db, doc_id);
            var state_435486__$1 = state_435486;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_435486__$1, 2, inst_435481)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_435489 = new Array(5);
            statearr_435489[0] = state_machine__4793__auto__;
            statearr_435489[1] = 1;
            return statearr_435489
          };
          var state_machine__4793__auto____1 = function(state_435486) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_435486);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_435486) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_435486)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_435490 = f__4865__auto__.call(null);
      statearr_435490[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_435490
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.objects.app.show_project = function show_project(db, id) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_435508) {
        var state_val_435509 = state_435508[1];
        if(state_val_435509 === 2) {
          var inst_435504 = state_435508[2];
          var inst_435505 = (new cljs.core.Keyword("\ufdd0:root")).call(null, inst_435504);
          var inst_435506 = orchard.objects.app.open_document.call(null, db, inst_435505);
          var state_435508__$1 = state_435508;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_435508__$1, inst_435506)
        }else {
          if(state_val_435509 === 1) {
            var inst_435502 = orchard.model.get_object.call(null, db, id);
            var state_435508__$1 = state_435508;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_435508__$1, 2, inst_435502)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_435511 = new Array(5);
            statearr_435511[0] = state_machine__4793__auto__;
            statearr_435511[1] = 1;
            return statearr_435511
          };
          var state_machine__4793__auto____1 = function(state_435508) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_435508);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_435508) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_435508)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_435512 = f__4865__auto__.call(null);
      statearr_435512[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_435512
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.objects.app.open_from_link = function open_from_link(href) {
  orchard.util.log.log.call(null, "open-from-link ", href);
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_435568) {
        var state_val_435569 = state_435568[1];
        if(state_val_435569 === 5) {
          var inst_435566 = state_435568[2];
          var state_435568__$1 = state_435568;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_435568__$1, inst_435566)
        }else {
          if(state_val_435569 === 4) {
            var inst_435564 = orchard.util.log.log.call(null, "Tried to open document that doesn't exist");
            var state_435568__$1 = state_435568;
            var statearr_435570_435579 = state_435568__$1;
            statearr_435570_435579[2] = inst_435564;
            statearr_435570_435579[1] = 5;
            return"\ufdd0:recur"
          }else {
            if(state_val_435569 === 3) {
              var inst_435559 = state_435568[5];
              var inst_435561 = (new cljs.core.Keyword("\ufdd0:_id")).call(null, inst_435559);
              var inst_435562 = orchard.objects.app.open_document.call(null, orchard.objects.app.db, inst_435561);
              var state_435568__$1 = state_435568;
              var statearr_435571_435580 = state_435568__$1;
              statearr_435571_435580[2] = inst_435562;
              statearr_435571_435580[1] = 5;
              return"\ufdd0:recur"
            }else {
              if(state_val_435569 === 2) {
                var inst_435559 = state_435568[5];
                var inst_435548 = state_435568[6];
                var inst_435549 = state_435568[7];
                var inst_435547 = state_435568[8];
                var inst_435552 = state_435568[2];
                var inst_435553 = function() {
                  var all_docs = inst_435552;
                  var title = inst_435549;
                  var project_title = inst_435548;
                  var vec__435546 = inst_435547;
                  return function(all_docs, title, project_title, vec__435546, inst_435559, inst_435548, inst_435549, inst_435547, inst_435552, state_val_435569) {
                    return function(m, wiki_page) {
                      var proj = function() {
                        var or__3943__auto__ = (new cljs.core.Keyword("\ufdd0:project")).call(null, wiki_page);
                        if(cljs.core.truth_(or__3943__auto__)) {
                          return or__3943__auto__
                        }else {
                          return"No Project"
                        }
                      }();
                      return cljs.core.assoc_in.call(null, m, cljs.core.PersistentVector.fromArray([clojure.string.lower_case.call(null, proj), clojure.string.lower_case.call(null, (new cljs.core.Keyword("\ufdd0:title")).call(null, wiki_page))], true), wiki_page)
                    }
                  }(all_docs, title, project_title, vec__435546, inst_435559, inst_435548, inst_435549, inst_435547, inst_435552, state_val_435569)
                }();
                var inst_435554 = cljs.core.hash_map.call(null);
                var inst_435555 = cljs.core.reduce.call(null, inst_435553, inst_435554, inst_435552);
                var inst_435556 = clojure.string.lower_case.call(null, inst_435548);
                var inst_435557 = clojure.string.lower_case.call(null, inst_435549);
                var inst_435558 = cljs.core.vector.call(null, inst_435556, inst_435557);
                var inst_435559__$1 = cljs.core.get_in.call(null, inst_435555, inst_435558);
                var state_435568__$1 = function() {
                  var statearr_435572 = state_435568;
                  statearr_435572[5] = inst_435559__$1;
                  return statearr_435572
                }();
                if(cljs.core.truth_(inst_435559__$1)) {
                  var statearr_435573_435581 = state_435568__$1;
                  statearr_435573_435581[1] = 3
                }else {
                  var statearr_435574_435582 = state_435568__$1;
                  statearr_435574_435582[1] = 4
                }
                return"\ufdd0:recur"
              }else {
                if(state_val_435569 === 1) {
                  var inst_435547 = state_435568[8];
                  var inst_435547__$1 = clojure.string.split.call(null, href, /\//);
                  var inst_435548 = cljs.core.nth.call(null, inst_435547__$1, 0, null);
                  var inst_435549 = cljs.core.nth.call(null, inst_435547__$1, 1, null);
                  var inst_435550 = orchard.model.all_wiki_pages.call(null, orchard.objects.app.db);
                  var state_435568__$1 = function() {
                    var statearr_435575 = state_435568;
                    statearr_435575[6] = inst_435548;
                    statearr_435575[7] = inst_435549;
                    statearr_435575[8] = inst_435547__$1;
                    return statearr_435575
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_435568__$1, 2, inst_435550)
                }else {
                  return null
                }
              }
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_435577 = new Array(9);
            statearr_435577[0] = state_machine__4793__auto__;
            statearr_435577[1] = 1;
            return statearr_435577
          };
          var state_machine__4793__auto____1 = function(state_435568) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_435568);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_435568) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_435568)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_435578 = f__4865__auto__.call(null);
      statearr_435578[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_435578
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.app/refresh", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:refresh", null], true), "\ufdd0:reaction", function(this$) {
  return orchard.objects.app.refresh.call(null)
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.app/start", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:start", null], true), "\ufdd0:reaction", function(this$, db) {
  orchard.util.nw.set_menu_bar_BANG_.call(null, orchard.objects.app.main_menu.call(null));
  orchard.objects.app.win.on("close", function() {
    orchard.objects.app.save_session.call(null);
    orchard.object.raise.call(null, this$, "\ufdd0:quit");
    var this$__$1 = this;
    return this$__$1.close(true)
  });
  orchard.object.raise.call(null, orchard.objects.nav.workspace_nav, "\ufdd0:add!");
  window["onresize"] = function(p1__435583_SHARP_) {
    return orchard.dispatch.fire.call(null, "\ufdd0:resize-window", p1__435583_SHARP_)
  };
  $(".sidebar-tab-item").tooltip();
  orchard.util.nw.show.call(null);
  return orchard.objects.app.show_project.call(null, db, "\ufdd0:home")
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.app/quit", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:quit", null], true), "\ufdd0:reaction", function(this$) {
  orchard.util.os.kill_children.call(null);
  return orchard.util.nw.quit.call(null)
});
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.app/show-dev-tools", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:show-dev-tools", null], true), "\ufdd0:reaction", function(this$) {
  return orchard.objects.app.win.showDevTools()
});
orchard.object.object_STAR_.call(null, "\ufdd0:orchard.objects.app/app", "\ufdd0:tags", cljs.core.PersistentHashSet.fromArray(["\ufdd0:app", null], true), "\ufdd0:triggers", cljs.core.PersistentVector.fromArray(["\ufdd0:quit", "\ufdd0:show-dev-tools", "\ufdd0:start", "\ufdd0:refresh"], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.app/quit", "\ufdd0:orchard.objects.app/show-dev-tools", "\ufdd0:orchard.objects.app/start", "\ufdd0:orchard.objects.app/refresh"], 
true), "\ufdd0:delays", 0, "\ufdd0:init", function(this$) {
  return null
});
if(cljs.core.truth_(global.windows)) {
}else {
  global.windows = cljs.core.atom.call(null, cljs.core.sorted_map.call(null, 0, orchard.objects.app.win));
  global.windowsId = cljs.core.atom.call(null, 0);
  orchard.objects.app.win.ltid = 0
}
orchard.objects.app.windows = global.windows;
orchard.objects.app.app = orchard.object.create.call(null, "\ufdd0:orchard.objects.app/app");
orchard.objects.app.last_key = cljs.core.atom.call(null, null);
orchard.objects.app.ctrl_events = cljs.core.PersistentArrayMap.fromArray([12, orchard.objects.logger.toggle, 6, orchard.objects.nav.toggle, 8, cljs.core.partial.call(null, orchard.objects.app.open_document, "\ufdd0:home"), 18, cljs.core.partial.call(null, orchard.object.raise, orchard.objects.app.app, "\ufdd0:refresh"), 14, cljs.core.partial.call(null, orchard.objects.nav.start_create_document, orchard.objects.nav.workspace_nav), 4, cljs.core.partial.call(null, orchard.object.raise, orchard.objects.app.app, 
"\ufdd0:show-dev-tools")], true);
orchard.objects.app.ctrl_shift_events = cljs.core.PersistentArrayMap.fromArray([14, cljs.core.partial.call(null, orchard.objects.nav.start_create_project, orchard.objects.nav.workspace_nav)], true);
orchard.objects.app.handle_keypress = function handle_keypress(e) {
  var key_code = e.keyCode;
  if(cljs.core.truth_(e.ctrlKey)) {
    if(cljs.core.truth_(e.shiftKey)) {
      if(cljs.core.truth_(orchard.util.core.has_QMARK_.call(null, cljs.core.keys.call(null, orchard.objects.app.ctrl_shift_events), key_code))) {
        var f = cljs.core.get.call(null, orchard.objects.app.ctrl_shift_events, key_code);
        return f.call(null)
      }else {
        return null
      }
    }else {
      if(cljs.core.truth_(orchard.util.core.has_QMARK_.call(null, cljs.core.keys.call(null, orchard.objects.app.ctrl_events), key_code))) {
        var f = cljs.core.get.call(null, orchard.objects.app.ctrl_events, key_code);
        return f.call(null)
      }else {
        return null
      }
    }
  }else {
    return null
  }
};
window["onkeypress"] = orchard.objects.app.handle_keypress;
orchard.objects.app.APP_INFO = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", "\ufdd0:app-info", "\ufdd0:version", 0.1], true);
orchard.objects.app.body = function body() {
  return window.document.querySelector("body")
};
orchard.objects.app.load_js_file = function load_js_file(path) {
  var js_file = document.createElement("script");
  js_file["src"] = path;
  js_file["type"] = "text/javascript";
  js_file["async"] = false;
  orchard.objects.app.body.call(null).appendChild(js_file);
  return js_file
};
orchard.objects.app.init_aloha = function init_aloha() {
  window["requireNode"] = window.require;
  window["require"] = null;
  orchard.objects.app.load_js_file.call(null, "js/aloha/require.js");
  return orchard.objects.app.load_js_file.call(null, "js/aloha/aloha.js")
};
orchard.objects.app.init = function init() {
  orchard.objects.app.win.showDevTools();
  orchard.objects.app.db = orchard.kv_store.local_store.call(null);
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_435655) {
        var state_val_435656 = state_435655[1];
        if(state_val_435656 === 8) {
          var inst_435642 = state_435655[2];
          var inst_435643 = orchard.util.log.log.call(null, "done checking home");
          var inst_435644 = orchard.kv_store.local_set.call(null, "\ufdd0:app-info", orchard.objects.app.APP_INFO);
          var state_435655__$1 = function() {
            var statearr_435657 = state_435655;
            statearr_435657[5] = inst_435642;
            statearr_435657[6] = inst_435643;
            return statearr_435657
          }();
          var statearr_435658_435672 = state_435655__$1;
          statearr_435658_435672[2] = inst_435644;
          statearr_435658_435672[1] = 7;
          return"\ufdd0:recur"
        }else {
          if(state_val_435656 === 7) {
            var inst_435647 = state_435655[2];
            var inst_435648 = orchard.util.log.log.call(null, "Prepare logger");
            var inst_435649 = orchard.objects.logger.ready.call(null);
            var inst_435650 = orchard.util.log.log.call(null, "Init Aloha");
            var inst_435651 = orchard.objects.app.init_aloha.call(null);
            var inst_435652 = orchard.util.log.log.call(null, "Ready to start app...");
            var inst_435653 = orchard.object.raise.call(null, orchard.objects.app.app, "\ufdd0:start", orchard.objects.app.db);
            var state_435655__$1 = function() {
              var statearr_435659 = state_435655;
              statearr_435659[7] = inst_435647;
              statearr_435659[8] = inst_435648;
              statearr_435659[9] = inst_435649;
              statearr_435659[10] = inst_435652;
              statearr_435659[11] = inst_435650;
              statearr_435659[12] = inst_435651;
              return statearr_435659
            }();
            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_435655__$1, inst_435653)
          }else {
            if(state_val_435656 === 6) {
              var state_435655__$1 = state_435655;
              var statearr_435660_435673 = state_435655__$1;
              statearr_435660_435673[2] = null;
              statearr_435660_435673[1] = 7;
              return"\ufdd0:recur"
            }else {
              if(state_val_435656 === 5) {
                var inst_435638 = orchard.kv_store.local_clear.call(null);
                var inst_435639 = orchard.util.log.log.call(null, "start checking home");
                var inst_435640 = orchard.setup.check_home.call(null, orchard.objects.app.db);
                var state_435655__$1 = function() {
                  var statearr_435661 = state_435655;
                  statearr_435661[13] = inst_435638;
                  statearr_435661[14] = inst_435639;
                  return statearr_435661
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_435655__$1, 8, inst_435640)
              }else {
                if(state_val_435656 === 4) {
                  var inst_435636 = state_435655[2];
                  var state_435655__$1 = state_435655;
                  if(cljs.core.truth_(inst_435636)) {
                    var statearr_435662_435674 = state_435655__$1;
                    statearr_435662_435674[1] = 5
                  }else {
                    var statearr_435663_435675 = state_435655__$1;
                    statearr_435663_435675[1] = 6
                  }
                  return"\ufdd0:recur"
                }else {
                  if(state_val_435656 === 3) {
                    var inst_435628 = state_435655[15];
                    var inst_435632 = (new cljs.core.Keyword("\ufdd0:version")).call(null, inst_435628);
                    var inst_435633 = (new cljs.core.Keyword("\ufdd0:version")).call(null, orchard.objects.app.APP_INFO);
                    var inst_435634 = cljs.core.not_EQ_.call(null, inst_435632, inst_435633);
                    var state_435655__$1 = state_435655;
                    var statearr_435664_435676 = state_435655__$1;
                    statearr_435664_435676[2] = inst_435634;
                    statearr_435664_435676[1] = 4;
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_435656 === 2) {
                      var inst_435629 = state_435655[16];
                      var state_435655__$1 = state_435655;
                      var statearr_435665_435677 = state_435655__$1;
                      statearr_435665_435677[2] = inst_435629;
                      statearr_435665_435677[1] = 4;
                      return"\ufdd0:recur"
                    }else {
                      if(state_val_435656 === 1) {
                        var inst_435629 = state_435655[16];
                        var inst_435628 = state_435655[15];
                        var inst_435628__$1 = orchard.kv_store.local_get.call(null, "\ufdd0:app-info");
                        var inst_435629__$1 = inst_435628__$1 == null;
                        var state_435655__$1 = function() {
                          var statearr_435666 = state_435655;
                          statearr_435666[16] = inst_435629__$1;
                          statearr_435666[15] = inst_435628__$1;
                          return statearr_435666
                        }();
                        if(cljs.core.truth_(inst_435629__$1)) {
                          var statearr_435667_435678 = state_435655__$1;
                          statearr_435667_435678[1] = 2
                        }else {
                          var statearr_435668_435679 = state_435655__$1;
                          statearr_435668_435679[1] = 3
                        }
                        return"\ufdd0:recur"
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_435670 = new Array(17);
            statearr_435670[0] = state_machine__4793__auto__;
            statearr_435670[1] = 1;
            return statearr_435670
          };
          var state_machine__4793__auto____1 = function(state_435655) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_435655);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_435655) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_435655)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_435671 = f__4865__auto__.call(null);
      statearr_435671[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_435671
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
goog.provide("test.orchard.macros");
goog.require("cljs.core");
goog.require("test.");
goog.require("orchard.util.log");
goog.require("test.");
goog.require("orchard.util.log");
goog.provide("orchard.objects.modules.form");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.module");
goog.require("crate.binding");
goog.require("clojure.string");
goog.require("crate.binding");
goog.require("orchard.util.core");
goog.require("orchard.module");
goog.require("orchard.object");
orchard.objects.modules.form.render_form = function render_form(this$) {
  return null
};
orchard.objects.modules.form.render_module = function render_module(this$) {
  return null
};
orchard.object.object_STAR_.call(null, "\ufdd0:form-module", "\ufdd0:tags", cljs.core.PersistentHashSet.fromArray(["\ufdd0:module", null], true), "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:delete", null, "\ufdd0:save", null], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.modules/save-module", "\ufdd0:orchard.objects.modules/delete-module"], true), "\ufdd0:mode", "\ufdd0:present", "\ufdd0:editor", null, "\ufdd0:type", null, "\ufdd0:init", 
function(this$, record) {
  orchard.util.core.log.call(null, "init form module");
  orchard.util.core.log_obj.call(null, this$);
  orchard.util.core.log_obj.call(null, record);
  orchard.object.merge_BANG_.call(null, this$, record);
  orchard.util.core.bound_do.call(null, crate.binding.subatom.call(null, this$, "\ufdd0:mode"), cljs.core.partial.call(null, orchard.objects.modules.form.render_module, this$));
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div.span12.module.media-module", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", [cljs.core.str("form-module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join("")], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-tray", orchard.module.module_btn.call(null, this$)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-element", orchard.objects.modules.form.render_form.call(null, 
  this$)], true)], true)
});
goog.provide("test.kv_store");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("orchard.util.log");
goog.require("orchard.kv_store");
test.kv_store.test_items = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:foo", "asdf", "\ufdd0:bar", 23, "\ufdd0:baz", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:name", "asdf"], true), "\ufdd0:buz", cljs.core.PersistentVector.fromArray([1.2, 3.4], true)], true);
console.log([cljs.core.str("Testing: "), cljs.core.str("local-storage"), cljs.core.str("...")].join(""));
var size_433171 = orchard.kv_store.local_count.call(null);
var seq__433159_433172 = cljs.core.seq.call(null, cljs.core.keys.call(null, test.kv_store.test_items));
var chunk__433160_433173 = null;
var count__433161_433174 = 0;
var i__433162_433175 = 0;
while(true) {
  if(i__433162_433175 < count__433161_433174) {
    var k_433176 = cljs.core._nth.call(null, chunk__433160_433173, i__433162_433175);
    orchard.kv_store.local_set.call(null, k_433176, test.kv_store.test_items.call(null, k_433176));
    var G__433177 = seq__433159_433172;
    var G__433178 = chunk__433160_433173;
    var G__433179 = count__433161_433174;
    var G__433180 = i__433162_433175 + 1;
    seq__433159_433172 = G__433177;
    chunk__433160_433173 = G__433178;
    count__433161_433174 = G__433179;
    i__433162_433175 = G__433180;
    continue
  }else {
    var temp__4092__auto___433181 = cljs.core.seq.call(null, seq__433159_433172);
    if(temp__4092__auto___433181) {
      var seq__433159_433182__$1 = temp__4092__auto___433181;
      if(cljs.core.chunked_seq_QMARK_.call(null, seq__433159_433182__$1)) {
        var c__3259__auto___433183 = cljs.core.chunk_first.call(null, seq__433159_433182__$1);
        var G__433184 = cljs.core.chunk_rest.call(null, seq__433159_433182__$1);
        var G__433185 = c__3259__auto___433183;
        var G__433186 = cljs.core.count.call(null, c__3259__auto___433183);
        var G__433187 = 0;
        seq__433159_433172 = G__433184;
        chunk__433160_433173 = G__433185;
        count__433161_433174 = G__433186;
        i__433162_433175 = G__433187;
        continue
      }else {
        var k_433188 = cljs.core.first.call(null, seq__433159_433182__$1);
        orchard.kv_store.local_set.call(null, k_433188, test.kv_store.test_items.call(null, k_433188));
        var G__433189 = cljs.core.next.call(null, seq__433159_433182__$1);
        var G__433190 = null;
        var G__433191 = 0;
        var G__433192 = 0;
        seq__433159_433172 = G__433189;
        chunk__433160_433173 = G__433190;
        count__433161_433174 = G__433191;
        i__433162_433175 = G__433192;
        continue
      }
    }else {
    }
  }
  break
}
var seq__433163_433193 = cljs.core.seq.call(null, cljs.core.keys.call(null, test.kv_store.test_items));
var chunk__433164_433194 = null;
var count__433165_433195 = 0;
var i__433166_433196 = 0;
while(true) {
  if(i__433166_433196 < count__433165_433195) {
    var k_433197 = cljs.core._nth.call(null, chunk__433164_433194, i__433166_433196);
    var a__431394__auto___433198 = test.kv_store.test_items.call(null, k_433197);
    var b__431395__auto___433199 = orchard.kv_store.local_get.call(null, k_433197);
    if(cljs.core._EQ_.call(null, a__431394__auto___433198, b__431395__auto___433199)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(a__431394__auto___433198), cljs.core.str(" != "), cljs.core.str(b__431395__auto___433199)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("clojure.core", "=", "clojure.core/=", -670361287, null), new cljs.core.Symbol(null, "a__431394__auto__", "a__431394__auto__", 541555045, null), new cljs.core.Symbol(null, "b__431395__auto__", "b__431395__auto__", 
      87410279, null))))].join(""));
    }
    var G__433200 = seq__433163_433193;
    var G__433201 = chunk__433164_433194;
    var G__433202 = count__433165_433195;
    var G__433203 = i__433166_433196 + 1;
    seq__433163_433193 = G__433200;
    chunk__433164_433194 = G__433201;
    count__433165_433195 = G__433202;
    i__433166_433196 = G__433203;
    continue
  }else {
    var temp__4092__auto___433204 = cljs.core.seq.call(null, seq__433163_433193);
    if(temp__4092__auto___433204) {
      var seq__433163_433205__$1 = temp__4092__auto___433204;
      if(cljs.core.chunked_seq_QMARK_.call(null, seq__433163_433205__$1)) {
        var c__3259__auto___433206 = cljs.core.chunk_first.call(null, seq__433163_433205__$1);
        var G__433207 = cljs.core.chunk_rest.call(null, seq__433163_433205__$1);
        var G__433208 = c__3259__auto___433206;
        var G__433209 = cljs.core.count.call(null, c__3259__auto___433206);
        var G__433210 = 0;
        seq__433163_433193 = G__433207;
        chunk__433164_433194 = G__433208;
        count__433165_433195 = G__433209;
        i__433166_433196 = G__433210;
        continue
      }else {
        var k_433211 = cljs.core.first.call(null, seq__433163_433205__$1);
        var a__431394__auto___433212 = test.kv_store.test_items.call(null, k_433211);
        var b__431395__auto___433213 = orchard.kv_store.local_get.call(null, k_433211);
        if(cljs.core._EQ_.call(null, a__431394__auto___433212, b__431395__auto___433213)) {
        }else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(a__431394__auto___433212), cljs.core.str(" != "), cljs.core.str(b__431395__auto___433213)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("clojure.core", "=", "clojure.core/=", -670361287, null), new cljs.core.Symbol(null, "a__431394__auto__", "a__431394__auto__", 541555045, null), new cljs.core.Symbol(null, "b__431395__auto__", "b__431395__auto__", 
          87410279, null))))].join(""));
        }
        var G__433214 = cljs.core.next.call(null, seq__433163_433205__$1);
        var G__433215 = null;
        var G__433216 = 0;
        var G__433217 = 0;
        seq__433163_433193 = G__433214;
        chunk__433164_433194 = G__433215;
        count__433165_433195 = G__433216;
        i__433166_433196 = G__433217;
        continue
      }
    }else {
    }
  }
  break
}
var a__431394__auto___433218 = size_433171 + cljs.core.count.call(null, cljs.core.keys.call(null, test.kv_store.test_items));
var b__431395__auto___433219 = orchard.kv_store.local_count.call(null);
if(cljs.core._EQ_.call(null, a__431394__auto___433218, b__431395__auto___433219)) {
}else {
  throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(a__431394__auto___433218), cljs.core.str(" != "), cljs.core.str(b__431395__auto___433219)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("clojure.core", "=", "clojure.core/=", -670361287, null), new cljs.core.Symbol(null, "a__431394__auto__", "a__431394__auto__", 541555045, null), new cljs.core.Symbol(null, "b__431395__auto__", "b__431395__auto__", 87410279, 
  null))))].join(""));
}
var seq__433167_433220 = cljs.core.seq.call(null, cljs.core.keys.call(null, test.kv_store.test_items));
var chunk__433168_433221 = null;
var count__433169_433222 = 0;
var i__433170_433223 = 0;
while(true) {
  if(i__433170_433223 < count__433169_433222) {
    var k_433224 = cljs.core._nth.call(null, chunk__433168_433221, i__433170_433223);
    orchard.kv_store.local_remove.call(null, k_433224);
    var G__433225 = seq__433167_433220;
    var G__433226 = chunk__433168_433221;
    var G__433227 = count__433169_433222;
    var G__433228 = i__433170_433223 + 1;
    seq__433167_433220 = G__433225;
    chunk__433168_433221 = G__433226;
    count__433169_433222 = G__433227;
    i__433170_433223 = G__433228;
    continue
  }else {
    var temp__4092__auto___433229 = cljs.core.seq.call(null, seq__433167_433220);
    if(temp__4092__auto___433229) {
      var seq__433167_433230__$1 = temp__4092__auto___433229;
      if(cljs.core.chunked_seq_QMARK_.call(null, seq__433167_433230__$1)) {
        var c__3259__auto___433231 = cljs.core.chunk_first.call(null, seq__433167_433230__$1);
        var G__433232 = cljs.core.chunk_rest.call(null, seq__433167_433230__$1);
        var G__433233 = c__3259__auto___433231;
        var G__433234 = cljs.core.count.call(null, c__3259__auto___433231);
        var G__433235 = 0;
        seq__433167_433220 = G__433232;
        chunk__433168_433221 = G__433233;
        count__433169_433222 = G__433234;
        i__433170_433223 = G__433235;
        continue
      }else {
        var k_433236 = cljs.core.first.call(null, seq__433167_433230__$1);
        orchard.kv_store.local_remove.call(null, k_433236);
        var G__433237 = cljs.core.next.call(null, seq__433167_433230__$1);
        var G__433238 = null;
        var G__433239 = 0;
        var G__433240 = 0;
        seq__433167_433220 = G__433237;
        chunk__433168_433221 = G__433238;
        count__433169_433222 = G__433239;
        i__433170_433223 = G__433240;
        continue
      }
    }else {
    }
  }
  break
}
var a__431394__auto___433241 = size_433171;
var b__431395__auto___433242 = orchard.kv_store.local_count.call(null);
if(cljs.core._EQ_.call(null, a__431394__auto___433241, b__431395__auto___433242)) {
}else {
  throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(a__431394__auto___433241), cljs.core.str(" != "), cljs.core.str(b__431395__auto___433242)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("clojure.core", "=", "clojure.core/=", -670361287, null), new cljs.core.Symbol(null, "a__431394__auto__", "a__431394__auto__", 541555045, null), new cljs.core.Symbol(null, "b__431395__auto__", "b__431395__auto__", 87410279, 
  null))))].join(""));
}
;goog.provide("orchard.objects.templates.two_column");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("crate.binding");
goog.require("orchard.util.core");
goog.require("orchard.util.log");
goog.require("orchard.object");
goog.provide("orchard.objects.media.pdf");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("dommy.core");
goog.require("orchard.model");
goog.require("crate.binding");
goog.require("orchard.util.log");
goog.require("orchard.util.dom");
goog.require("orchard.util.core");
goog.require("crate.core");
goog.require("orchard.object");
orchard.objects.media.pdf.$pdf_canvas = function $pdf_canvas(this$) {
  return orchard.util.dom.$.call(null, [cljs.core.str("#pdf-canvas-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join(""))
};
orchard.objects.media.pdf.load_pdf = function load_pdf(this$, file_path) {
  orchard.util.log.log.call(null, "load pdf file ", (new cljs.core.Keyword("\ufdd0:path")).call(null, cljs.core.deref.call(null, this$)));
  var $canvas = orchard.objects.media.pdf.$pdf_canvas.call(null, this$);
  if(PDFJS.workerSrc == null) {
    PDFJS.workerSrc = "js/pdf.js"
  }else {
  }
  return PDFJS.getDocument((new cljs.core.Keyword("\ufdd0:path")).call(null, cljs.core.deref.call(null, this$))).then(function(pdf) {
    orchard.util.log.log.call(null, "pdf loaded");
    orchard.util.log.log_obj.call(null, pdf);
    return pdf.getPage(1).then(function(page) {
      orchard.util.log.log.call(null, "page loaded");
      orchard.util.log.log_obj.call(null, page);
      var viewport = page.getViewport(0.15);
      var context = $canvas.getContext("2d");
      $canvas.height = viewport.height;
      $canvas.width = viewport.width;
      return page.render(cljs.core.clj__GT_js.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:canvasContext", context, "\ufdd0:viewport", viewport], true)))
    })
  })
};
orchard.object.behavior_STAR_.call(null, "\ufdd0:orchard.objects.media.pdf/load", "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:load", null], true), "\ufdd0:reaction", function(this$, file_path) {
  return orchard.objects.media.pdf.load_pdf.call(null, this$, file_path)
});
orchard.object.object_STAR_.call(null, "\ufdd0:pdf-element", "\ufdd0:tags", cljs.core.PersistentHashSet.EMPTY, "\ufdd0:triggers", cljs.core.PersistentHashSet.EMPTY, "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.media.pdf/load"], true), "\ufdd0:editor", null, "\ufdd0:init", function(this$) {
  return cljs.core.PersistentVector.fromArray(["\ufdd0:canvas", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", [cljs.core.str("pdf-canvas-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join(""), "\ufdd0:style", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:border", "1px solid gray"], true)], true)], true)
});
orchard.objects.media.pdf.pdf_obj = function pdf_obj() {
  return orchard.object.create.call(null, "\ufdd0:pdf-element")
};
goog.provide("orchard.sql");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
orchard.sql.DEFAULT_SQL_DB_SIZE = 1024 * 1024;
orchard.sql.db = function() {
  var db = null;
  var db__1 = function(db_name) {
    return db.call(null, db_name, "1.0", db_name, orchard.sql.DEFAULT_SQL_DB_SIZE)
  };
  var db__4 = function(db_name, version, description, size) {
    return openDatabase(db_name, version, description, size)
  };
  db = function(db_name, version, description, size) {
    switch(arguments.length) {
      case 1:
        return db__1.call(this, db_name);
      case 4:
        return db__4.call(this, db_name, version, description, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  db.cljs$core$IFn$_invoke$arity$1 = db__1;
  db.cljs$core$IFn$_invoke$arity$4 = db__4;
  return db
}();
orchard.sql.run = function run(db, stmt) {
  var res_chan = cljs.core.async.chan.call(null);
  var c__4864__auto___438252 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_438247) {
        var state_val_438248 = state_438247[1];
        if(state_val_438248 === 1) {
          var inst_438244 = function() {
            return function(state_val_438248) {
              return function(tx) {
                return tx.executeSql(stmt, cljs.core.clj__GT_js.call(null, cljs.core.PersistentVector.EMPTY), function(state_val_438248) {
                  return function(tx__$1, results) {
                    return cljs.core.async._GT__BANG_.call(null, res_chan, results)
                  }
                }(state_val_438248))
              }
            }(state_val_438248)
          }();
          var inst_438245 = db.transaction(inst_438244);
          var state_438247__$1 = state_438247;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_438247__$1, inst_438245)
        }else {
          return null
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_438250 = new Array(5);
            statearr_438250[0] = state_machine__4793__auto__;
            statearr_438250[1] = 1;
            return statearr_438250
          };
          var state_machine__4793__auto____1 = function(state_438247) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_438247);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_438247) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_438247)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_438251 = f__4865__auto__.call(null);
      statearr_438251[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto___438252;
      return statearr_438251
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return res_chan
};
goog.provide("orchard.objects.d3");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("orchard.module");
goog.require("dommy.core");
goog.require("crate.binding");
goog.require("orchard.util.log");
goog.require("orchard.module");
goog.require("orchard.util.core");
goog.require("orchard.util.dom");
goog.require("crate.core");
goog.require("orchard.object");
goog.provide("test.model");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("orchard.model");
goog.require("orchard.util.core");
goog.require("cljs.core.async");
test.model.test_doc = function test_doc() {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "\ufdd0:test-document", "\ufdd0:id", orchard.util.core.uuid.call(null), "\ufdd0:body", "This is a test body"], true)
};
test.model.all_tests = function all_tests() {
  console.log([cljs.core.str("Testing: "), cljs.core.str("save-object-test"), cljs.core.str("...")].join(""));
  var doc_433511 = test.model.test_doc.call(null);
  var okeys_433512 = cljs.core.keys.call(null, doc_433511);
  var db_433513 = orchard.model.local_store.call(null);
  var c__4864__auto___433514 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_433468) {
        var state_val_433469 = state_433468[1];
        if(state_val_433469 === 1) {
          var inst_433377 = (new cljs.core.Keyword("\ufdd0:id")).call(null, doc_433511);
          var inst_433378 = orchard.model.get_object.call(null, db_433513, inst_433377);
          var state_433468__$1 = state_433468;
          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_433468__$1, 2, inst_433378)
        }else {
          if(state_val_433469 === 2) {
            var inst_433380 = state_433468[5];
            var inst_433380__$1 = state_433468[2];
            var inst_433381 = cljs.core._EQ_.call(null, null, inst_433380__$1);
            var state_433468__$1 = function() {
              var statearr_433470 = state_433468;
              statearr_433470[5] = inst_433380__$1;
              return statearr_433470
            }();
            if(inst_433381) {
              var statearr_433471_433515 = state_433468__$1;
              statearr_433471_433515[1] = 3
            }else {
              var statearr_433472_433516 = state_433468__$1;
              statearr_433472_433516[1] = 4
            }
            return"\ufdd0:recur"
          }else {
            if(state_val_433469 === 3) {
              var state_433468__$1 = state_433468;
              var statearr_433473_433517 = state_433468__$1;
              statearr_433473_433517[2] = null;
              statearr_433473_433517[1] = 5;
              return"\ufdd0:recur"
            }else {
              if(state_val_433469 === 4) {
                var inst_433380 = state_433468[5];
                var inst_433384 = [cljs.core.str(null), cljs.core.str(" != "), cljs.core.str(inst_433380)].join("");
                var inst_433385 = cljs.core.list(new cljs.core.Symbol("clojure.core", "=", "clojure.core/=", -670361287, null), new cljs.core.Symbol(null, "a__431394__auto__", "a__431394__auto__", 541555045, null), new cljs.core.Symbol(null, "b__431395__auto__", "b__431395__auto__", 87410279, null));
                var inst_433386 = cljs.core.pr_str.call(null, inst_433385);
                var inst_433387 = [cljs.core.str("Assert failed: "), cljs.core.str(inst_433384), cljs.core.str("\n"), cljs.core.str(inst_433386)].join("");
                var inst_433388 = new Error(inst_433387);
                var inst_433389 = function() {
                  throw inst_433388;
                }();
                var state_433468__$1 = state_433468;
                var statearr_433474_433518 = state_433468__$1;
                statearr_433474_433518[2] = inst_433389;
                statearr_433474_433518[1] = 5;
                return"\ufdd0:recur"
              }else {
                if(state_val_433469 === 5) {
                  var inst_433391 = state_433468[2];
                  var inst_433392 = (new cljs.core.Keyword("\ufdd0:id")).call(null, doc_433511);
                  var inst_433393 = orchard.model.get_object.call(null, db_433513, inst_433392);
                  var state_433468__$1 = function() {
                    var statearr_433475 = state_433468;
                    statearr_433475[6] = inst_433391;
                    return statearr_433475
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_433468__$1, 6, inst_433393)
                }else {
                  if(state_val_433469 === 6) {
                    var inst_433395 = state_433468[2];
                    var inst_433396 = orchard.util.log.log.call(null, "checking keys...");
                    var inst_433401 = cljs.core.seq.call(null, okeys_433512);
                    var inst_433402 = inst_433401;
                    var inst_433403 = null;
                    var inst_433404 = 0;
                    var inst_433405 = 0;
                    var state_433468__$1 = function() {
                      var statearr_433476 = state_433468;
                      statearr_433476[7] = inst_433395;
                      statearr_433476[8] = inst_433396;
                      statearr_433476[9] = inst_433403;
                      statearr_433476[10] = inst_433404;
                      statearr_433476[11] = inst_433405;
                      statearr_433476[12] = inst_433402;
                      return statearr_433476
                    }();
                    var statearr_433477_433519 = state_433468__$1;
                    statearr_433477_433519[2] = null;
                    statearr_433477_433519[1] = 7;
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_433469 === 7) {
                      var inst_433404 = state_433468[10];
                      var inst_433405 = state_433468[11];
                      var inst_433407 = inst_433405 < inst_433404;
                      var inst_433408 = inst_433407;
                      var state_433468__$1 = state_433468;
                      if(cljs.core.truth_(inst_433408)) {
                        var statearr_433478_433520 = state_433468__$1;
                        statearr_433478_433520[1] = 9
                      }else {
                        var statearr_433479_433521 = state_433468__$1;
                        statearr_433479_433521[1] = 10
                      }
                      return"\ufdd0:recur"
                    }else {
                      if(state_val_433469 === 8) {
                        var inst_433466 = state_433468[2];
                        var state_433468__$1 = state_433468;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_433468__$1, inst_433466)
                      }else {
                        if(state_val_433469 === 9) {
                          var inst_433395 = state_433468[7];
                          var inst_433414 = state_433468[13];
                          var inst_433415 = state_433468[14];
                          var inst_433403 = state_433468[9];
                          var inst_433405 = state_433468[11];
                          var inst_433410 = cljs.core._nth.call(null, inst_433403, inst_433405);
                          var inst_433411 = inst_433395.call(null, inst_433410);
                          var inst_433412 = [cljs.core.str(inst_433410), cljs.core.str(": "), cljs.core.str(inst_433411)].join("");
                          var inst_433413 = orchard.util.log.log.call(null, inst_433412);
                          var inst_433414__$1 = inst_433395.call(null, inst_433410);
                          var inst_433415__$1 = doc_433511.call(null, inst_433410);
                          var inst_433416 = cljs.core._EQ_.call(null, inst_433414__$1, inst_433415__$1);
                          var state_433468__$1 = function() {
                            var statearr_433480 = state_433468;
                            statearr_433480[13] = inst_433414__$1;
                            statearr_433480[14] = inst_433415__$1;
                            statearr_433480[15] = inst_433413;
                            return statearr_433480
                          }();
                          if(inst_433416) {
                            var statearr_433481_433522 = state_433468__$1;
                            statearr_433481_433522[1] = 12
                          }else {
                            var statearr_433482_433523 = state_433468__$1;
                            statearr_433482_433523[1] = 13
                          }
                          return"\ufdd0:recur"
                        }else {
                          if(state_val_433469 === 10) {
                            var inst_433430 = state_433468[16];
                            var inst_433402 = state_433468[12];
                            var inst_433430__$1 = cljs.core.seq.call(null, inst_433402);
                            var state_433468__$1 = function() {
                              var statearr_433483 = state_433468;
                              statearr_433483[16] = inst_433430__$1;
                              return statearr_433483
                            }();
                            if(inst_433430__$1) {
                              var statearr_433484_433524 = state_433468__$1;
                              statearr_433484_433524[1] = 15
                            }else {
                              var statearr_433485_433525 = state_433468__$1;
                              statearr_433485_433525[1] = 16
                            }
                            return"\ufdd0:recur"
                          }else {
                            if(state_val_433469 === 11) {
                              var inst_433464 = state_433468[2];
                              var state_433468__$1 = state_433468;
                              var statearr_433486_433526 = state_433468__$1;
                              statearr_433486_433526[2] = inst_433464;
                              statearr_433486_433526[1] = 8;
                              return"\ufdd0:recur"
                            }else {
                              if(state_val_433469 === 12) {
                                var state_433468__$1 = state_433468;
                                var statearr_433490_433527 = state_433468__$1;
                                statearr_433490_433527[2] = null;
                                statearr_433490_433527[1] = 14;
                                return"\ufdd0:recur"
                              }else {
                                if(state_val_433469 === 13) {
                                  var inst_433414 = state_433468[13];
                                  var inst_433415 = state_433468[14];
                                  var inst_433419 = [cljs.core.str(inst_433414), cljs.core.str(" != "), cljs.core.str(inst_433415)].join("");
                                  var inst_433420 = cljs.core.list(new cljs.core.Symbol("clojure.core", "=", "clojure.core/=", -670361287, null), new cljs.core.Symbol(null, "a__431394__auto__", "a__431394__auto__", 541555045, null), new cljs.core.Symbol(null, "b__431395__auto__", "b__431395__auto__", 87410279, null));
                                  var inst_433421 = cljs.core.pr_str.call(null, inst_433420);
                                  var inst_433422 = [cljs.core.str("Assert failed: "), cljs.core.str(inst_433419), cljs.core.str("\n"), cljs.core.str(inst_433421)].join("");
                                  var inst_433423 = new Error(inst_433422);
                                  var inst_433424 = function() {
                                    throw inst_433423;
                                  }();
                                  var state_433468__$1 = state_433468;
                                  var statearr_433491_433528 = state_433468__$1;
                                  statearr_433491_433528[2] = inst_433424;
                                  statearr_433491_433528[1] = 14;
                                  return"\ufdd0:recur"
                                }else {
                                  if(state_val_433469 === 14) {
                                    var inst_433403 = state_433468[9];
                                    var inst_433404 = state_433468[10];
                                    var inst_433405 = state_433468[11];
                                    var inst_433402 = state_433468[12];
                                    var inst_433426 = state_433468[2];
                                    var inst_433427 = inst_433405 + 1;
                                    var tmp433487 = inst_433403;
                                    var tmp433488 = inst_433404;
                                    var tmp433489 = inst_433402;
                                    var inst_433402__$1 = tmp433489;
                                    var inst_433403__$1 = tmp433487;
                                    var inst_433404__$1 = tmp433488;
                                    var inst_433405__$1 = inst_433427;
                                    var state_433468__$1 = function() {
                                      var statearr_433492 = state_433468;
                                      statearr_433492[17] = inst_433426;
                                      statearr_433492[9] = inst_433403__$1;
                                      statearr_433492[10] = inst_433404__$1;
                                      statearr_433492[11] = inst_433405__$1;
                                      statearr_433492[12] = inst_433402__$1;
                                      return statearr_433492
                                    }();
                                    var statearr_433493_433529 = state_433468__$1;
                                    statearr_433493_433529[2] = null;
                                    statearr_433493_433529[1] = 7;
                                    return"\ufdd0:recur"
                                  }else {
                                    if(state_val_433469 === 15) {
                                      var inst_433430 = state_433468[16];
                                      var inst_433432 = cljs.core.chunked_seq_QMARK_.call(null, inst_433430);
                                      var state_433468__$1 = state_433468;
                                      if(inst_433432) {
                                        var statearr_433494_433530 = state_433468__$1;
                                        statearr_433494_433530[1] = 18
                                      }else {
                                        var statearr_433495_433531 = state_433468__$1;
                                        statearr_433495_433531[1] = 19
                                      }
                                      return"\ufdd0:recur"
                                    }else {
                                      if(state_val_433469 === 16) {
                                        var state_433468__$1 = state_433468;
                                        var statearr_433496_433532 = state_433468__$1;
                                        statearr_433496_433532[2] = null;
                                        statearr_433496_433532[1] = 17;
                                        return"\ufdd0:recur"
                                      }else {
                                        if(state_val_433469 === 17) {
                                          var inst_433462 = state_433468[2];
                                          var state_433468__$1 = state_433468;
                                          var statearr_433497_433533 = state_433468__$1;
                                          statearr_433497_433533[2] = inst_433462;
                                          statearr_433497_433533[1] = 11;
                                          return"\ufdd0:recur"
                                        }else {
                                          if(state_val_433469 === 18) {
                                            var inst_433430 = state_433468[16];
                                            var inst_433434 = cljs.core.chunk_first.call(null, inst_433430);
                                            var inst_433435 = cljs.core.chunk_rest.call(null, inst_433430);
                                            var inst_433436 = cljs.core.count.call(null, inst_433434);
                                            var inst_433402 = inst_433435;
                                            var inst_433403 = inst_433434;
                                            var inst_433404 = inst_433436;
                                            var inst_433405 = 0;
                                            var state_433468__$1 = function() {
                                              var statearr_433498 = state_433468;
                                              statearr_433498[9] = inst_433403;
                                              statearr_433498[10] = inst_433404;
                                              statearr_433498[11] = inst_433405;
                                              statearr_433498[12] = inst_433402;
                                              return statearr_433498
                                            }();
                                            var statearr_433499_433534 = state_433468__$1;
                                            statearr_433499_433534[2] = null;
                                            statearr_433499_433534[1] = 7;
                                            return"\ufdd0:recur"
                                          }else {
                                            if(state_val_433469 === 19) {
                                              var inst_433430 = state_433468[16];
                                              var inst_433395 = state_433468[7];
                                              var inst_433444 = state_433468[18];
                                              var inst_433443 = state_433468[19];
                                              var inst_433439 = cljs.core.first.call(null, inst_433430);
                                              var inst_433440 = inst_433395.call(null, inst_433439);
                                              var inst_433441 = [cljs.core.str(inst_433439), cljs.core.str(": "), cljs.core.str(inst_433440)].join("");
                                              var inst_433442 = orchard.util.log.log.call(null, inst_433441);
                                              var inst_433443__$1 = inst_433395.call(null, inst_433439);
                                              var inst_433444__$1 = doc_433511.call(null, inst_433439);
                                              var inst_433445 = cljs.core._EQ_.call(null, inst_433443__$1, inst_433444__$1);
                                              var state_433468__$1 = function() {
                                                var statearr_433500 = state_433468;
                                                statearr_433500[20] = inst_433442;
                                                statearr_433500[18] = inst_433444__$1;
                                                statearr_433500[19] = inst_433443__$1;
                                                return statearr_433500
                                              }();
                                              if(inst_433445) {
                                                var statearr_433501_433535 = state_433468__$1;
                                                statearr_433501_433535[1] = 21
                                              }else {
                                                var statearr_433502_433536 = state_433468__$1;
                                                statearr_433502_433536[1] = 22
                                              }
                                              return"\ufdd0:recur"
                                            }else {
                                              if(state_val_433469 === 20) {
                                                var inst_433459 = state_433468[2];
                                                var state_433468__$1 = state_433468;
                                                var statearr_433503_433537 = state_433468__$1;
                                                statearr_433503_433537[2] = inst_433459;
                                                statearr_433503_433537[1] = 17;
                                                return"\ufdd0:recur"
                                              }else {
                                                if(state_val_433469 === 21) {
                                                  var state_433468__$1 = state_433468;
                                                  var statearr_433504_433538 = state_433468__$1;
                                                  statearr_433504_433538[2] = null;
                                                  statearr_433504_433538[1] = 23;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if(state_val_433469 === 22) {
                                                    var inst_433444 = state_433468[18];
                                                    var inst_433443 = state_433468[19];
                                                    var inst_433448 = [cljs.core.str(inst_433443), cljs.core.str(" != "), cljs.core.str(inst_433444)].join("");
                                                    var inst_433449 = cljs.core.list(new cljs.core.Symbol("clojure.core", "=", "clojure.core/=", -670361287, null), new cljs.core.Symbol(null, "a__431394__auto__", "a__431394__auto__", 541555045, null), new cljs.core.Symbol(null, "b__431395__auto__", "b__431395__auto__", 87410279, null));
                                                    var inst_433450 = cljs.core.pr_str.call(null, inst_433449);
                                                    var inst_433451 = [cljs.core.str("Assert failed: "), cljs.core.str(inst_433448), cljs.core.str("\n"), cljs.core.str(inst_433450)].join("");
                                                    var inst_433452 = new Error(inst_433451);
                                                    var inst_433453 = function() {
                                                      throw inst_433452;
                                                    }();
                                                    var state_433468__$1 = state_433468;
                                                    var statearr_433505_433539 = state_433468__$1;
                                                    statearr_433505_433539[2] = inst_433453;
                                                    statearr_433505_433539[1] = 23;
                                                    return"\ufdd0:recur"
                                                  }else {
                                                    if(state_val_433469 === 23) {
                                                      var inst_433430 = state_433468[16];
                                                      var inst_433455 = state_433468[2];
                                                      var inst_433456 = cljs.core.next.call(null, inst_433430);
                                                      var inst_433402 = inst_433456;
                                                      var inst_433403 = null;
                                                      var inst_433404 = 0;
                                                      var inst_433405 = 0;
                                                      var state_433468__$1 = function() {
                                                        var statearr_433506 = state_433468;
                                                        statearr_433506[9] = inst_433403;
                                                        statearr_433506[10] = inst_433404;
                                                        statearr_433506[11] = inst_433405;
                                                        statearr_433506[21] = inst_433455;
                                                        statearr_433506[12] = inst_433402;
                                                        return statearr_433506
                                                      }();
                                                      var statearr_433507_433540 = state_433468__$1;
                                                      statearr_433507_433540[2] = null;
                                                      statearr_433507_433540[1] = 7;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      return null
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_433509 = new Array(22);
            statearr_433509[0] = state_machine__4793__auto__;
            statearr_433509[1] = 1;
            return statearr_433509
          };
          var state_machine__4793__auto____1 = function(state_433468) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_433468);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_433468) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_433468)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_433510 = f__4865__auto__.call(null);
      statearr_433510[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto___433514;
      return statearr_433510
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return orchard.util.log.log.call(null, "model tests complete...")
};
test.model.all_tests.call(null);
goog.provide("orchard.graphics.tree");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("orchard.util.log");
orchard.graphics.tree.deg__GT_radian = function deg__GT_radian(deg) {
  return deg * Math.PI * (1 / 180)
};
orchard.graphics.tree.cos_deg = function cos_deg(angle) {
  return Math.cos.call(null, orchard.graphics.tree.deg__GT_radian.call(null, angle))
};
orchard.graphics.tree.sin_deg = function sin_deg(angle) {
  return Math.sin.call(null, orchard.graphics.tree.deg__GT_radian.call(null, angle))
};
orchard.graphics.tree.draw_tree_STAR_ = function draw_tree_STAR_(ctx, x, y, angle, depth) {
  while(true) {
    if(depth > 0) {
      var x2 = x + (depth * 6 * orchard.graphics.tree.cos_deg.call(null, angle) | 0);
      var y2 = y + (depth * 6 * orchard.graphics.tree.sin_deg.call(null, angle) | 0);
      ctx.beginPath();
      ctx.moveTo(x, y);
      ctx.lineTo(x2, y2);
      ctx.closePath();
      ctx.stroke();
      draw_tree_STAR_.call(null, ctx, x2, y2, angle - 20, depth - 1);
      var G__433596 = ctx;
      var G__433597 = x2;
      var G__433598 = y2;
      var G__433599 = angle + 20;
      var G__433600 = depth - 1;
      ctx = G__433596;
      x = G__433597;
      y = G__433598;
      angle = G__433599;
      depth = G__433600;
      continue
    }else {
      return null
    }
    break
  }
};
orchard.graphics.tree.draw_tree = function draw_tree(canvas_id) {
  var target = document.getElementById(canvas_id);
  var context = target.getContext("2d");
  return orchard.graphics.tree.draw_tree_STAR_.call(null, context, target.width / 2 | 0, target.height / 2 | 0, -90, 9)
};
goog.provide("orchard.objects.modules.index");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("orchard.util.log");
goog.require("crate.core");
goog.require("orchard.model");
goog.require("orchard.util.core");
goog.require("orchard.util.dom");
goog.require("crate.binding");
goog.require("orchard.object");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("orchard.graphics.tree");
orchard.objects.modules.index.module_btn_icon = function module_btn_icon(mode) {
  if(cljs.core._EQ_.call(null, mode, "\ufdd0:present")) {
    return"icon-pencil module-btn"
  }else {
    return"icon-ok module-btn"
  }
};
orchard.objects.modules.index.module_btn = function module_btn(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:i", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", crate.binding.bound.call(null, crate.binding.subatom.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:mode"], true)), orchard.objects.modules.index.module_btn_icon)], true)], true));
  var seq__435936_435942 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    return orchard.object.assoc_BANG_.call(null, this$, "\ufdd0:mode", cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:mode")).call(null, cljs.core.deref.call(null, this$)), "\ufdd0:present") ? "\ufdd0:edit" : "\ufdd0:present")
  }], true)));
  var chunk__435937_435943 = null;
  var count__435938_435944 = 0;
  var i__435939_435945 = 0;
  while(true) {
    if(i__435939_435945 < count__435938_435944) {
      var vec__435940_435946 = cljs.core._nth.call(null, chunk__435937_435943, i__435939_435945);
      var ev__431429__auto___435947 = cljs.core.nth.call(null, vec__435940_435946, 0, null);
      var func__431430__auto___435948 = cljs.core.nth.call(null, vec__435940_435946, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___435947, func__431430__auto___435948);
      var G__435949 = seq__435936_435942;
      var G__435950 = chunk__435937_435943;
      var G__435951 = count__435938_435944;
      var G__435952 = i__435939_435945 + 1;
      seq__435936_435942 = G__435949;
      chunk__435937_435943 = G__435950;
      count__435938_435944 = G__435951;
      i__435939_435945 = G__435952;
      continue
    }else {
      var temp__4092__auto___435953 = cljs.core.seq.call(null, seq__435936_435942);
      if(temp__4092__auto___435953) {
        var seq__435936_435954__$1 = temp__4092__auto___435953;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__435936_435954__$1)) {
          var c__3259__auto___435955 = cljs.core.chunk_first.call(null, seq__435936_435954__$1);
          var G__435956 = cljs.core.chunk_rest.call(null, seq__435936_435954__$1);
          var G__435957 = c__3259__auto___435955;
          var G__435958 = cljs.core.count.call(null, c__3259__auto___435955);
          var G__435959 = 0;
          seq__435936_435942 = G__435956;
          chunk__435937_435943 = G__435957;
          count__435938_435944 = G__435958;
          i__435939_435945 = G__435959;
          continue
        }else {
          var vec__435941_435960 = cljs.core.first.call(null, seq__435936_435954__$1);
          var ev__431429__auto___435961 = cljs.core.nth.call(null, vec__435941_435960, 0, null);
          var func__431430__auto___435962 = cljs.core.nth.call(null, vec__435941_435960, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___435961, func__431430__auto___435962);
          var G__435963 = cljs.core.next.call(null, seq__435936_435954__$1);
          var G__435964 = null;
          var G__435965 = 0;
          var G__435966 = 0;
          seq__435936_435942 = G__435963;
          chunk__435937_435943 = G__435964;
          count__435938_435944 = G__435965;
          i__435939_435945 = G__435966;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.modules.index.render_present = function render_present(docs) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-content.index-module-content", cljs.core.PersistentVector.fromArray(["\ufdd0:h3", "Index"], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.span4", cljs.core.PersistentVector.fromArray(["\ufdd0:ul", function() {
    var iter__3228__auto__ = function iter__435977(s__435978) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__435978__$1 = s__435978;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__435978__$1);
          if(temp__4092__auto__) {
            var s__435978__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__435978__$2)) {
              var c__3226__auto__ = cljs.core.chunk_first.call(null, s__435978__$2);
              var size__3227__auto__ = cljs.core.count.call(null, c__3226__auto__);
              var b__435980 = cljs.core.chunk_buffer.call(null, size__3227__auto__);
              if(function() {
                var i__435979 = 0;
                while(true) {
                  if(i__435979 < size__3227__auto__) {
                    var doc = cljs.core._nth.call(null, c__3226__auto__, i__435979);
                    cljs.core.chunk_append.call(null, b__435980, cljs.core.PersistentVector.fromArray(["\ufdd0:li", cljs.core.PersistentVector.fromArray(["\ufdd0:a", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:href", (new cljs.core.Keyword("\ufdd0:id")).call(null, doc)], true), [cljs.core.str(cljs.core.truth_((new cljs.core.Keyword("\ufdd0:project")).call(null, doc)) ? [cljs.core.str((new cljs.core.Keyword("\ufdd0:project")).call(null, doc)), cljs.core.str(" - ")].join("") : null), cljs.core.str((new cljs.core.Keyword("\ufdd0:title")).call(null, 
                    doc))].join("")], true)], true));
                    var G__435987 = i__435979 + 1;
                    i__435979 = G__435987;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__435980), iter__435977.call(null, cljs.core.chunk_rest.call(null, s__435978__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__435980), null)
              }
            }else {
              var doc = cljs.core.first.call(null, s__435978__$2);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:li", cljs.core.PersistentVector.fromArray(["\ufdd0:a", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:href", (new cljs.core.Keyword("\ufdd0:id")).call(null, doc)], true), [cljs.core.str(cljs.core.truth_((new cljs.core.Keyword("\ufdd0:project")).call(null, doc)) ? [cljs.core.str((new cljs.core.Keyword("\ufdd0:project")).call(null, doc)), cljs.core.str(" - ")].join("") : null), cljs.core.str((new cljs.core.Keyword("\ufdd0:title")).call(null, 
              doc))].join("")], true)], true), iter__435977.call(null, cljs.core.rest.call(null, s__435978__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3228__auto__.call(null, docs)
  }()], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.span4", cljs.core.PersistentVector.fromArray(["\ufdd0:canvas#tree-canvas", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:width", 400, "\ufdd0:height", 600], true)], true)], true)], true));
  var seq__435981_435988 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__435982_435989 = null;
  var count__435983_435990 = 0;
  var i__435984_435991 = 0;
  while(true) {
    if(i__435984_435991 < count__435983_435990) {
      var vec__435985_435992 = cljs.core._nth.call(null, chunk__435982_435989, i__435984_435991);
      var ev__431429__auto___435993 = cljs.core.nth.call(null, vec__435985_435992, 0, null);
      var func__431430__auto___435994 = cljs.core.nth.call(null, vec__435985_435992, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___435993, func__431430__auto___435994);
      var G__435995 = seq__435981_435988;
      var G__435996 = chunk__435982_435989;
      var G__435997 = count__435983_435990;
      var G__435998 = i__435984_435991 + 1;
      seq__435981_435988 = G__435995;
      chunk__435982_435989 = G__435996;
      count__435983_435990 = G__435997;
      i__435984_435991 = G__435998;
      continue
    }else {
      var temp__4092__auto___435999 = cljs.core.seq.call(null, seq__435981_435988);
      if(temp__4092__auto___435999) {
        var seq__435981_436000__$1 = temp__4092__auto___435999;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__435981_436000__$1)) {
          var c__3259__auto___436001 = cljs.core.chunk_first.call(null, seq__435981_436000__$1);
          var G__436002 = cljs.core.chunk_rest.call(null, seq__435981_436000__$1);
          var G__436003 = c__3259__auto___436001;
          var G__436004 = cljs.core.count.call(null, c__3259__auto___436001);
          var G__436005 = 0;
          seq__435981_435988 = G__436002;
          chunk__435982_435989 = G__436003;
          count__435983_435990 = G__436004;
          i__435984_435991 = G__436005;
          continue
        }else {
          var vec__435986_436006 = cljs.core.first.call(null, seq__435981_436000__$1);
          var ev__431429__auto___436007 = cljs.core.nth.call(null, vec__435986_436006, 0, null);
          var func__431430__auto___436008 = cljs.core.nth.call(null, vec__435986_436006, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436007, func__431430__auto___436008);
          var G__436009 = cljs.core.next.call(null, seq__435981_436000__$1);
          var G__436010 = null;
          var G__436011 = 0;
          var G__436012 = 0;
          seq__435981_435988 = G__436009;
          chunk__435982_435989 = G__436010;
          count__435983_435990 = G__436011;
          i__435984_435991 = G__436012;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.modules.index.render_edit = function render_edit(this$) {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-content.index-module-editor", "Indexes don't have any settings at the moment..."], true));
  var seq__436019_436025 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.EMPTY));
  var chunk__436020_436026 = null;
  var count__436021_436027 = 0;
  var i__436022_436028 = 0;
  while(true) {
    if(i__436022_436028 < count__436021_436027) {
      var vec__436023_436029 = cljs.core._nth.call(null, chunk__436020_436026, i__436022_436028);
      var ev__431429__auto___436030 = cljs.core.nth.call(null, vec__436023_436029, 0, null);
      var func__431430__auto___436031 = cljs.core.nth.call(null, vec__436023_436029, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436030, func__431430__auto___436031);
      var G__436032 = seq__436019_436025;
      var G__436033 = chunk__436020_436026;
      var G__436034 = count__436021_436027;
      var G__436035 = i__436022_436028 + 1;
      seq__436019_436025 = G__436032;
      chunk__436020_436026 = G__436033;
      count__436021_436027 = G__436034;
      i__436022_436028 = G__436035;
      continue
    }else {
      var temp__4092__auto___436036 = cljs.core.seq.call(null, seq__436019_436025);
      if(temp__4092__auto___436036) {
        var seq__436019_436037__$1 = temp__4092__auto___436036;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__436019_436037__$1)) {
          var c__3259__auto___436038 = cljs.core.chunk_first.call(null, seq__436019_436037__$1);
          var G__436039 = cljs.core.chunk_rest.call(null, seq__436019_436037__$1);
          var G__436040 = c__3259__auto___436038;
          var G__436041 = cljs.core.count.call(null, c__3259__auto___436038);
          var G__436042 = 0;
          seq__436019_436025 = G__436039;
          chunk__436020_436026 = G__436040;
          count__436021_436027 = G__436041;
          i__436022_436028 = G__436042;
          continue
        }else {
          var vec__436024_436043 = cljs.core.first.call(null, seq__436019_436037__$1);
          var ev__431429__auto___436044 = cljs.core.nth.call(null, vec__436024_436043, 0, null);
          var func__431430__auto___436045 = cljs.core.nth.call(null, vec__436024_436043, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___436044, func__431430__auto___436045);
          var G__436046 = cljs.core.next.call(null, seq__436019_436037__$1);
          var G__436047 = null;
          var G__436048 = 0;
          var G__436049 = 0;
          seq__436019_436025 = G__436046;
          chunk__436020_436026 = G__436047;
          count__436021_436027 = G__436048;
          i__436022_436028 = G__436049;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.objects.modules.index.$module = function $module(this$) {
  return orchard.util.dom.$.call(null, [cljs.core.str("#module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$))), cljs.core.str(" .module-content")].join(""))
};
orchard.objects.modules.index.load_index = function load_index(this$) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_436072) {
        var state_val_436073 = state_436072[1];
        if(state_val_436073 === 2) {
          var inst_436066 = state_436072[2];
          var inst_436067 = orchard.objects.modules.index.$module.call(null, this$);
          var inst_436068 = orchard.objects.modules.index.render_present.call(null, inst_436066);
          var inst_436069 = orchard.util.dom.replace_with.call(null, inst_436067, inst_436068);
          var inst_436070 = orchard.graphics.tree.draw_tree.call(null, "tree-canvas");
          var state_436072__$1 = function() {
            var statearr_436074 = state_436072;
            statearr_436074[5] = inst_436069;
            return statearr_436074
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_436072__$1, inst_436070)
        }else {
          if(state_val_436073 === 1) {
            var inst_436064 = orchard.model.all_wiki_pages.call(null, orchard.objects.app.db);
            var state_436072__$1 = state_436072;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_436072__$1, 2, inst_436064)
          }else {
            return null
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_436076 = new Array(6);
            statearr_436076[0] = state_machine__4793__auto__;
            statearr_436076[1] = 1;
            return statearr_436076
          };
          var state_machine__4793__auto____1 = function(state_436072) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_436072);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_436072) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_436072)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_436077 = f__4865__auto__.call(null);
      statearr_436077[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_436077
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
orchard.objects.modules.index.render_module = function render_module(this$, mode) {
  var G__436079 = mode;
  if(cljs.core._EQ_.call(null, "\ufdd0:edit", G__436079)) {
    return orchard.util.dom.replace_with.call(null, orchard.objects.modules.index.$module.call(null, this$), orchard.objects.modules.index.render_edit.call(null, this$))
  }else {
    if(cljs.core._EQ_.call(null, "\ufdd0:present", G__436079)) {
      return orchard.objects.modules.index.load_index.call(null, this$)
    }else {
      if("\ufdd0:else") {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(mode)].join(""));
      }else {
        return null
      }
    }
  }
};
orchard.object.object_STAR_.call(null, "\ufdd0:index-module", "\ufdd0:tags", cljs.core.PersistentHashSet.fromArray(["\ufdd0:module", null], true), "\ufdd0:triggers", cljs.core.PersistentHashSet.fromArray(["\ufdd0:save", null], true), "\ufdd0:behaviors", cljs.core.PersistentVector.fromArray(["\ufdd0:orchard.objects.modules/save-module"], true), "\ufdd0:mode", "\ufdd0:present", "\ufdd0:init", function(this$, record) {
  orchard.object.merge_BANG_.call(null, this$, record);
  orchard.util.core.bound_do.call(null, crate.binding.subatom.call(null, this$, cljs.core.PersistentVector.fromArray(["\ufdd0:mode"], true)), cljs.core.partial.call(null, orchard.objects.modules.index.render_module, this$));
  orchard.objects.modules.index.load_index.call(null, this$);
  return cljs.core.PersistentVector.fromArray(["\ufdd0:div.container-fluid", cljs.core.PersistentVector.fromArray(["\ufdd0:div.span11.module.index-module", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", [cljs.core.str("module-"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, cljs.core.deref.call(null, this$)))].join("")], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-tray", orchard.objects.modules.index.module_btn.call(null, this$)], true), cljs.core.PersistentVector.fromArray(["\ufdd0:div.module-content.index-module-content"], 
  true)], true)], true)
});
dommy.core.listen_BANG_.call(null, cljs.core.PersistentVector.fromArray([orchard.util.dom.$.call(null, "\ufdd0:body"), "\ufdd0:.index-module-content", "\ufdd0:a"], true), "\ufdd0:click", function(e) {
  orchard.objects.app.open_document.call(null, orchard.objects.app.db, cljs.core.last.call(null, clojure.string.split.call(null, e.target.href, /\//)));
  return e.preventDefault()
});
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3941__auto__ = reader;
    if(and__3941__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__3128__auto__ = reader == null ? null : reader;
    return function() {
      var or__3943__auto__ = cljs.reader.read_char[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.read_char["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3941__auto__ = reader;
    if(and__3941__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__3128__auto__ = reader == null ? null : reader;
    return function() {
      var or__3943__auto__ = cljs.reader.unread[goog.typeOf(x__3128__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.unread["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
goog.provide("cljs.reader.StringPushbackReader");
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__3069__auto__, writer__3070__auto__, opt__3071__auto__) {
  return cljs.core._write.call(null, writer__3070__auto__, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, self__.buffer_atom))) {
    var idx = cljs.core.deref.call(null, self__.index_atom);
    cljs.core.swap_BANG_.call(null, self__.index_atom, cljs.core.inc);
    return self__.s[idx]
  }else {
    var buf = cljs.core.deref.call(null, self__.buffer_atom);
    cljs.core.swap_BANG_.call(null, self__.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  return cljs.core.swap_BANG_.call(null, self__.buffer_atom, function(p1__440937_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__440937_SHARP_)
  })
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, index_atom, buffer_atom) {
  return new cljs.reader.StringPushbackReader(s, index_atom, buffer_atom)
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3943__auto__ = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3943__auto__ = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var and__3941__auto__ = function() {
      var or__3943__auto____$1 = "+" === initch;
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch);
        return next_ch
      }())
    }else {
      return and__3941__auto__
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__440938) {
    var rdr = cljs.core.first(arglist__440938);
    var msg = cljs.core.rest(arglist__440938);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3941__auto__ = !(ch === "#");
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !(ch === "'");
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(ch === ":");
      if(and__3941__auto____$2) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3943__auto__ = ch == null;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString()
    }else {
      var G__440939 = function() {
        sb.append(ch);
        return sb
      }();
      var G__440940 = cljs.reader.read_char.call(null, rdr);
      sb = G__440939;
      ch = G__440940;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3943__auto__ = ch === "n";
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = ch === "r";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return ch == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if(!function() {
    var or__3943__auto__ = group3 == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return group3.length < 1
    }
  }()) {
    return 0
  }else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : "\ufdd0:default" ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if(n == null) {
      return null
    }else {
      return negate * parseInt(n, radix)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if(function() {
    var and__3941__auto__ = !(matches == null);
    if(and__3941__auto__) {
      return matches[0] === s
    }else {
      return and__3941__auto__
    }
  }()) {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\b"
            }else {
              if(c === "f") {
                return"\f"
              }else {
                if("\ufdd0:else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if(cljs.core.truth_(mapresult)) {
    return mapresult
  }else {
    if(ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch)
        }else {
          if("\ufdd0:else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch))) {
      var G__440941 = cljs.reader.read_char.call(null, rdr);
      ch = G__440941;
      continue
    }else {
      return ch
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading")
    }
    if(delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a)
    }else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__440942 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__440942;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__440943 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__440943;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if(cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _)
  }else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3943__auto__ = ch == null;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return cljs.reader.macros.call(null, ch)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3943__auto__ = cljs.reader.match_number.call(null, s);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]")
      }
    }else {
      var G__440944 = function() {
        buffer.append(ch);
        return buffer
      }();
      var G__440945 = cljs.reader.read_char.call(null, reader);
      buffer = G__440944;
      ch = G__440945;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading")
    }else {
      if("\\" === ch) {
        var G__440946 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer
        }();
        var G__440947 = cljs.reader.read_char.call(null, reader);
        buffer = G__440946;
        ch = G__440947;
        continue
      }else {
        if('"' === ch) {
          return buffer.toString()
        }else {
          if("\ufdd0:default") {
            var G__440948 = function() {
              buffer.append(ch);
              return buffer
            }();
            var G__440949 = cljs.reader.read_char.call(null, reader);
            buffer = G__440948;
            ch = G__440949;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length))
  }else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = function() {
      var and__3941__auto__ = !(void 0 === ns);
      if(and__3941__auto__) {
        return ns.substring(ns.length - 2, ns.length) === ":/"
      }else {
        return and__3941__auto__
      }
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = name[name.length - 1] === ":";
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        return!(token__$1.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1)
  }else {
    if(function() {
      var and__3941__auto__ = !(ns == null);
      if(and__3941__auto__) {
        return ns.length > 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name)
    }else {
      return cljs.core.keyword.call(null, token__$1)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(f instanceof cljs.core.Symbol) {
    return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:tag", f], true)
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:tag", f], true)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArray([f, true], true)
      }else {
        if("\ufdd0:else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__440951 = o;
    if(G__440951) {
      if(function() {
        var or__3943__auto__ = G__440951.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__440951.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__440951.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__440951)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__440951)
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null))
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null))
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0:else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0:else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(ch == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__440952 = reader;
        var G__440953 = eof_is_error;
        var G__440954 = sentinel;
        var G__440955 = is_recursive;
        reader = G__440952;
        eof_is_error = G__440953;
        sentinel = G__440954;
        is_recursive = G__440955;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__440956 = cljs.reader.read_comment.call(null, reader, ch);
          var G__440957 = eof_is_error;
          var G__440958 = sentinel;
          var G__440959 = is_recursive;
          reader = G__440956;
          eof_is_error = G__440957;
          sentinel = G__440958;
          is_recursive = G__440959;
          continue
        }else {
          if("\ufdd0:else") {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : "\ufdd0:else" ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if(res === reader) {
              var G__440960 = reader;
              var G__440961 = eof_is_error;
              var G__440962 = sentinel;
              var G__440963 = is_recursive;
              reader = G__440960;
              eof_is_error = G__440961;
              sentinel = G__440962;
              is_recursive = G__440963;
              continue
            }else {
              return res
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0:else") {
        var b = new goog.string.StringBuffer(s);
        while(true) {
          if(b.getLength() < width) {
            var G__440964 = b.append("0");
            b = G__440964;
            continue
          }else {
            return b.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3941__auto__ = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3941__auto__)) {
    var or__3943__auto__ = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3941__auto__
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check = function(timestamp) {
    return function(low, n, high, msg) {
      if(function() {
        var and__3941__auto__ = low <= n;
        if(and__3941__auto__) {
          return n <= high
        }else {
          return and__3941__auto__
        }
      }()) {
      }else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "<=", "<=", -1640529606, null), new cljs.core.Symbol(null, "low", "low", -1640424179, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), new cljs.core.Symbol(null, 
        "high", "high", -1637329061, null))))].join(""));
      }
      return n
    }
  }(timestamp);
  return function(ts) {
    var temp__4092__auto__ = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp, ts)));
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__440969 = temp__4092__auto__;
      var vec__440970 = cljs.core.nth.call(null, vec__440969, 0, null);
      var _ = cljs.core.nth.call(null, vec__440970, 0, null);
      var years = cljs.core.nth.call(null, vec__440970, 1, null);
      var months = cljs.core.nth.call(null, vec__440970, 2, null);
      var days = cljs.core.nth.call(null, vec__440970, 3, null);
      var hours = cljs.core.nth.call(null, vec__440970, 4, null);
      var minutes = cljs.core.nth.call(null, vec__440970, 5, null);
      var seconds = cljs.core.nth.call(null, vec__440970, 6, null);
      var milliseconds = cljs.core.nth.call(null, vec__440970, 7, null);
      var vec__440971 = cljs.core.nth.call(null, vec__440969, 1, null);
      var ___$1 = cljs.core.nth.call(null, vec__440971, 0, null);
      var ___$2 = cljs.core.nth.call(null, vec__440971, 1, null);
      var ___$3 = cljs.core.nth.call(null, vec__440971, 2, null);
      var V = vec__440969;
      var vec__440972 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__440968_SHARP_) {
          return parseInt(p1__440968_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__440966_SHARP_, p2__440965_SHARP_) {
        return cljs.core.update_in.call(null, p2__440965_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__440966_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__440967_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__440967_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V));
      var vec__440973 = cljs.core.nth.call(null, vec__440972, 0, null);
      var ___$4 = cljs.core.nth.call(null, vec__440973, 0, null);
      var y = cljs.core.nth.call(null, vec__440973, 1, null);
      var mo = cljs.core.nth.call(null, vec__440973, 2, null);
      var d = cljs.core.nth.call(null, vec__440973, 3, null);
      var h = cljs.core.nth.call(null, vec__440973, 4, null);
      var m = cljs.core.nth.call(null, vec__440973, 5, null);
      var s = cljs.core.nth.call(null, vec__440973, 6, null);
      var ms = cljs.core.nth.call(null, vec__440973, 7, null);
      var vec__440974 = cljs.core.nth.call(null, vec__440972, 1, null);
      var offset_sign = cljs.core.nth.call(null, vec__440974, 0, null);
      var offset_hours = cljs.core.nth.call(null, vec__440974, 1, null);
      var offset_minutes = cljs.core.nth.call(null, vec__440974, 2, null);
      var offset = offset_sign * (offset_hours * 60 + offset_minutes);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years) ? 1970 : y, cljs.core.not.call(null, months) ? 1 : check.call(null, 1, mo, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days) ? 1 : check.call(null, 1, d, cljs.reader.days_in_month.call(null, mo, cljs.reader.leap_year_QMARK_.call(null, y)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, hours) ? 0 : check.call(null, 0, h, 23, "timestamp hour field must be in range 0..23"), 
      cljs.core.not.call(null, minutes) ? 0 : check.call(null, 0, m, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds) ? 0 : check.call(null, 0, s, cljs.core._EQ_.call(null, m, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds) ? 0 : check.call(null, 0, ms, 999, "timestamp millisecond field must be in range 0..999"), offset], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var vec__440976 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__440976, 0, null);
    var months = cljs.core.nth.call(null, vec__440976, 1, null);
    var days = cljs.core.nth.call(null, vec__440976, 2, null);
    var hours = cljs.core.nth.call(null, vec__440976, 3, null);
    var minutes = cljs.core.nth.call(null, vec__440976, 4, null);
    var seconds = cljs.core.nth.call(null, vec__440976, 5, null);
    var ms = cljs.core.nth.call(null, vec__440976, 6, null);
    var offset = cljs.core.nth.call(null, vec__440976, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.fromArray(["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue], true));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if(cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    if(cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false))
    }else {
      if("\ufdd0:else") {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
      }else {
        return null
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f
  });
  return old_parser
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null
  });
  return old_parser
};
goog.provide("orchard.util.fetch");
goog.require("cljs.core");
goog.require("goog.structs");
goog.require("goog.Uri.QueryData");
goog.require("goog.events");
goog.require("cljs.reader");
goog.require("clojure.string");
goog.require("goog.net.XhrIo");
orchard.util.fetch.__GT_method = function __GT_method(m) {
  return clojure.string.upper_case.call(null, cljs.core.name.call(null, m))
};
orchard.util.fetch.parse_route = function parse_route(route) {
  if(cljs.core.string_QMARK_.call(null, route)) {
    return cljs.core.PersistentVector.fromArray(["GET", route], true)
  }else {
    if(cljs.core.vector_QMARK_.call(null, route)) {
      var vec__438621 = route;
      var m = cljs.core.nth.call(null, vec__438621, 0, null);
      var u = cljs.core.nth.call(null, vec__438621, 1, null);
      return cljs.core.PersistentVector.fromArray([orchard.util.fetch.__GT_method.call(null, cljs.core.name.call(null, m)), u], true)
    }else {
      if("\ufdd0:else") {
        return cljs.core.PersistentVector.fromArray(["GET", route], true)
      }else {
        return null
      }
    }
  }
};
orchard.util.fetch.__GT_data = function __GT_data(d) {
  var cur = cljs.core.clj__GT_js.call(null, d);
  var query = goog.Uri.QueryData.createFromMap(new goog.structs.Map(cur));
  return[cljs.core.str(query)].join("")
};
orchard.util.fetch.__GT_callback = function __GT_callback(callback) {
  if(cljs.core.truth_(callback)) {
    return function(req) {
      var data = req.getResponseText();
      return callback.call(null, data)
    }
  }else {
    return null
  }
};
orchard.util.fetch.xhr = function() {
  var xhr__delegate = function(url, content, callback, p__438622) {
    var vec__438625 = p__438622;
    var headers = cljs.core.nth.call(null, vec__438625, 0, null);
    var req = new goog.net.XhrIo;
    var vec__438626 = orchard.util.fetch.parse_route.call(null, url);
    var method = cljs.core.nth.call(null, vec__438626, 0, null);
    var uri = cljs.core.nth.call(null, vec__438626, 1, null);
    var data = orchard.util.fetch.__GT_data.call(null, content);
    var callback__$1 = orchard.util.fetch.__GT_callback.call(null, callback);
    if(cljs.core.truth_(callback__$1)) {
      goog.events.listen(req, goog.net.EventType.COMPLETE, function() {
        return callback__$1.call(null, req)
      })
    }else {
    }
    return req.send(uri, method, data, cljs.core.truth_(headers) ? cljs.core.clj__GT_js.call(null, headers) : null)
  };
  var xhr = function(url, content, callback, var_args) {
    var p__438622 = null;
    if(arguments.length > 3) {
      p__438622 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return xhr__delegate.call(this, url, content, callback, p__438622)
  };
  xhr.cljs$lang$maxFixedArity = 3;
  xhr.cljs$lang$applyTo = function(arglist__438627) {
    var url = cljs.core.first(arglist__438627);
    arglist__438627 = cljs.core.next(arglist__438627);
    var content = cljs.core.first(arglist__438627);
    arglist__438627 = cljs.core.next(arglist__438627);
    var callback = cljs.core.first(arglist__438627);
    var p__438622 = cljs.core.rest(arglist__438627);
    return xhr__delegate(url, content, callback, p__438622)
  };
  xhr.cljs$core$IFn$_invoke$arity$variadic = xhr__delegate;
  return xhr
}();
goog.provide("test.orchard.couchdb_test");
goog.require("cljs.core");
goog.require("orchard.util.time");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("orchard.object");
goog.require("orchard.couchdb");
goog.require("orchard.util.time");
goog.require("orchard.util.core");
test.orchard.couchdb_test.rand_doc = function() {
  var rand_doc = null;
  var rand_doc__0 = function() {
    return rand_doc.call(null, orchard.util.core.uuid.call(null))
  };
  var rand_doc__1 = function(id) {
    return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", id, "\ufdd0:type", "test-doc"], true)
  };
  rand_doc = function(id) {
    switch(arguments.length) {
      case 0:
        return rand_doc__0.call(this);
      case 1:
        return rand_doc__1.call(this, id)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand_doc.cljs$core$IFn$_invoke$arity$0 = rand_doc__0;
  rand_doc.cljs$core$IFn$_invoke$arity$1 = rand_doc__1;
  return rand_doc
}();
test.orchard.couchdb_test.create_test_docs = function create_test_docs(db, n) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_432781) {
        var state_val_432782 = state_432781[1];
        if(state_val_432782 === 7) {
          var inst_432764 = state_432781[5];
          var inst_432772 = state_432781[2];
          var inst_432773 = inst_432764 + 1;
          var inst_432764__$1 = inst_432773;
          var state_432781__$1 = function() {
            var statearr_432783 = state_432781;
            statearr_432783[6] = inst_432772;
            statearr_432783[5] = inst_432764__$1;
            return statearr_432783
          }();
          var statearr_432784_432794 = state_432781__$1;
          statearr_432784_432794[2] = null;
          statearr_432784_432794[1] = 2;
          return"\ufdd0:recur"
        }else {
          if(state_val_432782 === 6) {
            var inst_432777 = state_432781[2];
            var state_432781__$1 = state_432781;
            var statearr_432785_432795 = state_432781__$1;
            statearr_432785_432795[2] = inst_432777;
            statearr_432785_432795[1] = 3;
            return"\ufdd0:recur"
          }else {
            if(state_val_432782 === 5) {
              var state_432781__$1 = state_432781;
              var statearr_432786_432796 = state_432781__$1;
              statearr_432786_432796[2] = null;
              statearr_432786_432796[1] = 6;
              return"\ufdd0:recur"
            }else {
              if(state_val_432782 === 4) {
                var inst_432764 = state_432781[5];
                var inst_432768 = [cljs.core.str(inst_432764)].join("");
                var inst_432769 = cljs.core.hash_map.call(null, "\ufdd0:id", inst_432768, "\ufdd0:type", "\ufdd0:test-doc");
                var inst_432770 = orchard.couchdb.update_doc.call(null, db, inst_432769);
                var state_432781__$1 = state_432781;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_432781__$1, 7, inst_432770)
              }else {
                if(state_val_432782 === 3) {
                  var inst_432779 = state_432781[2];
                  var state_432781__$1 = state_432781;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_432781__$1, inst_432779)
                }else {
                  if(state_val_432782 === 2) {
                    var inst_432764 = state_432781[5];
                    var inst_432766 = inst_432764 < n;
                    var state_432781__$1 = state_432781;
                    if(cljs.core.truth_(inst_432766)) {
                      var statearr_432787_432797 = state_432781__$1;
                      statearr_432787_432797[1] = 4
                    }else {
                      var statearr_432788_432798 = state_432781__$1;
                      statearr_432788_432798[1] = 5
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_432782 === 1) {
                      var inst_432764 = 0;
                      var state_432781__$1 = function() {
                        var statearr_432789 = state_432781;
                        statearr_432789[5] = inst_432764;
                        return statearr_432789
                      }();
                      var statearr_432790_432799 = state_432781__$1;
                      statearr_432790_432799[2] = null;
                      statearr_432790_432799[1] = 2;
                      return"\ufdd0:recur"
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_432792 = new Array(7);
            statearr_432792[0] = state_machine__4793__auto__;
            statearr_432792[1] = 1;
            return statearr_432792
          };
          var state_machine__4793__auto____1 = function(state_432781) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_432781);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_432781) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_432781)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_432793 = f__4865__auto__.call(null);
      statearr_432793[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_432793
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
test.orchard.couchdb_test.read_test_docs = function read_test_docs(db, n) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_432843) {
        var state_val_432844 = state_432843[1];
        if(state_val_432844 === 7) {
          var inst_432828 = state_432843[5];
          var inst_432834 = state_432843[2];
          var inst_432835 = inst_432828 + 1;
          var inst_432828__$1 = inst_432835;
          var state_432843__$1 = function() {
            var statearr_432845 = state_432843;
            statearr_432845[5] = inst_432828__$1;
            statearr_432845[6] = inst_432834;
            return statearr_432845
          }();
          var statearr_432846_432856 = state_432843__$1;
          statearr_432846_432856[2] = null;
          statearr_432846_432856[1] = 2;
          return"\ufdd0:recur"
        }else {
          if(state_val_432844 === 6) {
            var inst_432839 = state_432843[2];
            var state_432843__$1 = state_432843;
            var statearr_432847_432857 = state_432843__$1;
            statearr_432847_432857[2] = inst_432839;
            statearr_432847_432857[1] = 3;
            return"\ufdd0:recur"
          }else {
            if(state_val_432844 === 5) {
              var state_432843__$1 = state_432843;
              var statearr_432848_432858 = state_432843__$1;
              statearr_432848_432858[2] = null;
              statearr_432848_432858[1] = 6;
              return"\ufdd0:recur"
            }else {
              if(state_val_432844 === 4) {
                var inst_432828 = state_432843[5];
                var inst_432832 = orchard.couchdb.get_doc.call(null, db, inst_432828);
                var state_432843__$1 = state_432843;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_432843__$1, 7, inst_432832)
              }else {
                if(state_val_432844 === 3) {
                  var inst_432841 = state_432843[2];
                  var state_432843__$1 = state_432843;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_432843__$1, inst_432841)
                }else {
                  if(state_val_432844 === 2) {
                    var inst_432828 = state_432843[5];
                    var inst_432830 = inst_432828 < n;
                    var state_432843__$1 = state_432843;
                    if(cljs.core.truth_(inst_432830)) {
                      var statearr_432849_432859 = state_432843__$1;
                      statearr_432849_432859[1] = 4
                    }else {
                      var statearr_432850_432860 = state_432843__$1;
                      statearr_432850_432860[1] = 5
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_432844 === 1) {
                      var inst_432828 = 0;
                      var state_432843__$1 = function() {
                        var statearr_432851 = state_432843;
                        statearr_432851[5] = inst_432828;
                        return statearr_432851
                      }();
                      var statearr_432852_432861 = state_432843__$1;
                      statearr_432852_432861[2] = null;
                      statearr_432852_432861[1] = 2;
                      return"\ufdd0:recur"
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_432854 = new Array(7);
            statearr_432854[0] = state_machine__4793__auto__;
            statearr_432854[1] = 1;
            return statearr_432854
          };
          var state_machine__4793__auto____1 = function(state_432843) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_432843);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_432843) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_432843)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_432855 = f__4865__auto__.call(null);
      statearr_432855[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_432855
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
test.orchard.couchdb_test.all_tests = function all_tests(db) {
  console.log([cljs.core.str("Testing: "), cljs.core.str("couch-ids-test"), cljs.core.str("...")].join(""));
  console.log([cljs.core.str("    "), cljs.core.str("should convert both id and rev keys to _id and _rev"), cljs.core.str("...")].join(""));
  var a__431394__auto___432862 = orchard.couchdb.couch_ids.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", "test-id", "\ufdd0:rev", "rev-id"], true));
  var b__431395__auto___432863 = cljs.core.PersistentArrayMap.fromArray(["_id", "test-id", "_rev", "rev-id"], true);
  if(cljs.core._EQ_.call(null, a__431394__auto___432862, b__431395__auto___432863)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(a__431394__auto___432862), cljs.core.str(" != "), cljs.core.str(b__431395__auto___432863)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("clojure.core", "=", "clojure.core/=", -670361287, null), new cljs.core.Symbol(null, "a__431394__auto__", "a__431394__auto__", 541555045, null), new cljs.core.Symbol(null, "b__431395__auto__", "b__431395__auto__", 87410279, 
    null))))].join(""));
  }
  console.log([cljs.core.str("Testing: "), cljs.core.str("cljs-ids-test"), cljs.core.str("...")].join(""));
  console.log([cljs.core.str("    "), cljs.core.str('should convert both "_id" and "_rev" keys to :id and :rev'), cljs.core.str("...")].join(""));
  var a__431394__auto__ = cljs.core.select_keys.call(null, orchard.couchdb.cljs_ids.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:_id", "test-id", "\ufdd0:_rev", "rev-id"], true)), cljs.core.PersistentVector.fromArray(["\ufdd0:id", "\ufdd0:rev"], true));
  var b__431395__auto__ = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", "test-id", "\ufdd0:rev", "rev-id"], true);
  if(cljs.core._EQ_.call(null, a__431394__auto__, b__431395__auto__)) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(a__431394__auto__), cljs.core.str(" != "), cljs.core.str(b__431395__auto__)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("clojure.core", "=", "clojure.core/=", -670361287, null), new cljs.core.Symbol(null, "a__431394__auto__", "a__431394__auto__", 541555045, null), new cljs.core.Symbol(null, "b__431395__auto__", "b__431395__auto__", 87410279, null))))].join(""));
  }
};
test.orchard.couchdb_test.perf_test = function perf_test(db) {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_432920) {
        var state_val_432921 = state_432920[1];
        if(state_val_432921 === 3) {
          var inst_432896 = state_432920[5];
          var inst_432900 = state_432920[6];
          var inst_432903 = state_432920[2];
          var inst_432904 = orchard.util.time.now.call(null);
          var inst_432905 = inst_432900 - inst_432896;
          var inst_432906 = inst_432905 / 5;
          var inst_432907 = inst_432904 - inst_432900;
          var inst_432908 = inst_432907 / 5;
          var inst_432909 = inst_432908 + inst_432906;
          var inst_432910 = orchard.util.log.log.call(null, "");
          var inst_432911 = inst_432909 / 1E3;
          var inst_432912 = orchard.util.log.log.call(null, "Created and read ", 5, " documents in ", inst_432911, "s");
          var inst_432913 = orchard.util.log.log.call(null, "");
          var inst_432914 = inst_432906 / 1E3;
          var inst_432915 = orchard.util.log.log.call(null, "Create time: ", inst_432914, "s");
          var inst_432916 = inst_432908 / 1E3;
          var inst_432917 = orchard.util.log.log.call(null, "Read time: ", inst_432916, "s");
          var inst_432918 = orchard.util.log.log.call(null, "");
          var state_432920__$1 = function() {
            var statearr_432922 = state_432920;
            statearr_432922[7] = inst_432903;
            statearr_432922[8] = inst_432913;
            statearr_432922[9] = inst_432912;
            statearr_432922[10] = inst_432915;
            statearr_432922[11] = inst_432917;
            statearr_432922[12] = inst_432910;
            return statearr_432922
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_432920__$1, inst_432918)
        }else {
          if(state_val_432921 === 2) {
            var inst_432899 = state_432920[2];
            var inst_432900 = orchard.util.time.now.call(null);
            var inst_432901 = test.orchard.couchdb_test.read_test_docs.call(null, db, 5);
            var state_432920__$1 = function() {
              var statearr_432923 = state_432920;
              statearr_432923[13] = inst_432899;
              statearr_432923[6] = inst_432900;
              return statearr_432923
            }();
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_432920__$1, 3, inst_432901)
          }else {
            if(state_val_432921 === 1) {
              var inst_432896 = orchard.util.time.now.call(null);
              var inst_432897 = test.orchard.couchdb_test.create_test_docs.call(null, db, 5);
              var state_432920__$1 = function() {
                var statearr_432924 = state_432920;
                statearr_432924[5] = inst_432896;
                return statearr_432924
              }();
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_432920__$1, 2, inst_432897)
            }else {
              return null
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_432926 = new Array(14);
            statearr_432926[0] = state_machine__4793__auto__;
            statearr_432926[1] = 1;
            return statearr_432926
          };
          var state_machine__4793__auto____1 = function(state_432920) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_432920);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_432920) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_432920)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_432927 = f__4865__auto__.call(null);
      statearr_432927[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_432927
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
test.orchard.couchdb_test.run_tests = function run_tests() {
  var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4865__auto__ = function() {
      var switch__4792__auto__ = function(state_432969) {
        var state_val_432970 = state_432969[1];
        if(state_val_432970 === 3) {
          var inst_432964 = state_432969[2];
          var inst_432965 = orchard.util.log.log.call(null, "Finished running performance tests");
          var inst_432966 = orchard.util.log.log.call(null, "Deleted test db");
          var inst_432967 = orchard.util.log.log.call(null, "Finished testing");
          var state_432969__$1 = function() {
            var statearr_432971 = state_432969;
            statearr_432971[5] = inst_432964;
            statearr_432971[6] = inst_432965;
            statearr_432971[7] = inst_432966;
            return statearr_432971
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_432969__$1, inst_432967)
        }else {
          if(state_val_432970 === 2) {
            var inst_432954 = state_432969[2];
            var inst_432955 = orchard.util.log.log.call(null, "Created test db");
            var inst_432956 = orchard.util.log.log.call(null, "");
            var inst_432957 = orchard.util.log.log.call(null, "Running tests...");
            var inst_432958 = test.orchard.couchdb_test.all_tests.call(null, inst_432954);
            var inst_432959 = orchard.util.log.log.call(null, "Finished running tests");
            var inst_432960 = orchard.util.log.log.call(null, "");
            var inst_432961 = orchard.util.log.log.call(null, "Running performance tests...");
            var inst_432962 = test.orchard.couchdb_test.perf_test.call(null, inst_432954);
            var state_432969__$1 = function() {
              var statearr_432972 = state_432969;
              statearr_432972[8] = inst_432957;
              statearr_432972[9] = inst_432956;
              statearr_432972[10] = inst_432959;
              statearr_432972[11] = inst_432958;
              statearr_432972[12] = inst_432961;
              statearr_432972[13] = inst_432960;
              statearr_432972[14] = inst_432955;
              return statearr_432972
            }();
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_432969__$1, 3, inst_432962)
          }else {
            if(state_val_432970 === 1) {
              var inst_432952 = orchard.couchdb.open.call(null, "test-db");
              var state_432969__$1 = state_432969;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_432969__$1, 2, inst_432952)
            }else {
              return null
            }
          }
        }
      };
      return function(switch__4792__auto__) {
        return function() {
          var state_machine__4793__auto__ = null;
          var state_machine__4793__auto____0 = function() {
            var statearr_432974 = new Array(15);
            statearr_432974[0] = state_machine__4793__auto__;
            statearr_432974[1] = 1;
            return statearr_432974
          };
          var state_machine__4793__auto____1 = function(state_432969) {
            while(true) {
              var result__4794__auto__ = switch__4792__auto__.call(null, state_432969);
              if(result__4794__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4794__auto__
              }
              break
            }
          };
          state_machine__4793__auto__ = function(state_432969) {
            switch(arguments.length) {
              case 0:
                return state_machine__4793__auto____0.call(this);
              case 1:
                return state_machine__4793__auto____1.call(this, state_432969)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
          state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
          return state_machine__4793__auto__
        }()
      }(switch__4792__auto__)
    }();
    var state__4866__auto__ = function() {
      var statearr_432975 = f__4865__auto__.call(null);
      statearr_432975[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
      return statearr_432975
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
  });
  return c__4864__auto__
};
goog.provide("orchard.util.fs");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
orchard.util.fs.fs = node_require("fs");
orchard.util.fs.path = node_require("path");
orchard.util.fs.exists_QMARK_ = function exists_QMARK_(path) {
  var res_chan = cljs.core.async.chan.call(null);
  orchard.util.fs.fs.exists(path, function(exists) {
    var c__4864__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__4865__auto__ = function() {
        var switch__4792__auto__ = function(state_438639) {
          var state_val_438640 = state_438639[1];
          if(state_val_438640 === 2) {
            var inst_438637 = state_438639[2];
            var state_438639__$1 = state_438639;
            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_438639__$1, inst_438637)
          }else {
            if(state_val_438640 === 1) {
              var state_438639__$1 = state_438639;
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_438639__$1, 2, res_chan, exists)
            }else {
              return null
            }
          }
        };
        return function(switch__4792__auto__) {
          return function() {
            var state_machine__4793__auto__ = null;
            var state_machine__4793__auto____0 = function() {
              var statearr_438642 = new Array(5);
              statearr_438642[0] = state_machine__4793__auto__;
              statearr_438642[1] = 1;
              return statearr_438642
            };
            var state_machine__4793__auto____1 = function(state_438639) {
              while(true) {
                var result__4794__auto__ = switch__4792__auto__.call(null, state_438639);
                if(result__4794__auto__ === "\ufdd0:recur") {
                  continue
                }else {
                  return result__4794__auto__
                }
                break
              }
            };
            state_machine__4793__auto__ = function(state_438639) {
              switch(arguments.length) {
                case 0:
                  return state_machine__4793__auto____0.call(this);
                case 1:
                  return state_machine__4793__auto____1.call(this, state_438639)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4793__auto____0;
            state_machine__4793__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4793__auto____1;
            return state_machine__4793__auto__
          }()
        }(switch__4792__auto__)
      }();
      var state__4866__auto__ = function() {
        var statearr_438643 = f__4865__auto__.call(null);
        statearr_438643[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4864__auto__;
        return statearr_438643
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4866__auto__)
    });
    return c__4864__auto__
  });
  return res_chan
};
orchard.util.fs.join = function() {
  var join__delegate = function(args) {
    return cljs.core.apply.call(null, orchard.util.fs.path.join, args)
  };
  var join = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return join__delegate.call(this, args)
  };
  join.cljs$lang$maxFixedArity = 0;
  join.cljs$lang$applyTo = function(arglist__438644) {
    var args = cljs.core.seq(arglist__438644);
    return join__delegate(args)
  };
  join.cljs$core$IFn$_invoke$arity$variadic = join__delegate;
  return join
}();
orchard.util.fs.mkdir = function mkdir(path) {
  return orchard.util.fs.fs.mkdirSync(path)
};
goog.provide("orchard.test.dom_test");
goog.require("cljs.core");
goog.require("orchard.util.core");
goog.require("orchard.util.dom");
goog.require("orchard.util.dom");
goog.require("orchard.util.core");
orchard.test.dom_test.add_test_elem = function add_test_elem() {
  var elem = orchard.util.dom.create.call(null, "\ufdd0:div");
  var elem_id = orchard.util.core.uuid.call(null);
  orchard.util.dom.add_id.call(null, elem, "test-node");
  orchard.util.dom.append.call(null, document.body, elem);
  return cljs.core.PersistentVector.fromArray([elem, elem_id], true)
};
orchard.test.dom_test.all_tests = function all_tests() {
  console.log([cljs.core.str("Testing: "), cljs.core.str("selector-test"), cljs.core.str("...")].join(""));
  var vec__432978_432980 = orchard.test.dom_test.add_test_elem.call(null);
  var elem_432981 = cljs.core.nth.call(null, vec__432978_432980, 0, null);
  var elem_id_432982 = cljs.core.nth.call(null, vec__432978_432980, 1, null);
  console.log([cljs.core.str("    "), cljs.core.str("should select a DOM node by id."), cljs.core.str("...")].join(""));
  var a__431394__auto___432983 = elem_432981;
  var b__431395__auto___432984 = orchard.util.dom.by_id.call(null, elem_id_432982);
  if(cljs.core._EQ_.call(null, a__431394__auto___432983, b__431395__auto___432984)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(a__431394__auto___432983), cljs.core.str(" != "), cljs.core.str(b__431395__auto___432984)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("clojure.core", "=", "clojure.core/=", -670361287, null), new cljs.core.Symbol(null, "a__431394__auto__", "a__431394__auto__", 541555045, null), new cljs.core.Symbol(null, "b__431395__auto__", "b__431395__auto__", 87410279, 
    null))))].join(""));
  }
  orchard.util.dom.remove.call(null, elem_432981);
  console.log([cljs.core.str("Testing: "), cljs.core.str("data-attribute-test"), cljs.core.str("...")].join(""));
  var data = cljs.core.PersistentArrayMap.fromArray(["foo", "bar", "biz", "boz"], true);
  var vec__432979 = orchard.test.dom_test.add_test_elem.call(null);
  var elem = cljs.core.nth.call(null, vec__432979, 0, null);
  var elem_id = cljs.core.nth.call(null, vec__432979, 1, null);
  console.log([cljs.core.str("    "), cljs.core.str("should set and get data attributes from a DOM node."), cljs.core.str("...")].join(""));
  orchard.util.dom.sdata.call(null, elem, "test-data", data);
  var a__431394__auto__ = cljs.core.PersistentArrayMap.fromArray(["boner", "loner"], true);
  var b__431395__auto__ = orchard.util.dom.gdata.call(null, elem, "test-data");
  if(cljs.core._EQ_.call(null, a__431394__auto__, b__431395__auto__)) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(a__431394__auto__), cljs.core.str(" != "), cljs.core.str(b__431395__auto__)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("clojure.core", "=", "clojure.core/=", -670361287, null), new cljs.core.Symbol(null, "a__431394__auto__", "a__431394__auto__", 541555045, null), new cljs.core.Symbol(null, "b__431395__auto__", "b__431395__auto__", 87410279, null))))].join(""));
  }
};
orchard.test.dom_test.run_tests = function run_tests() {
  return orchard.test.dom_test.all_tests.call(null)
};
goog.provide("orchard.util.channel");
goog.require("cljs.core");
goog.require("orchard.util.dom");
goog.require("cljs.core.async");
goog.require("dommy.core");
goog.require("orchard.util.dom");
goog.require("cljs.core.async");
orchard.util.channel.event_chan = function event_chan(el, e_type) {
  var c = cljs.core.async.chan.call(null);
  el.addEventListener(e_type, function(p1__438253_SHARP_) {
    return cljs.core.async.put_BANG_.call(null, c, p1__438253_SHARP_)
  });
  return c
};
orchard.util.channel.map_chan = function map_chan(f, in$) {
  var c = cljs.core.async.chan.call(null);
  cljs.core.async.go.call(null, function() {
    while(true) {
      cljs.core.async._GT__BANG_.call(null, c, f.call(null, cljs.core.async._LT__BANG_.call(null, in$)));
      continue;
      break
    }
  }());
  return c
};
orchard.util.channel.chan_callback = function chan_callback(c) {
  return function(v) {
    return cljs.core.async._GT__BANG_.call(null, c, v)
  }
};
orchard.util.channel.data_from_event = function data_from_event(e) {
  return e
};
orchard.util.channel.on = function() {
  var on = null;
  var on__3 = function(ev_type, selector, callback) {
    return on.call(null, orchard.util.dom.$.call(null, "\ufdd0:body"), ev_type, selector, callback)
  };
  var on__4 = function(parent_el, ev_type, selector, callback) {
    return dommy.core.listen_BANG_.call(null, cljs.core.PersistentVector.fromArray([dom.$.call(null, "\ufdd0:body"), selector], true), ev_type, callback)
  };
  on = function(parent_el, ev_type, selector, callback) {
    switch(arguments.length) {
      case 3:
        return on__3.call(this, parent_el, ev_type, selector);
      case 4:
        return on__4.call(this, parent_el, ev_type, selector, callback)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  on.cljs$core$IFn$_invoke$arity$3 = on__3;
  on.cljs$core$IFn$_invoke$arity$4 = on__4;
  return on
}();
orchard.util.channel.click_chan = function click_chan(selector, msg_name) {
  var rc = cljs.core.async.chan.call(null);
  return orchard.util.channel.on.call(null, orchard.util.dom.$.call(null, "\ufdd0:body"), "\ufdd0:click", selector, function(e) {
    orchard.util.dom.prevent.call(null, e);
    return cljs.core.async.put_BANG_.call(null, rc, cljs.core.PersistentVector.fromArray([msg_name, orchard.util.channel.data_from_event.call(null, e)], true))
  })
};
orchard.util.channel.offset = function offset(el) {
  return function(e) {
    return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", e.pageX - el.offsetLeft, "\ufdd0:y", e.pageY - el.offsetTop], true)
  }
};
goog.provide("orchard.hammock");
goog.require("cljs.core");
goog.require("orchard.util.fetch");
goog.require("orchard.util.log");
goog.require("cljs.core.async");
goog.require("orchard.util.log");
goog.require("orchard.util.fetch");
goog.require("orchard.util.core");
goog.require("orchard.objects.logger");
goog.require("cljs.core.async");
orchard.hammock.couch_ids = function couch_ids(x) {
  var id = (new cljs.core.Keyword("\ufdd0:id")).call(null, x);
  var rev = (new cljs.core.Keyword("\ufdd0:rev")).call(null, x);
  var x__$1 = cljs.core.dissoc.call(null, x, "\ufdd0:id", "\ufdd0:rev");
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = id;
    if(cljs.core.truth_(and__3941__auto__)) {
      return rev
    }else {
      return and__3941__auto__
    }
  }())) {
    return cljs.core.assoc.call(null, x__$1, "_id", id, "_rev", rev)
  }else {
    return cljs.core.assoc.call(null, x__$1, "_id", id)
  }
};
orchard.hammock.cljs_ids = function cljs_ids(x) {
  var id = function() {
    var or__3943__auto__ = (new cljs.core.Keyword("\ufdd0:_id")).call(null, x);
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return(new cljs.core.Keyword("\ufdd0:id")).call(null, x)
    }
  }();
  var rev = function() {
    var or__3943__auto__ = (new cljs.core.Keyword("\ufdd0:_rev")).call(null, x);
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return(new cljs.core.Keyword("\ufdd0:rev")).call(null, x)
    }
  }();
  var type = (new cljs.core.Keyword("\ufdd0:type")).call(null, x);
  var x__$1 = cljs.core.dissoc.call(null, x, "\ufdd0:_id", "\ufdd0:_rev");
  return cljs.core.assoc.call(null, x__$1, "\ufdd0:id", id, "\ufdd0:rev", rev, "\ufdd0:type", type)
};
orchard.hammock.base_url = function base_url(r) {
  return[cljs.core.str("http://127.0.0.1:5984/"), cljs.core.str(r)].join("")
};
orchard.hammock.log_error = function log_error(err, msg) {
  return orchard.util.log.log.call(null, "CouchDB Error: ", err, " ", msg)
};
orchard.hammock.encode_json = function encode_json(content) {
  var f = function(p1__433658_SHARP_, p2__433657_SHARP_) {
    if(cljs.core._EQ_.call(null, cljs.core.type.call(null, p2__433657_SHARP_), Function)) {
      return p2__433657_SHARP_.toString()
    }else {
      return p2__433657_SHARP_
    }
  };
  try {
    return JSON.stringify(content, f)
  }catch(e433662) {
    if(e433662 instanceof Error) {
      var e = e433662;
      return orchard.hammock.log_error.call(null, e, "Bad JSON content passed")
    }else {
      if("\ufdd0:else") {
        throw e433662;
      }else {
        return null
      }
    }
  }
};
orchard.hammock.hammock = function() {
  var hammock__delegate = function(args) {
    var args_map = cljs.core.apply.call(null, cljs.core.hash_map, args);
    var data = cljs.core.merge.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:method", "\ufdd0:get", "\ufdd0:db-arg", "_all_dbs"], true), args_map);
    var map__433664 = data;
    var map__433664__$1 = cljs.core.seq_QMARK_.call(null, map__433664) ? cljs.core.apply.call(null, cljs.core.hash_map, map__433664) : map__433664;
    var db_arg = cljs.core.get.call(null, map__433664__$1, "\ufdd0:db-arg");
    var method = cljs.core.get.call(null, map__433664__$1, "\ufdd0:method");
    var method__$1 = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
    var res_chan = cljs.core.async.chan.call(null);
    if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0:content")).call(null, args_map))) {
      var content_433665 = (new cljs.core.Keyword("\ufdd0:content")).call(null, args_map);
      var document_id_433666 = (new cljs.core.Keyword("\ufdd0:id")).call(null, content_433665);
      var data_433667__$1 = cljs.core.truth_(Buffer.isBuffer(content_433665)) ? content_433665 : orchard.hammock.encode_json.call(null, cljs.core.clj__GT_js.call(null, orchard.hammock.couch_ids.call(null, content_433665)));
      var url_433668 = [cljs.core.str(orchard.hammock.base_url.call(null, db_arg)), cljs.core.str("/"), cljs.core.str(document_id_433666)].join("");
      orchard.util.log.log_obj.call(null, data_433667__$1);
      orchard.util.log.log_obj.call(null, Buffer.isBuffer(content_433665));
      orchard.util.fetch.xhr.call(null, cljs.core.PersistentVector.fromArray([method__$1, url_433668], true), data_433667__$1, function(p1__433659_SHARP_) {
        return cljs.core.async.put_BANG_.call(null, res_chan, p1__433659_SHARP_)
      })
    }else {
      orchard.util.fetch.xhr.call(null, cljs.core.PersistentVector.fromArray([method__$1, orchard.hammock.base_url.call(null, db_arg)], true), cljs.core.PersistentArrayMap.EMPTY, function(p1__433660_SHARP_) {
        return cljs.core.async.put_BANG_.call(null, res_chan, p1__433660_SHARP_)
      })
    }
    return res_chan
  };
  var hammock = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hammock__delegate.call(this, args)
  };
  hammock.cljs$lang$maxFixedArity = 0;
  hammock.cljs$lang$applyTo = function(arglist__433669) {
    var args = cljs.core.seq(arglist__433669);
    return hammock__delegate(args)
  };
  hammock.cljs$core$IFn$_invoke$arity$variadic = hammock__delegate;
  return hammock
}();
orchard.hammock.all_dbs = function all_dbs() {
  return orchard.hammock.hammock.call(null, "\ufdd0:db-arg", "_all_dbs")
};
orchard.hammock.create_db = function create_db(db_name) {
  return orchard.hammock.hammock.call(null, "\ufdd0:method", "\ufdd0:put", "\ufdd0:db-arg", db_name)
};
orchard.hammock.delete_db = function delete_db(db_name) {
  return orchard.hammock.hammock.call(null, "\ufdd0:method", "\ufdd0:delete", "\ufdd0:db-arg", db_name)
};
orchard.hammock.insert_document = function insert_document(db_name, document) {
  return orchard.hammock.hammock.call(null, "\ufdd0:method", "\ufdd0:put", "\ufdd0:content", document, "\ufdd0:db-arg", db_name)
};
goog.provide("orchard.objects.synch_btn");
goog.require("cljs.core");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("orchard.util.dom");
goog.require("orchard.util.log");
goog.require("crate.binding");
goog.require("orchard.model");
goog.require("orchard.object");
orchard.objects.synch_btn.btn_view = function btn_view() {
  var e__431428__auto__ = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0:span.btn.btn-small.btn-nav-dark.nav-btn", cljs.core.PersistentVector.fromArray(["\ufdd0:i.icon-refresh.icon-white.nav-icon"], true)], true));
  var seq__437691_437697 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.PersistentVector.fromArray(["\ufdd0:click", function(e) {
    orchard.util.log.log.call(null, "synch projects");
    return orchard.util.log.log_obj.call(null, account)
  }], true)));
  var chunk__437692_437698 = null;
  var count__437693_437699 = 0;
  var i__437694_437700 = 0;
  while(true) {
    if(i__437694_437700 < count__437693_437699) {
      var vec__437695_437701 = cljs.core._nth.call(null, chunk__437692_437698, i__437694_437700);
      var ev__431429__auto___437702 = cljs.core.nth.call(null, vec__437695_437701, 0, null);
      var func__431430__auto___437703 = cljs.core.nth.call(null, vec__437695_437701, 1, null);
      orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437702, func__431430__auto___437703);
      var G__437704 = seq__437691_437697;
      var G__437705 = chunk__437692_437698;
      var G__437706 = count__437693_437699;
      var G__437707 = i__437694_437700 + 1;
      seq__437691_437697 = G__437704;
      chunk__437692_437698 = G__437705;
      count__437693_437699 = G__437706;
      i__437694_437700 = G__437707;
      continue
    }else {
      var temp__4092__auto___437708 = cljs.core.seq.call(null, seq__437691_437697);
      if(temp__4092__auto___437708) {
        var seq__437691_437709__$1 = temp__4092__auto___437708;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__437691_437709__$1)) {
          var c__3259__auto___437710 = cljs.core.chunk_first.call(null, seq__437691_437709__$1);
          var G__437711 = cljs.core.chunk_rest.call(null, seq__437691_437709__$1);
          var G__437712 = c__3259__auto___437710;
          var G__437713 = cljs.core.count.call(null, c__3259__auto___437710);
          var G__437714 = 0;
          seq__437691_437697 = G__437711;
          chunk__437692_437698 = G__437712;
          count__437693_437699 = G__437713;
          i__437694_437700 = G__437714;
          continue
        }else {
          var vec__437696_437715 = cljs.core.first.call(null, seq__437691_437709__$1);
          var ev__431429__auto___437716 = cljs.core.nth.call(null, vec__437696_437715, 0, null);
          var func__431430__auto___437717 = cljs.core.nth.call(null, vec__437696_437715, 1, null);
          orchard.util.dom.on_event.call(null, e__431428__auto__, ev__431429__auto___437716, func__431430__auto___437717);
          var G__437718 = cljs.core.next.call(null, seq__437691_437709__$1);
          var G__437719 = null;
          var G__437720 = 0;
          var G__437721 = 0;
          seq__437691_437697 = G__437718;
          chunk__437692_437698 = G__437719;
          count__437693_437699 = G__437720;
          i__437694_437700 = G__437721;
          continue
        }
      }else {
      }
    }
    break
  }
  return e__431428__auto__
};
orchard.object.object_STAR_.call(null, "\ufdd0:synch-btn", "\ufdd0:triggers", cljs.core.PersistentHashSet.EMPTY, "\ufdd0:behaviors", cljs.core.PersistentVector.EMPTY, "\ufdd0:init", function(this$) {
  return orchard.objects.synch_btn.btn_view.call(null)
});
orchard.objects.synch_btn.synch_btn = orchard.object.create.call(null, "\ufdd0:synch-btn");
